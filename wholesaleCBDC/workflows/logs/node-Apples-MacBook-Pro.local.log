[INFO ] 2021-10-28T06:23:51,091Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:23:51,124Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:23:51,140Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:23:51,601Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:23:54,445Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:23:55,257Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:23:55,449Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:23:55,483Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:23:55,496Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGaaN4ZUdTTV4LcUAfxovhjzmJXUaTkQLhw4mXvmSKCiE, alias: identity-private-key {}
[INFO ] 2021-10-28T06:23:55,746Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,747Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,748Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,748Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,748Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,749Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,749Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,756Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,763Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,764Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,764Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,779Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:23:55,783Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:23:55,942Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:23:56,257Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:23:41.228Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:24:06,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:24:06,290Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:24:06,295Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:24:09,796Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:24:10,112Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:24:10,129Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112), owningKey=DLGaaN4ZUdTTV4LcUAfxovhjzmJXUaTkQLhw4mXvmSKCiE {}
[INFO ] 2021-10-28T06:24:10,130Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:24:10,326Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112) {}
[INFO ] 2021-10-28T06:24:10,398Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:24:10,453Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:24:10,457Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:24:10,487Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112), owningKey=DLGaaN4ZUdTTV4LcUAfxovhjzmJXUaTkQLhw4mXvmSKCiE {}
[INFO ] 2021-10-28T06:24:10,487Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:10,660Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:24:10,677Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:24:10,691Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:24:10,792Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:24:10,908Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:24:10,931Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:24:11,648Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112) {}
[INFO ] 2021-10-28T06:24:11,663Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112), owningKey=DLGaaN4ZUdTTV4LcUAfxovhjzmJXUaTkQLhw4mXvmSKCiE {}
[INFO ] 2021-10-28T06:24:11,663Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:11,663Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112), owningKey=DLGaaN4ZUdTTV4LcUAfxovhjzmJXUaTkQLhw4mXvmSKCiE {}
[INFO ] 2021-10-28T06:24:11,663Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:11,677Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:24:11,678Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:24:11,678Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:24:11,738Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:24:11,805Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:24:11,807Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:24:11,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:24:11,855Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:24:11,855Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9NQqQHYtiWrJsGGYM6v13hxj9FWtENQNaAtHBob9a8FJ, alias: identity-private-key {}
[INFO ] 2021-10-28T06:24:11,864Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,865Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,865Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,865Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,865Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,866Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,866Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,867Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,867Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,867Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,867Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,867Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:24:11,867Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,867Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:24:11,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:23:41.228Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:24:12,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:24:12,801Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:24:12,801Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:24:13,075Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:24:13,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:24:13,105Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089), owningKey=DL9NQqQHYtiWrJsGGYM6v13hxj9FWtENQNaAtHBob9a8FJ {}
[INFO ] 2021-10-28T06:24:13,105Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:24:13,149Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089) {}
[INFO ] 2021-10-28T06:24:13,166Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:24:13,168Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:24:13,169Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:24:13,179Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089), owningKey=DL9NQqQHYtiWrJsGGYM6v13hxj9FWtENQNaAtHBob9a8FJ {}
[INFO ] 2021-10-28T06:24:13,179Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:13,222Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:24:13,225Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:24:13,225Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:24:13,225Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:24:13,234Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:24:13,262Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089) {}
[INFO ] 2021-10-28T06:24:13,264Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112), owningKey=DLGaaN4ZUdTTV4LcUAfxovhjzmJXUaTkQLhw4mXvmSKCiE {}
[INFO ] 2021-10-28T06:24:13,264Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:24:13,278Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089), owningKey=DL9NQqQHYtiWrJsGGYM6v13hxj9FWtENQNaAtHBob9a8FJ {}
[INFO ] 2021-10-28T06:24:13,278Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:24:13,291Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089), owningKey=DL9NQqQHYtiWrJsGGYM6v13hxj9FWtENQNaAtHBob9a8FJ {}
[INFO ] 2021-10-28T06:24:13,291Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:13,291Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089), owningKey=DL9NQqQHYtiWrJsGGYM6v13hxj9FWtENQNaAtHBob9a8FJ {}
[INFO ] 2021-10-28T06:24:13,291Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:13,302Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:24:13,302Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:24:13,302Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:24:13,326Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:24:13,374Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:24:13,375Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:24:13,377Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:24:13,425Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:24:13,425Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAredUBG1rUToJhhSXvgKRwoaeoxycoAUpHjFrKnLzkB6, alias: identity-private-key {}
[INFO ] 2021-10-28T06:24:13,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:24:13,441Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:23:41.228Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:24:14,215Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:24:14,217Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:24:14,217Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:24:14,481Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:24:14,487Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:24:14,492Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487), owningKey=DLAredUBG1rUToJhhSXvgKRwoaeoxycoAUpHjFrKnLzkB6 {}
[INFO ] 2021-10-28T06:24:14,492Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:24:14,506Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487) {}
[INFO ] 2021-10-28T06:24:14,515Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:24:14,516Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:24:14,516Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:24:14,524Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487), owningKey=DLAredUBG1rUToJhhSXvgKRwoaeoxycoAUpHjFrKnLzkB6 {}
[INFO ] 2021-10-28T06:24:14,524Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:14,562Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:24:14,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:24:14,576Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062343.849-8174EC1C60CFA1B0/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:24:14,579Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:24:14,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:24:14,617Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487) {}
[INFO ] 2021-10-28T06:24:14,620Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402250112), owningKey=DLGaaN4ZUdTTV4LcUAfxovhjzmJXUaTkQLhw4mXvmSKCiE {}
[INFO ] 2021-10-28T06:24:14,620Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:24:14,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487), owningKey=DLAredUBG1rUToJhhSXvgKRwoaeoxycoAUpHjFrKnLzkB6 {}
[INFO ] 2021-10-28T06:24:14,637Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:24:14,667Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402253089), owningKey=DL9NQqQHYtiWrJsGGYM6v13hxj9FWtENQNaAtHBob9a8FJ {}
[INFO ] 2021-10-28T06:24:14,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:24:14,689Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487), owningKey=DLAredUBG1rUToJhhSXvgKRwoaeoxycoAUpHjFrKnLzkB6 {}
[INFO ] 2021-10-28T06:24:14,689Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:24:14,700Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487), owningKey=DLAredUBG1rUToJhhSXvgKRwoaeoxycoAUpHjFrKnLzkB6 {}
[INFO ] 2021-10-28T06:24:14,700Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:14,700Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402254487), owningKey=DLAredUBG1rUToJhhSXvgKRwoaeoxycoAUpHjFrKnLzkB6 {}
[INFO ] 2021-10-28T06:24:14,700Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:24:16,102Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6c9f2dbf-fb0c-445e-99bd-9dc0f28290bf, invocation_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, invocation_timestamp=2021-10-28T06:24:14.743Z, origin=Only For Testing, session_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, session_timestamp=2021-10-28T06:24:14.743Z, thread-id=172, tx_id=BC26E76AB996E3487142C40B1012F029067397A87F7F4CC86E390F33F5704F57}
[INFO ] 2021-10-28T06:24:16,102Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6c9f2dbf-fb0c-445e-99bd-9dc0f28290bf, invocation_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, invocation_timestamp=2021-10-28T06:24:14.743Z, origin=Only For Testing, session_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, session_timestamp=2021-10-28T06:24:14.743Z, thread-id=172, tx_id=BC26E76AB996E3487142C40B1012F029067397A87F7F4CC86E390F33F5704F57}
[INFO ] 2021-10-28T06:24:16,266Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6c9f2dbf-fb0c-445e-99bd-9dc0f28290bf, invocation_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, invocation_timestamp=2021-10-28T06:24:14.743Z, origin=Only For Testing, session_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, session_timestamp=2021-10-28T06:24:14.743Z, thread-id=172, tx_id=BC26E76AB996E3487142C40B1012F029067397A87F7F4CC86E390F33F5704F57}
[INFO ] 2021-10-28T06:24:16,267Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=6c9f2dbf-fb0c-445e-99bd-9dc0f28290bf, invocation_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, invocation_timestamp=2021-10-28T06:24:14.743Z, origin=Only For Testing, session_id=89db64bc-b9db-414e-be6c-9d770ef27eb1, session_timestamp=2021-10-28T06:24:14.743Z, thread-id=172, tx_id=BC26E76AB996E3487142C40B1012F029067397A87F7F4CC86E390F33F5704F57}
[INFO ] 2021-10-28T06:24:16,427Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T06:24:16,456Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:24:16,456Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:24:16,461Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T06:24:16,472Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:24:16,472Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:24:16,476Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T06:24:16,487Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:24:16,487Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:25:33,643Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:25:33,709Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:25:33,728Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:25:34,400Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:25:36,441Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:25:36,956Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:25:37,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:25:37,124Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:25:37,132Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGfiJ2MFyrgtgCKg9ya8bdAPowFuY6rgZb9j75PByftj9, alias: identity-private-key {}
[INFO ] 2021-10-28T06:25:37,379Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,381Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,381Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,383Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,384Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,385Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,386Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,386Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,387Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,389Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:25:37,390Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,466Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:25:37,670Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:25:22.986Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:25:49,001Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:25:49,143Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:25:49,153Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:25:53,509Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:25:53,890Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:25:53,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890), owningKey=DLGfiJ2MFyrgtgCKg9ya8bdAPowFuY6rgZb9j75PByftj9 {}
[INFO ] 2021-10-28T06:25:53,906Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:25:54,136Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890) {}
[INFO ] 2021-10-28T06:25:54,226Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:25:54,268Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:25:54,270Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:25:54,304Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890), owningKey=DLGfiJ2MFyrgtgCKg9ya8bdAPowFuY6rgZb9j75PByftj9 {}
[INFO ] 2021-10-28T06:25:54,304Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:54,452Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:25:54,473Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:25:54,486Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:25:54,635Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:25:54,752Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:25:54,752Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:25:55,517Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890) {}
[INFO ] 2021-10-28T06:25:55,528Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890), owningKey=DLGfiJ2MFyrgtgCKg9ya8bdAPowFuY6rgZb9j75PByftj9 {}
[INFO ] 2021-10-28T06:25:55,528Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:55,529Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890), owningKey=DLGfiJ2MFyrgtgCKg9ya8bdAPowFuY6rgZb9j75PByftj9 {}
[INFO ] 2021-10-28T06:25:55,529Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:55,544Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:25:55,548Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:25:55,548Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:25:55,562Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:25:55,640Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:25:55,643Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:25:55,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:25:55,724Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:25:55,724Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEbE9nXUrEczeKnrGb3By9pkm29gifaCPaRkgpi1d7SgS, alias: identity-private-key {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,744Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,745Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:25:55,745Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,745Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:25:55,749Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:25:22.986Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:25:56,643Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:25:56,679Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:25:56,679Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:25:56,973Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:25:57,044Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:25:57,049Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044), owningKey=DLEbE9nXUrEczeKnrGb3By9pkm29gifaCPaRkgpi1d7SgS {}
[INFO ] 2021-10-28T06:25:57,049Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:25:57,064Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044) {}
[INFO ] 2021-10-28T06:25:57,073Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:25:57,073Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:25:57,073Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:25:57,081Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044), owningKey=DLEbE9nXUrEczeKnrGb3By9pkm29gifaCPaRkgpi1d7SgS {}
[INFO ] 2021-10-28T06:25:57,081Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:57,128Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:25:57,132Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:25:57,133Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:25:57,133Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:25:57,144Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:25:57,179Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044) {}
[INFO ] 2021-10-28T06:25:57,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890), owningKey=DLGfiJ2MFyrgtgCKg9ya8bdAPowFuY6rgZb9j75PByftj9 {}
[INFO ] 2021-10-28T06:25:57,182Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:25:57,199Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044), owningKey=DLEbE9nXUrEczeKnrGb3By9pkm29gifaCPaRkgpi1d7SgS {}
[INFO ] 2021-10-28T06:25:57,199Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:25:57,211Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044), owningKey=DLEbE9nXUrEczeKnrGb3By9pkm29gifaCPaRkgpi1d7SgS {}
[INFO ] 2021-10-28T06:25:57,211Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:57,211Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044), owningKey=DLEbE9nXUrEczeKnrGb3By9pkm29gifaCPaRkgpi1d7SgS {}
[INFO ] 2021-10-28T06:25:57,211Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:57,223Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:25:57,224Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:25:57,224Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:25:57,235Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:25:57,298Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:25:57,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:25:57,301Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:25:57,336Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:25:57,336Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHN9aMvAm6mtbVJMVNaL2WhrJXTxX9z3kvj8q63Vve4Pr, alias: identity-private-key {}
[INFO ] 2021-10-28T06:25:57,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:25:57,347Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,347Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:25:57,359Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:25:22.986Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:25:58,190Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:25:58,192Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:25:58,192Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:25:58,350Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:25:58,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:25:58,364Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360), owningKey=DLHN9aMvAm6mtbVJMVNaL2WhrJXTxX9z3kvj8q63Vve4Pr {}
[INFO ] 2021-10-28T06:25:58,364Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:25:58,372Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360) {}
[INFO ] 2021-10-28T06:25:58,381Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:25:58,381Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:25:58,381Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:25:58,425Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360), owningKey=DLHN9aMvAm6mtbVJMVNaL2WhrJXTxX9z3kvj8q63Vve4Pr {}
[INFO ] 2021-10-28T06:25:58,425Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:58,442Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:25:58,444Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:25:58,445Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062525.794-75C6D96585E84FB4/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:25:58,447Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:25:58,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:25:58,476Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360) {}
[INFO ] 2021-10-28T06:25:58,478Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402353890), owningKey=DLGfiJ2MFyrgtgCKg9ya8bdAPowFuY6rgZb9j75PByftj9 {}
[INFO ] 2021-10-28T06:25:58,478Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:25:58,492Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360), owningKey=DLHN9aMvAm6mtbVJMVNaL2WhrJXTxX9z3kvj8q63Vve4Pr {}
[INFO ] 2021-10-28T06:25:58,492Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:25:58,506Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402357044), owningKey=DLEbE9nXUrEczeKnrGb3By9pkm29gifaCPaRkgpi1d7SgS {}
[INFO ] 2021-10-28T06:25:58,506Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:25:58,517Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360), owningKey=DLHN9aMvAm6mtbVJMVNaL2WhrJXTxX9z3kvj8q63Vve4Pr {}
[INFO ] 2021-10-28T06:25:58,517Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:25:58,526Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360), owningKey=DLHN9aMvAm6mtbVJMVNaL2WhrJXTxX9z3kvj8q63Vve4Pr {}
[INFO ] 2021-10-28T06:25:58,526Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:25:58,527Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402358360), owningKey=DLHN9aMvAm6mtbVJMVNaL2WhrJXTxX9z3kvj8q63Vve4Pr {}
[INFO ] 2021-10-28T06:25:58,527Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:35,386Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:27:35,657Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:27:35,676Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:27:35,953Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:27:38,035Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:27:38,430Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:27:38,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:27:38,577Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:27:38,589Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5G1tgJXKgui5Bbxhawvgs35Ncx7zTTpj7f4nMizRAxH8, alias: identity-private-key {}
[INFO ] 2021-10-28T06:27:38,905Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,905Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,906Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,906Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,909Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,910Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,911Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,911Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,913Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,913Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:27:38,915Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:27:38,916Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:27:39,015Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:27:39,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:27:24.040Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:27:49,941Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:27:50,188Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:27:50,198Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:27:54,187Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:27:54,637Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:27:54,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637), owningKey=DL5G1tgJXKgui5Bbxhawvgs35Ncx7zTTpj7f4nMizRAxH8 {}
[INFO ] 2021-10-28T06:27:54,660Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:27:54,938Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637) {}
[INFO ] 2021-10-28T06:27:55,034Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:27:55,069Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:27:55,071Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:27:55,106Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637), owningKey=DL5G1tgJXKgui5Bbxhawvgs35Ncx7zTTpj7f4nMizRAxH8 {}
[INFO ] 2021-10-28T06:27:55,106Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:55,398Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:27:55,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:27:55,446Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:27:55,593Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:27:55,701Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:27:55,702Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:27:56,537Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637) {}
[INFO ] 2021-10-28T06:27:56,550Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637), owningKey=DL5G1tgJXKgui5Bbxhawvgs35Ncx7zTTpj7f4nMizRAxH8 {}
[INFO ] 2021-10-28T06:27:56,550Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:56,551Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637), owningKey=DL5G1tgJXKgui5Bbxhawvgs35Ncx7zTTpj7f4nMizRAxH8 {}
[INFO ] 2021-10-28T06:27:56,551Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:56,566Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:27:56,566Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:27:56,566Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:27:56,594Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:27:56,721Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:27:56,723Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:27:56,726Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:27:56,771Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:27:56,771Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHcmvXxoFC49kPopYkKyX2yQ7Nmy2BY26GFNCZgvKta4X, alias: identity-private-key {}
[INFO ] 2021-10-28T06:27:56,781Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,781Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,781Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,781Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,781Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,781Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,781Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,782Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,782Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,782Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,782Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,782Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:27:56,782Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,783Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:27:56,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:27:24.040Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:27:57,856Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:27:57,858Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:27:57,858Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:27:58,200Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:27:58,270Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:27:58,279Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270), owningKey=DLHcmvXxoFC49kPopYkKyX2yQ7Nmy2BY26GFNCZgvKta4X {}
[INFO ] 2021-10-28T06:27:58,279Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:27:58,297Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270) {}
[INFO ] 2021-10-28T06:27:58,315Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:27:58,319Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:27:58,319Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:27:58,337Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270), owningKey=DLHcmvXxoFC49kPopYkKyX2yQ7Nmy2BY26GFNCZgvKta4X {}
[INFO ] 2021-10-28T06:27:58,337Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:58,386Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:27:58,389Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:27:58,390Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:27:58,391Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:27:58,411Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:27:58,451Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270) {}
[INFO ] 2021-10-28T06:27:58,453Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637), owningKey=DL5G1tgJXKgui5Bbxhawvgs35Ncx7zTTpj7f4nMizRAxH8 {}
[INFO ] 2021-10-28T06:27:58,453Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:27:58,466Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270), owningKey=DLHcmvXxoFC49kPopYkKyX2yQ7Nmy2BY26GFNCZgvKta4X {}
[INFO ] 2021-10-28T06:27:58,466Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:27:58,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270), owningKey=DLHcmvXxoFC49kPopYkKyX2yQ7Nmy2BY26GFNCZgvKta4X {}
[INFO ] 2021-10-28T06:27:58,477Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:58,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270), owningKey=DLHcmvXxoFC49kPopYkKyX2yQ7Nmy2BY26GFNCZgvKta4X {}
[INFO ] 2021-10-28T06:27:58,477Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:58,504Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:27:58,505Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:27:58,505Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:27:58,523Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:27:58,580Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:27:58,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:27:58,594Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:27:58,641Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:27:58,641Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEh3kzNZK7MFoZcQcVmiS3upFQnTTnYAMhHGCJRJMQ1qC, alias: identity-private-key {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,650Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,651Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,651Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,651Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,651Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:27:58,651Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,651Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:27:58,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:27:24.040Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:27:59,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:27:59,596Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:27:59,596Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:27:59,828Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:27:59,836Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:27:59,843Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836), owningKey=DLEh3kzNZK7MFoZcQcVmiS3upFQnTTnYAMhHGCJRJMQ1qC {}
[INFO ] 2021-10-28T06:27:59,843Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:27:59,855Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836) {}
[INFO ] 2021-10-28T06:27:59,868Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:27:59,868Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:27:59,868Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:27:59,943Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836), owningKey=DLEh3kzNZK7MFoZcQcVmiS3upFQnTTnYAMhHGCJRJMQ1qC {}
[INFO ] 2021-10-28T06:27:59,943Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:27:59,964Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:27:59,968Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:27:59,968Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-062727.124-D868EE42FB07E9AA/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:27:59,969Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:27:59,978Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:28:00,015Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836) {}
[INFO ] 2021-10-28T06:28:00,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635402474637), owningKey=DL5G1tgJXKgui5Bbxhawvgs35Ncx7zTTpj7f4nMizRAxH8 {}
[INFO ] 2021-10-28T06:28:00,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:28:00,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836), owningKey=DLEh3kzNZK7MFoZcQcVmiS3upFQnTTnYAMhHGCJRJMQ1qC {}
[INFO ] 2021-10-28T06:28:00,039Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:28:00,053Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635402478270), owningKey=DLHcmvXxoFC49kPopYkKyX2yQ7Nmy2BY26GFNCZgvKta4X {}
[INFO ] 2021-10-28T06:28:00,053Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:28:00,066Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836), owningKey=DLEh3kzNZK7MFoZcQcVmiS3upFQnTTnYAMhHGCJRJMQ1qC {}
[INFO ] 2021-10-28T06:28:00,066Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:28:00,078Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836), owningKey=DLEh3kzNZK7MFoZcQcVmiS3upFQnTTnYAMhHGCJRJMQ1qC {}
[INFO ] 2021-10-28T06:28:00,078Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:28:00,078Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635402479836), owningKey=DLEh3kzNZK7MFoZcQcVmiS3upFQnTTnYAMhHGCJRJMQ1qC {}
[INFO ] 2021-10-28T06:28:00,078Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:28:01,548Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e24699fe-dfba-4499-98e1-60867004edd8, invocation_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, invocation_timestamp=2021-10-28T06:28:00.136Z, origin=Only For Testing, session_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, session_timestamp=2021-10-28T06:28:00.136Z, thread-id=174, tx_id=543B44F3664833C37E5EDB691249C34AE500D48E23B41097A5A48EA3B46555D4}
[INFO ] 2021-10-28T06:28:01,548Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e24699fe-dfba-4499-98e1-60867004edd8, invocation_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, invocation_timestamp=2021-10-28T06:28:00.136Z, origin=Only For Testing, session_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, session_timestamp=2021-10-28T06:28:00.136Z, thread-id=174, tx_id=543B44F3664833C37E5EDB691249C34AE500D48E23B41097A5A48EA3B46555D4}
[INFO ] 2021-10-28T06:28:01,737Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e24699fe-dfba-4499-98e1-60867004edd8, invocation_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, invocation_timestamp=2021-10-28T06:28:00.136Z, origin=Only For Testing, session_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, session_timestamp=2021-10-28T06:28:00.136Z, thread-id=174, tx_id=543B44F3664833C37E5EDB691249C34AE500D48E23B41097A5A48EA3B46555D4}
[INFO ] 2021-10-28T06:28:01,738Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e24699fe-dfba-4499-98e1-60867004edd8, invocation_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, invocation_timestamp=2021-10-28T06:28:00.136Z, origin=Only For Testing, session_id=b073bcaa-f7e9-4b7e-8ead-cc5d5a79e033, session_timestamp=2021-10-28T06:28:00.136Z, thread-id=174, tx_id=543B44F3664833C37E5EDB691249C34AE500D48E23B41097A5A48EA3B46555D4}
[INFO ] 2021-10-28T06:43:59,619Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:43:59,652Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:43:59,667Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:44:00,106Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:44:01,774Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:44:02,108Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:44:02,180Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:44:02,201Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:44:02,206Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAZ5GM3dMMatNGeg1WhtUa6nYAyUNhKKUQF9voKQLif6K, alias: identity-private-key {}
[INFO ] 2021-10-28T06:44:02,354Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,355Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,356Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,356Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,356Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,358Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,358Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,358Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,359Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:44:02,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,405Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:44:02,539Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:43:49.856Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:44:09,458Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:44:09,550Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:44:09,557Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:44:12,899Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:44:13,200Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:44:13,212Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201), owningKey=DLAZ5GM3dMMatNGeg1WhtUa6nYAyUNhKKUQF9voKQLif6K {}
[INFO ] 2021-10-28T06:44:13,212Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:44:13,409Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201) {}
[INFO ] 2021-10-28T06:44:13,468Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:44:13,507Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:44:13,510Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:44:13,544Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201), owningKey=DLAZ5GM3dMMatNGeg1WhtUa6nYAyUNhKKUQF9voKQLif6K {}
[INFO ] 2021-10-28T06:44:13,544Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:13,700Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:44:13,719Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:44:13,730Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:44:13,813Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:44:13,909Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:44:13,910Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:44:14,612Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201) {}
[INFO ] 2021-10-28T06:44:14,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201), owningKey=DLAZ5GM3dMMatNGeg1WhtUa6nYAyUNhKKUQF9voKQLif6K {}
[INFO ] 2021-10-28T06:44:14,629Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:14,634Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201), owningKey=DLAZ5GM3dMMatNGeg1WhtUa6nYAyUNhKKUQF9voKQLif6K {}
[INFO ] 2021-10-28T06:44:14,641Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:14,672Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:44:14,672Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:44:14,672Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:44:14,714Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:44:14,766Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:44:14,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:44:14,767Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:44:14,818Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:44:14,818Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGu6mdKBbjGxpgxdeUaU9odG45pg3bLriToSDJ6Pm4GH9, alias: identity-private-key {}
[INFO ] 2021-10-28T06:44:14,825Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,827Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:44:14,827Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,827Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:44:14,848Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:43:49.856Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:44:15,767Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:44:15,770Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:44:15,771Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:44:15,969Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:44:15,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:44:15,982Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977), owningKey=DLGu6mdKBbjGxpgxdeUaU9odG45pg3bLriToSDJ6Pm4GH9 {}
[INFO ] 2021-10-28T06:44:15,982Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:44:15,994Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977) {}
[INFO ] 2021-10-28T06:44:16,004Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:44:16,004Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:44:16,004Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:44:16,013Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977), owningKey=DLGu6mdKBbjGxpgxdeUaU9odG45pg3bLriToSDJ6Pm4GH9 {}
[INFO ] 2021-10-28T06:44:16,013Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:16,052Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:44:16,055Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:44:16,055Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:44:16,056Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:44:16,060Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:44:16,088Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977) {}
[INFO ] 2021-10-28T06:44:16,090Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201), owningKey=DLAZ5GM3dMMatNGeg1WhtUa6nYAyUNhKKUQF9voKQLif6K {}
[INFO ] 2021-10-28T06:44:16,090Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:44:16,104Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977), owningKey=DLGu6mdKBbjGxpgxdeUaU9odG45pg3bLriToSDJ6Pm4GH9 {}
[INFO ] 2021-10-28T06:44:16,104Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:44:16,115Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977), owningKey=DLGu6mdKBbjGxpgxdeUaU9odG45pg3bLriToSDJ6Pm4GH9 {}
[INFO ] 2021-10-28T06:44:16,115Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:16,115Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977), owningKey=DLGu6mdKBbjGxpgxdeUaU9odG45pg3bLriToSDJ6Pm4GH9 {}
[INFO ] 2021-10-28T06:44:16,115Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:16,126Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:44:16,127Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:44:16,127Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:44:16,139Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:44:16,183Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:44:16,184Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:44:16,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:44:16,224Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:44:16,224Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCth2Chf57rQ1VbmwPHsyDpJrGBHWWB4jPQyd9JYQBRzU, alias: identity-private-key {}
[INFO ] 2021-10-28T06:44:16,232Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,232Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,232Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:44:16,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:44:16,239Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:43:49.856Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:44:16,935Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:44:16,938Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:44:16,938Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:44:17,125Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:44:17,137Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:44:17,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137), owningKey=DLCth2Chf57rQ1VbmwPHsyDpJrGBHWWB4jPQyd9JYQBRzU {}
[INFO ] 2021-10-28T06:44:17,142Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:44:17,153Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137) {}
[INFO ] 2021-10-28T06:44:17,162Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:44:17,168Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:44:17,168Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:44:17,171Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137), owningKey=DLCth2Chf57rQ1VbmwPHsyDpJrGBHWWB4jPQyd9JYQBRzU {}
[INFO ] 2021-10-28T06:44:17,171Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:17,218Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:44:17,223Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:44:17,225Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-064352.240-47C7BCF23F994944/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:44:17,226Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:44:17,238Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:44:17,284Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137) {}
[INFO ] 2021-10-28T06:44:17,289Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403453201), owningKey=DLAZ5GM3dMMatNGeg1WhtUa6nYAyUNhKKUQF9voKQLif6K {}
[INFO ] 2021-10-28T06:44:17,289Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:44:17,304Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137), owningKey=DLCth2Chf57rQ1VbmwPHsyDpJrGBHWWB4jPQyd9JYQBRzU {}
[INFO ] 2021-10-28T06:44:17,304Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:44:17,320Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403455977), owningKey=DLGu6mdKBbjGxpgxdeUaU9odG45pg3bLriToSDJ6Pm4GH9 {}
[INFO ] 2021-10-28T06:44:17,320Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:44:17,333Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137), owningKey=DLCth2Chf57rQ1VbmwPHsyDpJrGBHWWB4jPQyd9JYQBRzU {}
[INFO ] 2021-10-28T06:44:17,333Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:44:17,347Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137), owningKey=DLCth2Chf57rQ1VbmwPHsyDpJrGBHWWB4jPQyd9JYQBRzU {}
[INFO ] 2021-10-28T06:44:17,347Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:17,348Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403457137), owningKey=DLCth2Chf57rQ1VbmwPHsyDpJrGBHWWB4jPQyd9JYQBRzU {}
[INFO ] 2021-10-28T06:44:17,348Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:44:18,503Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7dc19a94-5cf2-46fd-b6a6-a5f110ae16a7, invocation_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, invocation_timestamp=2021-10-28T06:44:17.385Z, origin=Only For Testing, session_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, session_timestamp=2021-10-28T06:44:17.385Z, thread-id=170, tx_id=DEFB7E9535984265A861D3D5EA7C122EB79297133357E544E5579499D7E516C0}
[INFO ] 2021-10-28T06:44:18,503Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7dc19a94-5cf2-46fd-b6a6-a5f110ae16a7, invocation_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, invocation_timestamp=2021-10-28T06:44:17.385Z, origin=Only For Testing, session_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, session_timestamp=2021-10-28T06:44:17.385Z, thread-id=170, tx_id=DEFB7E9535984265A861D3D5EA7C122EB79297133357E544E5579499D7E516C0}
[INFO ] 2021-10-28T06:44:18,644Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7dc19a94-5cf2-46fd-b6a6-a5f110ae16a7, invocation_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, invocation_timestamp=2021-10-28T06:44:17.385Z, origin=Only For Testing, session_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, session_timestamp=2021-10-28T06:44:17.385Z, thread-id=170, tx_id=DEFB7E9535984265A861D3D5EA7C122EB79297133357E544E5579499D7E516C0}
[INFO ] 2021-10-28T06:44:18,645Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7dc19a94-5cf2-46fd-b6a6-a5f110ae16a7, invocation_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, invocation_timestamp=2021-10-28T06:44:17.385Z, origin=Only For Testing, session_id=8528e5f2-1114-4e44-bc36-53fd3f52342f, session_timestamp=2021-10-28T06:44:17.385Z, thread-id=170, tx_id=DEFB7E9535984265A861D3D5EA7C122EB79297133357E544E5579499D7E516C0}
[INFO ] 2021-10-28T06:44:18,793Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T06:44:18,815Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:44:18,815Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:44:18,820Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T06:44:18,834Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:44:18,834Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:44:18,836Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T06:44:18,849Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:44:18,849Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:49:34,220Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-064927.008-069BC9D415260189/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:49:34,265Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:49:34,280Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:49:34,539Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:49:36,035Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:49:36,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:49:36,440Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:49:36,472Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:49:36,477Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5P5HCuym7ami1ZuR4oQFcKypeU5Msnk5UErwpypE6Z6d, alias: identity-private-key {}
[INFO ] 2021-10-28T06:49:36,636Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,639Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,640Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,640Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,641Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,641Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,641Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,642Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:49:36,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,703Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:49:36,800Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:49:24.593Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:49:44,104Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:49:44,197Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:49:44,204Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:49:47,043Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:49:47,368Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:49:47,383Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368), owningKey=DL5P5HCuym7ami1ZuR4oQFcKypeU5Msnk5UErwpypE6Z6d {}
[INFO ] 2021-10-28T06:49:47,383Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:49:47,540Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368) {}
[INFO ] 2021-10-28T06:49:47,602Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:49:47,636Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:49:47,638Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:49:47,685Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368), owningKey=DL5P5HCuym7ami1ZuR4oQFcKypeU5Msnk5UErwpypE6Z6d {}
[INFO ] 2021-10-28T06:49:47,685Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:47,802Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:49:47,822Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:49:47,835Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-064927.008-069BC9D415260189/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:49:47,925Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:49:48,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:49:48,013Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:49:48,667Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368) {}
[INFO ] 2021-10-28T06:49:48,679Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368), owningKey=DL5P5HCuym7ami1ZuR4oQFcKypeU5Msnk5UErwpypE6Z6d {}
[INFO ] 2021-10-28T06:49:48,679Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:48,679Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368), owningKey=DL5P5HCuym7ami1ZuR4oQFcKypeU5Msnk5UErwpypE6Z6d {}
[INFO ] 2021-10-28T06:49:48,679Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:48,697Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-064927.008-069BC9D415260189/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:49:48,698Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:49:48,698Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:49:48,710Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:49:48,776Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:49:48,778Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:49:48,780Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:49:48,821Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:49:48,821Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCHywZAxoWM2tuAcnu3JXAW7QM4wNGh2zxusd4ZCRzD92, alias: identity-private-key {}
[INFO ] 2021-10-28T06:49:48,828Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,828Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,828Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,828Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,828Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,828Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,829Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:49:48,835Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:49:24.593Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:49:49,749Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:49:49,750Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:49:49,750Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:49:50,010Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:49:50,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:49:50,023Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019), owningKey=DLCHywZAxoWM2tuAcnu3JXAW7QM4wNGh2zxusd4ZCRzD92 {}
[INFO ] 2021-10-28T06:49:50,023Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:49:50,036Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019) {}
[INFO ] 2021-10-28T06:49:50,055Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:49:50,058Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:49:50,058Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:49:50,069Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019), owningKey=DLCHywZAxoWM2tuAcnu3JXAW7QM4wNGh2zxusd4ZCRzD92 {}
[INFO ] 2021-10-28T06:49:50,069Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:50,120Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:49:50,123Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:49:50,123Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-064927.008-069BC9D415260189/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:49:50,124Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:49:50,132Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:49:50,162Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019) {}
[INFO ] 2021-10-28T06:49:50,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368), owningKey=DL5P5HCuym7ami1ZuR4oQFcKypeU5Msnk5UErwpypE6Z6d {}
[INFO ] 2021-10-28T06:49:50,165Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:49:50,183Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019), owningKey=DLCHywZAxoWM2tuAcnu3JXAW7QM4wNGh2zxusd4ZCRzD92 {}
[INFO ] 2021-10-28T06:49:50,183Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:49:50,196Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019), owningKey=DLCHywZAxoWM2tuAcnu3JXAW7QM4wNGh2zxusd4ZCRzD92 {}
[INFO ] 2021-10-28T06:49:50,196Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:50,196Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019), owningKey=DLCHywZAxoWM2tuAcnu3JXAW7QM4wNGh2zxusd4ZCRzD92 {}
[INFO ] 2021-10-28T06:49:50,196Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:50,210Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-064927.008-069BC9D415260189/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:49:50,210Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:49:50,210Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:49:50,222Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-064927.008-069BC9D415260189/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:49:50,266Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:49:50,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:49:50,269Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:49:50,309Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:49:50,309Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3oAb6ib43eKAjoxwQLtE6GpXTmLoRajCp3CfBEgdMEy7, alias: identity-private-key {}
[INFO ] 2021-10-28T06:49:50,316Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,316Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,317Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,317Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,317Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,317Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,317Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,318Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,318Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,318Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,318Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,318Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:49:50,318Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,319Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:49:50,334Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:49:24.593Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:49:51,041Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:49:51,042Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:49:51,042Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:49:51,243Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:49:51,254Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:49:51,263Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255), owningKey=DL3oAb6ib43eKAjoxwQLtE6GpXTmLoRajCp3CfBEgdMEy7 {}
[INFO ] 2021-10-28T06:49:51,263Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:49:51,275Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255) {}
[INFO ] 2021-10-28T06:49:51,282Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:49:51,284Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:49:51,284Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:49:51,291Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255), owningKey=DL3oAb6ib43eKAjoxwQLtE6GpXTmLoRajCp3CfBEgdMEy7 {}
[INFO ] 2021-10-28T06:49:51,291Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:51,329Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:49:51,332Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:49:51,332Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-064927.008-069BC9D415260189/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:49:51,333Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:49:51,349Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:49:51,373Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255) {}
[INFO ] 2021-10-28T06:49:51,376Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403787368), owningKey=DL5P5HCuym7ami1ZuR4oQFcKypeU5Msnk5UErwpypE6Z6d {}
[INFO ] 2021-10-28T06:49:51,376Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:49:51,393Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255), owningKey=DL3oAb6ib43eKAjoxwQLtE6GpXTmLoRajCp3CfBEgdMEy7 {}
[INFO ] 2021-10-28T06:49:51,393Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:49:51,410Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403790019), owningKey=DLCHywZAxoWM2tuAcnu3JXAW7QM4wNGh2zxusd4ZCRzD92 {}
[INFO ] 2021-10-28T06:49:51,410Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:49:51,423Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255), owningKey=DL3oAb6ib43eKAjoxwQLtE6GpXTmLoRajCp3CfBEgdMEy7 {}
[INFO ] 2021-10-28T06:49:51,423Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:49:51,435Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255), owningKey=DL3oAb6ib43eKAjoxwQLtE6GpXTmLoRajCp3CfBEgdMEy7 {}
[INFO ] 2021-10-28T06:49:51,435Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:51,436Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403791255), owningKey=DL3oAb6ib43eKAjoxwQLtE6GpXTmLoRajCp3CfBEgdMEy7 {}
[INFO ] 2021-10-28T06:49:51,436Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:49:52,827Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=299f05f8-b746-4fc1-bad6-4cd68ccb3852, invocation_id=13c07144-9495-4320-a1fa-b7b38a65ba21, invocation_timestamp=2021-10-28T06:49:51.479Z, origin=Only For Testing, session_id=13c07144-9495-4320-a1fa-b7b38a65ba21, session_timestamp=2021-10-28T06:49:51.479Z, thread-id=170, tx_id=BB37FF58EEF2541DFE5D930ECF605E91FCB73F040FDFC9780169A9CC64C87A39}
[INFO ] 2021-10-28T06:49:52,827Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=299f05f8-b746-4fc1-bad6-4cd68ccb3852, invocation_id=13c07144-9495-4320-a1fa-b7b38a65ba21, invocation_timestamp=2021-10-28T06:49:51.479Z, origin=Only For Testing, session_id=13c07144-9495-4320-a1fa-b7b38a65ba21, session_timestamp=2021-10-28T06:49:51.479Z, thread-id=170, tx_id=BB37FF58EEF2541DFE5D930ECF605E91FCB73F040FDFC9780169A9CC64C87A39}
[INFO ] 2021-10-28T06:49:52,963Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=299f05f8-b746-4fc1-bad6-4cd68ccb3852, invocation_id=13c07144-9495-4320-a1fa-b7b38a65ba21, invocation_timestamp=2021-10-28T06:49:51.479Z, origin=Only For Testing, session_id=13c07144-9495-4320-a1fa-b7b38a65ba21, session_timestamp=2021-10-28T06:49:51.479Z, thread-id=170, tx_id=BB37FF58EEF2541DFE5D930ECF605E91FCB73F040FDFC9780169A9CC64C87A39}
[INFO ] 2021-10-28T06:49:52,963Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=299f05f8-b746-4fc1-bad6-4cd68ccb3852, invocation_id=13c07144-9495-4320-a1fa-b7b38a65ba21, invocation_timestamp=2021-10-28T06:49:51.479Z, origin=Only For Testing, session_id=13c07144-9495-4320-a1fa-b7b38a65ba21, session_timestamp=2021-10-28T06:49:51.479Z, thread-id=170, tx_id=BB37FF58EEF2541DFE5D930ECF605E91FCB73F040FDFC9780169A9CC64C87A39}
[INFO ] 2021-10-28T06:49:53,097Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T06:49:53,124Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:49:53,124Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:49:53,129Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T06:49:53,147Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:49:53,147Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:49:53,148Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T06:49:53,163Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:49:53,163Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:50:19,336Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:50:19,374Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:50:19,386Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:50:19,829Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:50:21,258Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:50:21,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:50:21,630Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:50:21,650Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:50:21,655Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLC9YbcDtHFyBPNbcyXUKP1KTRVp4X8qp7RCLZtrZnqv1x, alias: identity-private-key {}
[INFO ] 2021-10-28T06:50:21,803Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,803Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,804Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,805Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,805Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,806Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,807Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,807Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,807Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,808Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:50:21,809Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,848Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:50:21,946Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:50:10.830Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:50:29,453Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:50:29,549Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:50:29,555Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:50:32,481Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:50:32,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:50:32,776Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766), owningKey=DLC9YbcDtHFyBPNbcyXUKP1KTRVp4X8qp7RCLZtrZnqv1x {}
[INFO ] 2021-10-28T06:50:32,776Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:50:32,941Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766) {}
[INFO ] 2021-10-28T06:50:33,006Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:50:33,037Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:50:33,040Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:50:33,069Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766), owningKey=DLC9YbcDtHFyBPNbcyXUKP1KTRVp4X8qp7RCLZtrZnqv1x {}
[INFO ] 2021-10-28T06:50:33,070Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:33,222Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:50:33,244Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:50:33,256Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:50:33,363Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:50:33,446Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:50:33,446Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:50:34,008Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766) {}
[INFO ] 2021-10-28T06:50:34,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766), owningKey=DLC9YbcDtHFyBPNbcyXUKP1KTRVp4X8qp7RCLZtrZnqv1x {}
[INFO ] 2021-10-28T06:50:34,018Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:34,021Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766), owningKey=DLC9YbcDtHFyBPNbcyXUKP1KTRVp4X8qp7RCLZtrZnqv1x {}
[INFO ] 2021-10-28T06:50:34,021Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:34,053Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:50:34,056Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:50:34,063Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:50:34,117Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:50:34,189Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:50:34,191Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:50:34,193Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:50:34,246Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:50:34,247Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9VPy9EAJagszY8MsbFnFH6JpAg4RBg9LYWSsZiMgX3qs, alias: identity-private-key {}
[INFO ] 2021-10-28T06:50:34,255Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,255Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,255Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,256Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:50:34,262Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:50:10.830Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:50:34,930Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:50:34,932Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:50:34,932Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:50:35,112Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:50:35,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:50:35,122Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118), owningKey=DL9VPy9EAJagszY8MsbFnFH6JpAg4RBg9LYWSsZiMgX3qs {}
[INFO ] 2021-10-28T06:50:35,122Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:50:35,131Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118) {}
[INFO ] 2021-10-28T06:50:35,140Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:50:35,153Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:50:35,153Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:50:35,162Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118), owningKey=DL9VPy9EAJagszY8MsbFnFH6JpAg4RBg9LYWSsZiMgX3qs {}
[INFO ] 2021-10-28T06:50:35,162Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:35,199Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:50:35,201Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:50:35,202Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:50:35,202Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:50:35,208Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:50:35,232Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118) {}
[INFO ] 2021-10-28T06:50:35,234Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766), owningKey=DLC9YbcDtHFyBPNbcyXUKP1KTRVp4X8qp7RCLZtrZnqv1x {}
[INFO ] 2021-10-28T06:50:35,234Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:50:35,250Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118), owningKey=DL9VPy9EAJagszY8MsbFnFH6JpAg4RBg9LYWSsZiMgX3qs {}
[INFO ] 2021-10-28T06:50:35,250Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:50:35,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118), owningKey=DL9VPy9EAJagszY8MsbFnFH6JpAg4RBg9LYWSsZiMgX3qs {}
[INFO ] 2021-10-28T06:50:35,262Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:35,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118), owningKey=DL9VPy9EAJagszY8MsbFnFH6JpAg4RBg9LYWSsZiMgX3qs {}
[INFO ] 2021-10-28T06:50:35,262Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:35,274Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:50:35,274Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:50:35,274Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:50:35,286Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:50:35,322Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:50:35,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:50:35,325Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:50:35,368Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:50:35,368Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5L5PWQa9BT23K6Woy4xdRKvspXoP2ar4WoJUMDEBtfvX, alias: identity-private-key {}
[INFO ] 2021-10-28T06:50:35,379Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,379Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,379Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:50:35,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,381Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:50:35,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:50:10.830Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:50:35,968Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:50:35,970Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:50:35,970Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:50:36,144Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:50:36,149Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:50:36,153Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149), owningKey=DL5L5PWQa9BT23K6Woy4xdRKvspXoP2ar4WoJUMDEBtfvX {}
[INFO ] 2021-10-28T06:50:36,153Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:50:36,172Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149) {}
[INFO ] 2021-10-28T06:50:36,194Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:50:36,196Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:50:36,196Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:50:36,203Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149), owningKey=DL5L5PWQa9BT23K6Woy4xdRKvspXoP2ar4WoJUMDEBtfvX {}
[INFO ] 2021-10-28T06:50:36,203Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:36,239Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:50:36,242Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:50:36,242Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065012.858-C03833E5DF21A7F6/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:50:36,243Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:50:36,250Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:50:36,276Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149) {}
[INFO ] 2021-10-28T06:50:36,279Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403832766), owningKey=DLC9YbcDtHFyBPNbcyXUKP1KTRVp4X8qp7RCLZtrZnqv1x {}
[INFO ] 2021-10-28T06:50:36,279Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:50:36,292Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149), owningKey=DL5L5PWQa9BT23K6Woy4xdRKvspXoP2ar4WoJUMDEBtfvX {}
[INFO ] 2021-10-28T06:50:36,292Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:50:36,306Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403835118), owningKey=DL9VPy9EAJagszY8MsbFnFH6JpAg4RBg9LYWSsZiMgX3qs {}
[INFO ] 2021-10-28T06:50:36,306Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:50:36,320Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149), owningKey=DL5L5PWQa9BT23K6Woy4xdRKvspXoP2ar4WoJUMDEBtfvX {}
[INFO ] 2021-10-28T06:50:36,320Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:50:36,330Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149), owningKey=DL5L5PWQa9BT23K6Woy4xdRKvspXoP2ar4WoJUMDEBtfvX {}
[INFO ] 2021-10-28T06:50:36,330Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:36,330Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403836149), owningKey=DL5L5PWQa9BT23K6Woy4xdRKvspXoP2ar4WoJUMDEBtfvX {}
[INFO ] 2021-10-28T06:50:36,330Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:50:37,933Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a3aef5da-33b3-4505-8d57-5d188f85eae8, invocation_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, invocation_timestamp=2021-10-28T06:50:36.366Z, origin=Only For Testing, session_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, session_timestamp=2021-10-28T06:50:36.366Z, thread-id=170, tx_id=8AE1DC9743F677D225441DCB90A0697EB33FDE3055537C75A541A749384F5B7D}
[INFO ] 2021-10-28T06:50:37,933Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a3aef5da-33b3-4505-8d57-5d188f85eae8, invocation_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, invocation_timestamp=2021-10-28T06:50:36.366Z, origin=Only For Testing, session_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, session_timestamp=2021-10-28T06:50:36.366Z, thread-id=170, tx_id=8AE1DC9743F677D225441DCB90A0697EB33FDE3055537C75A541A749384F5B7D}
[INFO ] 2021-10-28T06:50:38,179Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a3aef5da-33b3-4505-8d57-5d188f85eae8, invocation_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, invocation_timestamp=2021-10-28T06:50:36.366Z, origin=Only For Testing, session_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, session_timestamp=2021-10-28T06:50:36.366Z, thread-id=170, tx_id=8AE1DC9743F677D225441DCB90A0697EB33FDE3055537C75A541A749384F5B7D}
[INFO ] 2021-10-28T06:50:38,182Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a3aef5da-33b3-4505-8d57-5d188f85eae8, invocation_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, invocation_timestamp=2021-10-28T06:50:36.366Z, origin=Only For Testing, session_id=54c4f6a4-458b-4022-a58e-4e4dc369af84, session_timestamp=2021-10-28T06:50:36.366Z, thread-id=170, tx_id=8AE1DC9743F677D225441DCB90A0697EB33FDE3055537C75A541A749384F5B7D}
[INFO ] 2021-10-28T06:50:38,471Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T06:50:38,494Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:50:38,494Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:50:38,499Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T06:50:38,512Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:50:38,512Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:50:38,533Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T06:50:38,545Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:50:38,545Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:51:20,827Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:51:20,864Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:51:20,878Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:51:21,326Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:51:22,881Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:51:23,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:51:23,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:51:23,305Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:51:23,310Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4q29doakqeB8iw9UDVh9Sx3tg9bCDYZoL4WSFiDCURRE, alias: identity-private-key {}
[INFO ] 2021-10-28T06:51:23,457Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,459Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,459Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,459Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,460Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,460Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,460Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,461Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,462Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,462Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,463Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,464Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:51:23,465Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,526Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:51:23,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:51:11.898Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:51:30,410Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:51:30,515Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:51:30,521Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:51:33,431Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:51:33,724Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:51:33,734Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724), owningKey=DL4q29doakqeB8iw9UDVh9Sx3tg9bCDYZoL4WSFiDCURRE {}
[INFO ] 2021-10-28T06:51:33,734Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:51:33,888Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724) {}
[INFO ] 2021-10-28T06:51:33,943Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:51:33,975Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:51:33,976Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:51:34,028Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724), owningKey=DL4q29doakqeB8iw9UDVh9Sx3tg9bCDYZoL4WSFiDCURRE {}
[INFO ] 2021-10-28T06:51:34,028Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:34,162Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:51:34,180Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:51:34,193Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:51:34,281Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:51:34,396Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:51:34,397Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:51:35,039Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724) {}
[INFO ] 2021-10-28T06:51:35,051Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724), owningKey=DL4q29doakqeB8iw9UDVh9Sx3tg9bCDYZoL4WSFiDCURRE {}
[INFO ] 2021-10-28T06:51:35,053Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:35,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724), owningKey=DL4q29doakqeB8iw9UDVh9Sx3tg9bCDYZoL4WSFiDCURRE {}
[INFO ] 2021-10-28T06:51:35,059Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:35,081Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:51:35,081Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:51:35,081Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:51:35,098Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:51:35,171Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:51:35,172Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:51:35,173Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:51:35,226Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:51:35,226Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9XswXy8hD4jKaobEgH9jV46Zuyh6uns4yVNT1sAnFjww, alias: identity-private-key {}
[INFO ] 2021-10-28T06:51:35,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,239Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:51:35,239Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,239Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:51:35,245Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:51:11.898Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:51:36,018Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:51:36,020Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:51:36,020Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:51:36,188Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:51:36,196Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:51:36,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196), owningKey=DL9XswXy8hD4jKaobEgH9jV46Zuyh6uns4yVNT1sAnFjww {}
[INFO ] 2021-10-28T06:51:36,203Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:51:36,216Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196) {}
[INFO ] 2021-10-28T06:51:36,232Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:51:36,232Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:51:36,232Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:51:36,241Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196), owningKey=DL9XswXy8hD4jKaobEgH9jV46Zuyh6uns4yVNT1sAnFjww {}
[INFO ] 2021-10-28T06:51:36,241Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:36,283Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:51:36,289Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:51:36,289Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:51:36,290Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:51:36,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:51:36,336Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196) {}
[INFO ] 2021-10-28T06:51:36,340Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724), owningKey=DL4q29doakqeB8iw9UDVh9Sx3tg9bCDYZoL4WSFiDCURRE {}
[INFO ] 2021-10-28T06:51:36,340Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:51:36,356Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196), owningKey=DL9XswXy8hD4jKaobEgH9jV46Zuyh6uns4yVNT1sAnFjww {}
[INFO ] 2021-10-28T06:51:36,356Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:51:36,369Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196), owningKey=DL9XswXy8hD4jKaobEgH9jV46Zuyh6uns4yVNT1sAnFjww {}
[INFO ] 2021-10-28T06:51:36,369Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:36,369Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196), owningKey=DL9XswXy8hD4jKaobEgH9jV46Zuyh6uns4yVNT1sAnFjww {}
[INFO ] 2021-10-28T06:51:36,370Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:36,382Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:51:36,382Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:51:36,382Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:51:36,409Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:51:36,463Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:51:36,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:51:36,466Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:51:36,523Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:51:36,523Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGegPvd6rcc8qH8TnjCXuD8pDfA4natwLAWUjYhqcE2bz, alias: identity-private-key {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,535Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,544Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,544Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,544Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:51:36,544Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,544Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:51:36,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:51:11.898Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:51:37,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:51:37,347Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:51:37,347Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:51:37,565Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:51:37,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:51:37,574Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570), owningKey=DLGegPvd6rcc8qH8TnjCXuD8pDfA4natwLAWUjYhqcE2bz {}
[INFO ] 2021-10-28T06:51:37,574Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:51:37,584Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570) {}
[INFO ] 2021-10-28T06:51:37,598Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:51:37,601Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:51:37,601Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:51:37,629Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570), owningKey=DLGegPvd6rcc8qH8TnjCXuD8pDfA4natwLAWUjYhqcE2bz {}
[INFO ] 2021-10-28T06:51:37,629Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:37,692Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:51:37,697Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:51:37,698Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065113.907-C254A7E45EBE4EC3/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:51:37,700Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:51:37,709Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:51:37,734Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570) {}
[INFO ] 2021-10-28T06:51:37,737Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635403893724), owningKey=DL4q29doakqeB8iw9UDVh9Sx3tg9bCDYZoL4WSFiDCURRE {}
[INFO ] 2021-10-28T06:51:37,737Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:51:37,750Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570), owningKey=DLGegPvd6rcc8qH8TnjCXuD8pDfA4natwLAWUjYhqcE2bz {}
[INFO ] 2021-10-28T06:51:37,750Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:51:37,767Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635403896196), owningKey=DL9XswXy8hD4jKaobEgH9jV46Zuyh6uns4yVNT1sAnFjww {}
[INFO ] 2021-10-28T06:51:37,767Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:51:37,778Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570), owningKey=DLGegPvd6rcc8qH8TnjCXuD8pDfA4natwLAWUjYhqcE2bz {}
[INFO ] 2021-10-28T06:51:37,778Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:51:37,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570), owningKey=DLGegPvd6rcc8qH8TnjCXuD8pDfA4natwLAWUjYhqcE2bz {}
[INFO ] 2021-10-28T06:51:37,798Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:37,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635403897570), owningKey=DLGegPvd6rcc8qH8TnjCXuD8pDfA4natwLAWUjYhqcE2bz {}
[INFO ] 2021-10-28T06:51:37,799Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:51:39,093Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=3f2f93ba-b117-481f-b845-b2344f382c36, invocation_id=b55b7825-2777-4124-967a-b229d2cc0abb, invocation_timestamp=2021-10-28T06:51:37.837Z, origin=Only For Testing, session_id=b55b7825-2777-4124-967a-b229d2cc0abb, session_timestamp=2021-10-28T06:51:37.837Z, thread-id=170, tx_id=F01D4FB5B9D2D89FB22742E6BCC4E4D84126F3B521CB542716225BBB025F87C7}
[INFO ] 2021-10-28T06:51:39,093Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=3f2f93ba-b117-481f-b845-b2344f382c36, invocation_id=b55b7825-2777-4124-967a-b229d2cc0abb, invocation_timestamp=2021-10-28T06:51:37.837Z, origin=Only For Testing, session_id=b55b7825-2777-4124-967a-b229d2cc0abb, session_timestamp=2021-10-28T06:51:37.837Z, thread-id=170, tx_id=F01D4FB5B9D2D89FB22742E6BCC4E4D84126F3B521CB542716225BBB025F87C7}
[INFO ] 2021-10-28T06:51:39,232Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=3f2f93ba-b117-481f-b845-b2344f382c36, invocation_id=b55b7825-2777-4124-967a-b229d2cc0abb, invocation_timestamp=2021-10-28T06:51:37.837Z, origin=Only For Testing, session_id=b55b7825-2777-4124-967a-b229d2cc0abb, session_timestamp=2021-10-28T06:51:37.837Z, thread-id=170, tx_id=F01D4FB5B9D2D89FB22742E6BCC4E4D84126F3B521CB542716225BBB025F87C7}
[INFO ] 2021-10-28T06:51:39,233Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=3f2f93ba-b117-481f-b845-b2344f382c36, invocation_id=b55b7825-2777-4124-967a-b229d2cc0abb, invocation_timestamp=2021-10-28T06:51:37.837Z, origin=Only For Testing, session_id=b55b7825-2777-4124-967a-b229d2cc0abb, session_timestamp=2021-10-28T06:51:37.837Z, thread-id=170, tx_id=F01D4FB5B9D2D89FB22742E6BCC4E4D84126F3B521CB542716225BBB025F87C7}
[INFO ] 2021-10-28T06:51:39,744Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69062a97-7915-4075-a1f3-8031e5f31a8b, invocation_id=d639768a-64cc-4b19-bb6b-cff38277160a, invocation_timestamp=2021-10-28T06:51:39.346Z, origin=Only For Testing, session_id=d639768a-64cc-4b19-bb6b-cff38277160a, session_timestamp=2021-10-28T06:51:39.346Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:39,852Z [Mock network] corda.flow. - Received a notarisation request for Tx [2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=2c2ab2df-b985-4acd-bc5c-b0692f1f2c27, invocation_id=ee41c95a-c2ba-4267-b0bc-8ae03616224e, invocation_timestamp=2021-10-28T06:51:39.814Z, origin=O=UK Mint, L=London, C=GB, session_id=ee41c95a-c2ba-4267-b0bc-8ae03616224e, session_timestamp=2021-10-28T06:51:39.814Z, thread-id=170}
[INFO ] 2021-10-28T06:51:40,321Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T06:51:40,341Z [Mock network] corda.flow. - Transaction [2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=2c2ab2df-b985-4acd-bc5c-b0692f1f2c27, invocation_id=ee41c95a-c2ba-4267-b0bc-8ae03616224e, invocation_timestamp=2021-10-28T06:51:39.814Z, origin=O=UK Mint, L=London, C=GB, session_id=ee41c95a-c2ba-4267-b0bc-8ae03616224e, session_timestamp=2021-10-28T06:51:39.814Z, thread-id=170}
[INFO ] 2021-10-28T06:51:40,377Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69062a97-7915-4075-a1f3-8031e5f31a8b, invocation_id=d639768a-64cc-4b19-bb6b-cff38277160a, invocation_timestamp=2021-10-28T06:51:39.346Z, origin=Only For Testing, session_id=d639768a-64cc-4b19-bb6b-cff38277160a, session_timestamp=2021-10-28T06:51:39.346Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,379Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69062a97-7915-4075-a1f3-8031e5f31a8b, invocation_id=d639768a-64cc-4b19-bb6b-cff38277160a, invocation_timestamp=2021-10-28T06:51:39.346Z, origin=Only For Testing, session_id=d639768a-64cc-4b19-bb6b-cff38277160a, session_timestamp=2021-10-28T06:51:39.346Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,394Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69062a97-7915-4075-a1f3-8031e5f31a8b, invocation_id=d639768a-64cc-4b19-bb6b-cff38277160a, invocation_timestamp=2021-10-28T06:51:39.346Z, origin=Only For Testing, session_id=d639768a-64cc-4b19-bb6b-cff38277160a, session_timestamp=2021-10-28T06:51:39.346Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,426Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=68a9751e-220f-4e62-8eb6-34107a08d41f, invocation_id=4886764e-2e82-48ed-8a6a-e416b3c71869, invocation_timestamp=2021-10-28T06:51:39.932Z, origin=O=UK Mint, L=London, C=GB, session_id=4886764e-2e82-48ed-8a6a-e416b3c71869, session_timestamp=2021-10-28T06:51:39.932Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,609Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=68a9751e-220f-4e62-8eb6-34107a08d41f, invocation_id=4886764e-2e82-48ed-8a6a-e416b3c71869, invocation_timestamp=2021-10-28T06:51:39.932Z, origin=O=UK Mint, L=London, C=GB, session_id=4886764e-2e82-48ed-8a6a-e416b3c71869, session_timestamp=2021-10-28T06:51:39.932Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,621Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=68a9751e-220f-4e62-8eb6-34107a08d41f, invocation_id=4886764e-2e82-48ed-8a6a-e416b3c71869, invocation_timestamp=2021-10-28T06:51:39.932Z, origin=O=UK Mint, L=London, C=GB, session_id=4886764e-2e82-48ed-8a6a-e416b3c71869, session_timestamp=2021-10-28T06:51:39.932Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,635Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=68a9751e-220f-4e62-8eb6-34107a08d41f, invocation_id=4886764e-2e82-48ed-8a6a-e416b3c71869, invocation_timestamp=2021-10-28T06:51:39.932Z, origin=O=UK Mint, L=London, C=GB, session_id=4886764e-2e82-48ed-8a6a-e416b3c71869, session_timestamp=2021-10-28T06:51:39.932Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,654Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69062a97-7915-4075-a1f3-8031e5f31a8b, invocation_id=d639768a-64cc-4b19-bb6b-cff38277160a, invocation_timestamp=2021-10-28T06:51:39.346Z, origin=Only For Testing, session_id=d639768a-64cc-4b19-bb6b-cff38277160a, session_timestamp=2021-10-28T06:51:39.346Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,654Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69062a97-7915-4075-a1f3-8031e5f31a8b, invocation_id=d639768a-64cc-4b19-bb6b-cff38277160a, invocation_timestamp=2021-10-28T06:51:39.346Z, origin=Only For Testing, session_id=d639768a-64cc-4b19-bb6b-cff38277160a, session_timestamp=2021-10-28T06:51:39.346Z, thread-id=170, tx_id=2AC0A9FF1946C74A25A43C65DC34E92DF0505CFAB64E9D9E6411D1DA926E7902}
[INFO ] 2021-10-28T06:51:40,702Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T06:51:40,728Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:51:40,728Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:51:40,732Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T06:51:40,745Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:51:40,745Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:51:40,748Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T06:51:40,760Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:51:40,760Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:56:58,291Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:56:58,336Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:56:58,352Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:56:58,838Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:57:00,618Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:57:00,963Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:57:01,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:57:01,067Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:57:01,073Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL65m6mb3PKdK4FYYBHZK9qPAYUQADFHTmoqz54Ns6Mu2E, alias: identity-private-key {}
[INFO ] 2021-10-28T06:57:01,226Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,227Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,227Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,228Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,228Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,228Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,229Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,229Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,229Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,251Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,252Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:57:01,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,314Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:57:01,423Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:56:48.280Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:57:08,709Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:57:08,798Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:57:08,804Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:57:12,072Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:57:12,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:57:12,414Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405), owningKey=DL65m6mb3PKdK4FYYBHZK9qPAYUQADFHTmoqz54Ns6Mu2E {}
[INFO ] 2021-10-28T06:57:12,414Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:57:12,585Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405) {}
[INFO ] 2021-10-28T06:57:12,642Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:57:12,679Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:57:12,681Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:57:12,743Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405), owningKey=DL65m6mb3PKdK4FYYBHZK9qPAYUQADFHTmoqz54Ns6Mu2E {}
[INFO ] 2021-10-28T06:57:12,743Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:12,879Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:57:12,895Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:57:12,904Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:57:12,984Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:57:13,087Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:57:13,087Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:57:13,815Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405) {}
[INFO ] 2021-10-28T06:57:13,831Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405), owningKey=DL65m6mb3PKdK4FYYBHZK9qPAYUQADFHTmoqz54Ns6Mu2E {}
[INFO ] 2021-10-28T06:57:13,831Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:13,831Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405), owningKey=DL65m6mb3PKdK4FYYBHZK9qPAYUQADFHTmoqz54Ns6Mu2E {}
[INFO ] 2021-10-28T06:57:13,831Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:13,868Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:57:13,868Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:57:13,868Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:57:13,883Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:57:13,932Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:57:13,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:57:13,936Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:57:14,002Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:57:14,002Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9Hy61TUUYbzesr2BKQ9XA2t9LxzYj5cKRBBPMd3P9hxz, alias: identity-private-key {}
[INFO ] 2021-10-28T06:57:14,009Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,009Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,012Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,012Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,013Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:57:14,026Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:56:48.280Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:57:14,721Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:57:14,722Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:57:14,725Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:57:14,934Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:57:14,940Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:57:14,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940), owningKey=DL9Hy61TUUYbzesr2BKQ9XA2t9LxzYj5cKRBBPMd3P9hxz {}
[INFO ] 2021-10-28T06:57:14,945Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:57:14,962Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940) {}
[INFO ] 2021-10-28T06:57:14,977Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:57:14,977Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:57:14,977Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:57:14,986Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940), owningKey=DL9Hy61TUUYbzesr2BKQ9XA2t9LxzYj5cKRBBPMd3P9hxz {}
[INFO ] 2021-10-28T06:57:14,986Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:15,045Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:57:15,049Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:57:15,049Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:57:15,050Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:57:15,072Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:57:15,120Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940) {}
[INFO ] 2021-10-28T06:57:15,128Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405), owningKey=DL65m6mb3PKdK4FYYBHZK9qPAYUQADFHTmoqz54Ns6Mu2E {}
[INFO ] 2021-10-28T06:57:15,128Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:57:15,152Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940), owningKey=DL9Hy61TUUYbzesr2BKQ9XA2t9LxzYj5cKRBBPMd3P9hxz {}
[INFO ] 2021-10-28T06:57:15,152Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:57:15,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940), owningKey=DL9Hy61TUUYbzesr2BKQ9XA2t9LxzYj5cKRBBPMd3P9hxz {}
[INFO ] 2021-10-28T06:57:15,182Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:15,182Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940), owningKey=DL9Hy61TUUYbzesr2BKQ9XA2t9LxzYj5cKRBBPMd3P9hxz {}
[INFO ] 2021-10-28T06:57:15,182Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:15,198Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:57:15,199Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:57:15,199Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:57:15,210Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:57:15,268Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:57:15,269Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:57:15,270Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:57:15,330Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:57:15,330Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2XaYt6EsATNs4dHY1BKKWyDcsm4bs7HA4WiXL3irkEXG, alias: identity-private-key {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:57:15,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:57:15,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:56:48.280Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:57:16,095Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:57:16,097Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:57:16,097Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:57:16,337Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:57:16,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:57:16,351Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345), owningKey=DL2XaYt6EsATNs4dHY1BKKWyDcsm4bs7HA4WiXL3irkEXG {}
[INFO ] 2021-10-28T06:57:16,351Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:57:16,366Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345) {}
[INFO ] 2021-10-28T06:57:16,379Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:57:16,385Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:57:16,385Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:57:16,388Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345), owningKey=DL2XaYt6EsATNs4dHY1BKKWyDcsm4bs7HA4WiXL3irkEXG {}
[INFO ] 2021-10-28T06:57:16,388Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:16,462Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:57:16,466Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:57:16,467Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065650.777-CCD982A57D04852A/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:57:16,472Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:57:16,494Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:57:16,524Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345) {}
[INFO ] 2021-10-28T06:57:16,529Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404232405), owningKey=DL65m6mb3PKdK4FYYBHZK9qPAYUQADFHTmoqz54Ns6Mu2E {}
[INFO ] 2021-10-28T06:57:16,529Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:57:16,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345), owningKey=DL2XaYt6EsATNs4dHY1BKKWyDcsm4bs7HA4WiXL3irkEXG {}
[INFO ] 2021-10-28T06:57:16,546Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:57:16,560Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404234940), owningKey=DL9Hy61TUUYbzesr2BKQ9XA2t9LxzYj5cKRBBPMd3P9hxz {}
[INFO ] 2021-10-28T06:57:16,560Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:57:16,571Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345), owningKey=DL2XaYt6EsATNs4dHY1BKKWyDcsm4bs7HA4WiXL3irkEXG {}
[INFO ] 2021-10-28T06:57:16,571Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-10-28T06:57:16,592Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345), owningKey=DL2XaYt6EsATNs4dHY1BKKWyDcsm4bs7HA4WiXL3irkEXG {}
[INFO ] 2021-10-28T06:57:16,592Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:16,592Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=10, serial=1635404236345), owningKey=DL2XaYt6EsATNs4dHY1BKKWyDcsm4bs7HA4WiXL3irkEXG {}
[INFO ] 2021-10-28T06:57:16,592Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:57:17,732Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aee8b0-732b-48dc-aa31-c80cc9d95dee, invocation_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, invocation_timestamp=2021-10-28T06:57:16.658Z, origin=Only For Testing, session_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, session_timestamp=2021-10-28T06:57:16.658Z, thread-id=170, tx_id=B8D3D836503AA5407A22035348F7C14353F6B622A20534AC5B53FF1A58EB3D3C}
[INFO ] 2021-10-28T06:57:17,732Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aee8b0-732b-48dc-aa31-c80cc9d95dee, invocation_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, invocation_timestamp=2021-10-28T06:57:16.658Z, origin=Only For Testing, session_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, session_timestamp=2021-10-28T06:57:16.658Z, thread-id=170, tx_id=B8D3D836503AA5407A22035348F7C14353F6B622A20534AC5B53FF1A58EB3D3C}
[INFO ] 2021-10-28T06:57:17,900Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aee8b0-732b-48dc-aa31-c80cc9d95dee, invocation_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, invocation_timestamp=2021-10-28T06:57:16.658Z, origin=Only For Testing, session_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, session_timestamp=2021-10-28T06:57:16.658Z, thread-id=170, tx_id=B8D3D836503AA5407A22035348F7C14353F6B622A20534AC5B53FF1A58EB3D3C}
[INFO ] 2021-10-28T06:57:17,902Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aee8b0-732b-48dc-aa31-c80cc9d95dee, invocation_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, invocation_timestamp=2021-10-28T06:57:16.658Z, origin=Only For Testing, session_id=e00fd8a7-f0ac-423d-bdb8-6955f9cab4f0, session_timestamp=2021-10-28T06:57:16.658Z, thread-id=170, tx_id=B8D3D836503AA5407A22035348F7C14353F6B622A20534AC5B53FF1A58EB3D3C}
[INFO ] 2021-10-28T06:57:18,334Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c81c4f2-756d-4a33-8813-6ca1a7d80b8c, invocation_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, invocation_timestamp=2021-10-28T06:57:18.004Z, origin=Only For Testing, session_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, session_timestamp=2021-10-28T06:57:18.004Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:18,440Z [Mock network] corda.flow. - Received a notarisation request for Tx [665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=b6df97fa-5325-4fe4-9db3-e58f5083c0b5, invocation_id=bf6d9fa1-cce1-49b1-8dc7-a784ff758f8f, invocation_timestamp=2021-10-28T06:57:18.404Z, origin=O=UK Mint, L=London, C=GB, session_id=bf6d9fa1-cce1-49b1-8dc7-a784ff758f8f, session_timestamp=2021-10-28T06:57:18.404Z, thread-id=170}
[INFO ] 2021-10-28T06:57:19,007Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T06:57:19,025Z [Mock network] corda.flow. - Transaction [665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=b6df97fa-5325-4fe4-9db3-e58f5083c0b5, invocation_id=bf6d9fa1-cce1-49b1-8dc7-a784ff758f8f, invocation_timestamp=2021-10-28T06:57:18.404Z, origin=O=UK Mint, L=London, C=GB, session_id=bf6d9fa1-cce1-49b1-8dc7-a784ff758f8f, session_timestamp=2021-10-28T06:57:18.404Z, thread-id=170}
[INFO ] 2021-10-28T06:57:19,084Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c81c4f2-756d-4a33-8813-6ca1a7d80b8c, invocation_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, invocation_timestamp=2021-10-28T06:57:18.004Z, origin=Only For Testing, session_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, session_timestamp=2021-10-28T06:57:18.004Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,087Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c81c4f2-756d-4a33-8813-6ca1a7d80b8c, invocation_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, invocation_timestamp=2021-10-28T06:57:18.004Z, origin=Only For Testing, session_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, session_timestamp=2021-10-28T06:57:18.004Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,102Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c81c4f2-756d-4a33-8813-6ca1a7d80b8c, invocation_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, invocation_timestamp=2021-10-28T06:57:18.004Z, origin=Only For Testing, session_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, session_timestamp=2021-10-28T06:57:18.004Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,156Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=b52cd439-5c16-4037-aa5c-348626da70d5, invocation_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, invocation_timestamp=2021-10-28T06:57:18.514Z, origin=O=UK Mint, L=London, C=GB, session_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, session_timestamp=2021-10-28T06:57:18.514Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,261Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=b52cd439-5c16-4037-aa5c-348626da70d5, invocation_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, invocation_timestamp=2021-10-28T06:57:18.514Z, origin=O=UK Mint, L=London, C=GB, session_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, session_timestamp=2021-10-28T06:57:18.514Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,272Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=b52cd439-5c16-4037-aa5c-348626da70d5, invocation_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, invocation_timestamp=2021-10-28T06:57:18.514Z, origin=O=UK Mint, L=London, C=GB, session_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, session_timestamp=2021-10-28T06:57:18.514Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,285Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=b52cd439-5c16-4037-aa5c-348626da70d5, invocation_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, invocation_timestamp=2021-10-28T06:57:18.514Z, origin=O=UK Mint, L=London, C=GB, session_id=319d5a0f-62ef-4dca-88e8-02ca48b0a86e, session_timestamp=2021-10-28T06:57:18.514Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,298Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c81c4f2-756d-4a33-8813-6ca1a7d80b8c, invocation_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, invocation_timestamp=2021-10-28T06:57:18.004Z, origin=Only For Testing, session_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, session_timestamp=2021-10-28T06:57:18.004Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,298Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c81c4f2-756d-4a33-8813-6ca1a7d80b8c, invocation_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, invocation_timestamp=2021-10-28T06:57:18.004Z, origin=Only For Testing, session_id=4e100f89-3c46-4399-9ba0-dc444c1e15f3, session_timestamp=2021-10-28T06:57:18.004Z, thread-id=170, tx_id=665C8A833DEF91AA5CAE882CC5697C6BE6005DB603182FA9AB5EED18E7692955}
[INFO ] 2021-10-28T06:57:19,341Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T06:57:19,366Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:57:19,366Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:57:19,369Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T06:57:19,387Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:57:19,387Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:57:19,388Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T06:57:19,404Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:57:19,404Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:19,491Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/0/cordapps] {}
[INFO ] 2021-10-28T06:59:19,522Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:59:19,534Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:59:19,792Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:59:21,349Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:21,668Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:59:21,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:59:21,777Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:59:21,781Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK, alias: identity-private-key {}
[INFO ] 2021-10-28T06:59:21,932Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,933Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,933Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,934Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,941Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,942Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,943Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,944Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,945Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,945Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,946Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:59:21,955Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:59:21,957Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:22,005Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:22,109Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:59:10.744Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:59:29,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:59:29,867Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:59:29,874Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:59:32,597Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T06:59:33,225Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:59:33,239Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225), owningKey=DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK {}
[INFO ] 2021-10-28T06:59:33,239Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:59:33,432Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225) {}
[INFO ] 2021-10-28T06:59:33,506Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:59:33,539Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:59:33,562Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:59:33,593Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225), owningKey=DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK {}
[INFO ] 2021-10-28T06:59:33,593Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:33,931Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:59:33,954Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:59:34,054Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:59:34,160Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:59:34,354Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:59:34,362Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T06:59:35,048Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225) {}
[INFO ] 2021-10-28T06:59:35,061Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225), owningKey=DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK {}
[INFO ] 2021-10-28T06:59:35,106Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:35,119Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225), owningKey=DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK {}
[INFO ] 2021-10-28T06:59:35,124Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:35,182Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/1/cordapps] {}
[INFO ] 2021-10-28T06:59:35,200Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:59:35,213Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:59:35,232Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:59:35,294Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:35,295Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:59:35,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:59:35,334Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:59:35,334Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs, alias: identity-private-key {}
[INFO ] 2021-10-28T06:59:35,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:35,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:59:10.744Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:59:36,150Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:59:36,152Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:36,152Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:36,367Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:36,373Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:59:36,378Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373), owningKey=DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs {}
[INFO ] 2021-10-28T06:59:36,378Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:36,389Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373) {}
[INFO ] 2021-10-28T06:59:36,406Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:59:36,406Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:59:36,406Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:59:36,413Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373), owningKey=DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs {}
[INFO ] 2021-10-28T06:59:36,413Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:36,456Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:59:36,459Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:59:36,459Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:59:36,459Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:59:36,470Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:59:36,504Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373) {}
[INFO ] 2021-10-28T06:59:36,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225), owningKey=DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK {}
[INFO ] 2021-10-28T06:59:36,508Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:59:36,532Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373), owningKey=DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs {}
[INFO ] 2021-10-28T06:59:36,532Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:36,548Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373), owningKey=DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs {}
[INFO ] 2021-10-28T06:59:36,548Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:36,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373), owningKey=DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs {}
[INFO ] 2021-10-28T06:59:36,549Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:36,568Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/2/cordapps] {}
[INFO ] 2021-10-28T06:59:36,568Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:59:36,569Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:59:36,579Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:59:36,625Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:36,626Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:59:36,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:59:36,666Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:59:36,666Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3, alias: identity-private-key {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,673Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:36,680Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:59:10.744Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:59:37,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:59:37,389Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:37,390Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:37,621Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:37,627Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:59:37,631Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627), owningKey=DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3 {}
[INFO ] 2021-10-28T06:59:37,631Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:37,641Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627) {}
[INFO ] 2021-10-28T06:59:37,652Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:59:37,654Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:59:37,654Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:59:37,661Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627), owningKey=DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3 {}
[INFO ] 2021-10-28T06:59:37,661Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:37,708Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:59:37,712Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:59:37,712Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:59:37,713Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:59:37,723Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:59:37,748Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627) {}
[INFO ] 2021-10-28T06:59:37,751Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225), owningKey=DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK {}
[INFO ] 2021-10-28T06:59:37,751Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:59:37,765Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627), owningKey=DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3 {}
[INFO ] 2021-10-28T06:59:37,765Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:37,830Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373), owningKey=DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs {}
[INFO ] 2021-10-28T06:59:37,830Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:37,853Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627), owningKey=DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3 {}
[INFO ] 2021-10-28T06:59:37,853Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:37,866Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627), owningKey=DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3 {}
[INFO ] 2021-10-28T06:59:37,866Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:37,866Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627), owningKey=DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3 {}
[INFO ] 2021-10-28T06:59:37,866Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:37,881Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/3/cordapps] {}
[INFO ] 2021-10-28T06:59:37,881Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T06:59:37,881Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T06:59:37,891Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T06:59:37,932Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:37,933Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T06:59:37,935Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T06:59:37,978Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T06:59:37,978Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT, alias: identity-private-key {}
[INFO ] 2021-10-28T06:59:37,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T06:59:37,990Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T06:59:10.744Z
      epoch=1
  } {}
[INFO ] 2021-10-28T06:59:38,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T06:59:38,556Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:38,556Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:38,727Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T06:59:38,732Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T06:59:38,736Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732), owningKey=DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT {}
[INFO ] 2021-10-28T06:59:38,736Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:38,744Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732) {}
[INFO ] 2021-10-28T06:59:38,765Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T06:59:38,767Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T06:59:38,767Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T06:59:38,775Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732), owningKey=DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT {}
[INFO ] 2021-10-28T06:59:38,775Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:38,834Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T06:59:38,839Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T06:59:38,840Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-065912.896-7DA3F0D48D064080/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T06:59:38,841Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T06:59:38,863Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T06:59:38,887Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732) {}
[INFO ] 2021-10-28T06:59:38,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404373225), owningKey=DLH3FgU1kGvFKGhZSaFimjKhwzL6P5re2XuJTh5QT4EkhK {}
[INFO ] 2021-10-28T06:59:38,893Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T06:59:38,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732), owningKey=DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT {}
[INFO ] 2021-10-28T06:59:38,906Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:38,921Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404376373), owningKey=DLFeqj6ghLe4bg4jRhSwFdaBXVVL7nfJGNJ43qVaDUx6Bs {}
[INFO ] 2021-10-28T06:59:38,921Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:38,934Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732), owningKey=DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT {}
[INFO ] 2021-10-28T06:59:38,934Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:38,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404377627), owningKey=DLAywBGB3Q8vFnEWeuWp4xMB58hjNfwZAbo3XDthNv5NK3 {}
[INFO ] 2021-10-28T06:59:38,945Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:38,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732), owningKey=DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT {}
[INFO ] 2021-10-28T06:59:38,957Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T06:59:38,967Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732), owningKey=DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT {}
[INFO ] 2021-10-28T06:59:38,967Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:38,967Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404378732), owningKey=DL7UE8b3CB5jn8oaquMSAHRXvCMpni1KcpoVVpMiH8BukT {}
[INFO ] 2021-10-28T06:59:38,967Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T06:59:40,092Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=242689f6-e004-4e70-9b7c-6bb01394efdc, invocation_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, invocation_timestamp=2021-10-28T06:59:39.008Z, origin=Only For Testing, session_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, session_timestamp=2021-10-28T06:59:39.008Z, thread-id=205, tx_id=44B00E1BF2C0777E99CA2AC5D587E06842BBBF64D6AE18FBD6CF0F422E7605ED}
[INFO ] 2021-10-28T06:59:40,092Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=242689f6-e004-4e70-9b7c-6bb01394efdc, invocation_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, invocation_timestamp=2021-10-28T06:59:39.008Z, origin=Only For Testing, session_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, session_timestamp=2021-10-28T06:59:39.008Z, thread-id=205, tx_id=44B00E1BF2C0777E99CA2AC5D587E06842BBBF64D6AE18FBD6CF0F422E7605ED}
[INFO ] 2021-10-28T06:59:40,526Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=242689f6-e004-4e70-9b7c-6bb01394efdc, invocation_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, invocation_timestamp=2021-10-28T06:59:39.008Z, origin=Only For Testing, session_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, session_timestamp=2021-10-28T06:59:39.008Z, thread-id=205, tx_id=44B00E1BF2C0777E99CA2AC5D587E06842BBBF64D6AE18FBD6CF0F422E7605ED}
[INFO ] 2021-10-28T06:59:40,526Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=242689f6-e004-4e70-9b7c-6bb01394efdc, invocation_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, invocation_timestamp=2021-10-28T06:59:39.008Z, origin=Only For Testing, session_id=4942e362-c9a5-4b57-a274-e4f76beb55f2, session_timestamp=2021-10-28T06:59:39.008Z, thread-id=205, tx_id=44B00E1BF2C0777E99CA2AC5D587E06842BBBF64D6AE18FBD6CF0F422E7605ED}
[INFO ] 2021-10-28T06:59:40,888Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bd694076-513d-4fbf-80d3-600aeac7b2eb, invocation_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, invocation_timestamp=2021-10-28T06:59:40.615Z, origin=Only For Testing, session_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, session_timestamp=2021-10-28T06:59:40.615Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:40,993Z [Mock network] corda.flow. - Received a notarisation request for Tx [B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=f16776a8-fd68-4b62-a661-639c901c65e9, invocation_id=3ea08fa0-c07c-43ae-89cd-4a4b84cc926c, invocation_timestamp=2021-10-28T06:59:40.952Z, origin=O=UK Mint, L=London, C=GB, session_id=3ea08fa0-c07c-43ae-89cd-4a4b84cc926c, session_timestamp=2021-10-28T06:59:40.952Z, thread-id=205}
[INFO ] 2021-10-28T06:59:41,267Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T06:59:41,284Z [Mock network] corda.flow. - Transaction [B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=f16776a8-fd68-4b62-a661-639c901c65e9, invocation_id=3ea08fa0-c07c-43ae-89cd-4a4b84cc926c, invocation_timestamp=2021-10-28T06:59:40.952Z, origin=O=UK Mint, L=London, C=GB, session_id=3ea08fa0-c07c-43ae-89cd-4a4b84cc926c, session_timestamp=2021-10-28T06:59:40.952Z, thread-id=205}
[INFO ] 2021-10-28T06:59:41,331Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bd694076-513d-4fbf-80d3-600aeac7b2eb, invocation_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, invocation_timestamp=2021-10-28T06:59:40.615Z, origin=Only For Testing, session_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, session_timestamp=2021-10-28T06:59:40.615Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,334Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bd694076-513d-4fbf-80d3-600aeac7b2eb, invocation_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, invocation_timestamp=2021-10-28T06:59:40.615Z, origin=Only For Testing, session_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, session_timestamp=2021-10-28T06:59:40.615Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,351Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bd694076-513d-4fbf-80d3-600aeac7b2eb, invocation_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, invocation_timestamp=2021-10-28T06:59:40.615Z, origin=Only For Testing, session_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, session_timestamp=2021-10-28T06:59:40.615Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,381Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=f559bc5b-c9f0-4835-acfb-fc4e51deabcc, invocation_id=9a00022f-b190-4d45-a676-e10fe095e0e3, invocation_timestamp=2021-10-28T06:59:41.070Z, origin=O=UK Mint, L=London, C=GB, session_id=9a00022f-b190-4d45-a676-e10fe095e0e3, session_timestamp=2021-10-28T06:59:41.070Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,489Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=f559bc5b-c9f0-4835-acfb-fc4e51deabcc, invocation_id=9a00022f-b190-4d45-a676-e10fe095e0e3, invocation_timestamp=2021-10-28T06:59:41.070Z, origin=O=UK Mint, L=London, C=GB, session_id=9a00022f-b190-4d45-a676-e10fe095e0e3, session_timestamp=2021-10-28T06:59:41.070Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,500Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=f559bc5b-c9f0-4835-acfb-fc4e51deabcc, invocation_id=9a00022f-b190-4d45-a676-e10fe095e0e3, invocation_timestamp=2021-10-28T06:59:41.070Z, origin=O=UK Mint, L=London, C=GB, session_id=9a00022f-b190-4d45-a676-e10fe095e0e3, session_timestamp=2021-10-28T06:59:41.070Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,524Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=f559bc5b-c9f0-4835-acfb-fc4e51deabcc, invocation_id=9a00022f-b190-4d45-a676-e10fe095e0e3, invocation_timestamp=2021-10-28T06:59:41.070Z, origin=O=UK Mint, L=London, C=GB, session_id=9a00022f-b190-4d45-a676-e10fe095e0e3, session_timestamp=2021-10-28T06:59:41.070Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,557Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bd694076-513d-4fbf-80d3-600aeac7b2eb, invocation_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, invocation_timestamp=2021-10-28T06:59:40.615Z, origin=Only For Testing, session_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, session_timestamp=2021-10-28T06:59:40.615Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,558Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=bd694076-513d-4fbf-80d3-600aeac7b2eb, invocation_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, invocation_timestamp=2021-10-28T06:59:40.615Z, origin=Only For Testing, session_id=41a48429-23f2-485d-b3ef-34b7fc2df66f, session_timestamp=2021-10-28T06:59:40.615Z, thread-id=205, tx_id=B4A4B8641EF534F5D1826273AD5CDD8B74F2B1D2017C1C962CACD5372238C59C}
[INFO ] 2021-10-28T06:59:41,648Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T06:59:41,671Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:59:41,671Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:41,675Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T06:59:41,689Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:59:41,689Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:41,690Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T06:59:41,705Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:59:41,705Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T06:59:41,708Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T06:59:41,721Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T06:59:41,721Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:27,160Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:00:27,192Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:00:27,207Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:00:27,719Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:00:29,341Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:29,666Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:00:29,748Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:00:29,771Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:00:29,778Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs, alias: identity-private-key {}
[INFO ] 2021-10-28T07:00:29,941Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,941Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,942Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,942Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,942Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,943Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,943Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,944Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,944Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,945Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,945Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,947Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:00:29,948Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:29,992Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:30,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:00:18.205Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:00:37,886Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:00:37,976Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:00:37,982Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:00:40,921Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:00:41,243Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:00:41,255Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243), owningKey=DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs {}
[INFO ] 2021-10-28T07:00:41,257Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:00:41,454Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243) {}
[INFO ] 2021-10-28T07:00:41,547Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:00:41,584Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:00:41,587Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:00:41,620Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243), owningKey=DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs {}
[INFO ] 2021-10-28T07:00:41,620Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:41,779Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:00:41,795Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:00:41,807Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:00:41,883Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:00:41,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:00:41,993Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:00:42,611Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243) {}
[INFO ] 2021-10-28T07:00:42,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243), owningKey=DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs {}
[INFO ] 2021-10-28T07:00:42,628Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:42,638Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243), owningKey=DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs {}
[INFO ] 2021-10-28T07:00:42,642Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:42,687Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:00:42,690Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:00:42,696Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:00:42,707Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:00:42,758Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:42,760Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:00:42,762Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:00:42,811Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:00:42,812Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM, alias: identity-private-key {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,819Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,820Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,820Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,820Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:00:42,820Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,820Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:42,837Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:00:18.205Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:00:43,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:00:43,557Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:43,557Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:43,756Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:43,763Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:00:43,768Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763), owningKey=DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM {}
[INFO ] 2021-10-28T07:00:43,768Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:43,780Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763) {}
[INFO ] 2021-10-28T07:00:43,788Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:00:43,791Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:00:43,791Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:00:43,800Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763), owningKey=DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM {}
[INFO ] 2021-10-28T07:00:43,800Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:43,847Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:00:43,852Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:00:43,853Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:00:43,856Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:00:43,862Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:00:43,895Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763) {}
[INFO ] 2021-10-28T07:00:43,900Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243), owningKey=DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs {}
[INFO ] 2021-10-28T07:00:43,900Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:00:43,916Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763), owningKey=DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM {}
[INFO ] 2021-10-28T07:00:43,916Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:43,931Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763), owningKey=DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM {}
[INFO ] 2021-10-28T07:00:43,932Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:43,932Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763), owningKey=DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM {}
[INFO ] 2021-10-28T07:00:43,932Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:43,949Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:00:43,950Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:00:43,950Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:00:43,959Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:00:44,007Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:44,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:00:44,012Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:00:44,064Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:00:44,064Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc, alias: identity-private-key {}
[INFO ] 2021-10-28T07:00:44,072Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:44,079Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:00:18.205Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:00:44,759Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:00:44,761Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:44,762Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:44,935Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:44,941Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:00:44,948Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941), owningKey=DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc {}
[INFO ] 2021-10-28T07:00:44,948Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:44,962Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941) {}
[INFO ] 2021-10-28T07:00:44,976Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:00:44,982Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:00:44,982Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:00:44,989Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941), owningKey=DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc {}
[INFO ] 2021-10-28T07:00:44,989Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:45,058Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:00:45,062Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:00:45,063Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:00:45,063Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:00:45,071Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:00:45,095Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941) {}
[INFO ] 2021-10-28T07:00:45,098Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243), owningKey=DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs {}
[INFO ] 2021-10-28T07:00:45,098Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:00:45,111Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941), owningKey=DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc {}
[INFO ] 2021-10-28T07:00:45,111Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:45,125Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763), owningKey=DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM {}
[INFO ] 2021-10-28T07:00:45,125Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:45,138Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941), owningKey=DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc {}
[INFO ] 2021-10-28T07:00:45,138Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:45,149Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941), owningKey=DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc {}
[INFO ] 2021-10-28T07:00:45,149Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:45,149Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941), owningKey=DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc {}
[INFO ] 2021-10-28T07:00:45,149Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:45,162Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:00:45,162Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:00:45,162Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:00:45,186Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:00:45,231Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:45,232Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:00:45,234Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:00:45,281Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:00:45,281Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG, alias: identity-private-key {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,290Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:00:45,302Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:00:18.205Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:00:46,064Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:00:46,065Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:46,065Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:46,435Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:00:46,442Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:00:46,446Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442), owningKey=DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG {}
[INFO ] 2021-10-28T07:00:46,446Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:46,455Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442) {}
[INFO ] 2021-10-28T07:00:46,462Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:00:46,463Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:00:46,463Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:00:46,473Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442), owningKey=DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG {}
[INFO ] 2021-10-28T07:00:46,473Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:46,518Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:00:46,520Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:00:46,521Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070020.331-70E36E95F5B95E78/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:00:46,521Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:00:46,534Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:00:46,556Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442) {}
[INFO ] 2021-10-28T07:00:46,559Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404441243), owningKey=DLCBTb5WMeGDvY19KJtYM4Sv5xd83KcziwTbL17ixQpvfs {}
[INFO ] 2021-10-28T07:00:46,559Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:00:46,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442), owningKey=DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG {}
[INFO ] 2021-10-28T07:00:46,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:46,588Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404443763), owningKey=DL8K541TqTf2HqLRiPEToPpsXCVcudQfraxMxxkqDRbpnM {}
[INFO ] 2021-10-28T07:00:46,588Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:46,602Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442), owningKey=DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG {}
[INFO ] 2021-10-28T07:00:46,602Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:46,614Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404444941), owningKey=DLFqEfiun1DUGHgKZ5bhdSzABkcrrgbSTCinYCbsW7s4Nc {}
[INFO ] 2021-10-28T07:00:46,614Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:46,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442), owningKey=DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG {}
[INFO ] 2021-10-28T07:00:46,626Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:00:46,641Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442), owningKey=DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG {}
[INFO ] 2021-10-28T07:00:46,641Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:46,643Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404446442), owningKey=DL54N9sL6vNHYMayPYJuH4qwSH2XAUqaRJUZmhrYQT4mfG {}
[INFO ] 2021-10-28T07:00:46,643Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:00:47,885Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=95bfaf7d-c804-47da-9f5d-7bb84812cf28, invocation_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, invocation_timestamp=2021-10-28T07:00:46.675Z, origin=Only For Testing, session_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, session_timestamp=2021-10-28T07:00:46.675Z, thread-id=206, tx_id=5DA5016D4CF623FE0502B5FABA9E3A198B75B766FB4AAE6B5DC2D9D197A40EE6}
[INFO ] 2021-10-28T07:00:47,886Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=95bfaf7d-c804-47da-9f5d-7bb84812cf28, invocation_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, invocation_timestamp=2021-10-28T07:00:46.675Z, origin=Only For Testing, session_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, session_timestamp=2021-10-28T07:00:46.675Z, thread-id=206, tx_id=5DA5016D4CF623FE0502B5FABA9E3A198B75B766FB4AAE6B5DC2D9D197A40EE6}
[INFO ] 2021-10-28T07:00:48,069Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=95bfaf7d-c804-47da-9f5d-7bb84812cf28, invocation_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, invocation_timestamp=2021-10-28T07:00:46.675Z, origin=Only For Testing, session_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, session_timestamp=2021-10-28T07:00:46.675Z, thread-id=206, tx_id=5DA5016D4CF623FE0502B5FABA9E3A198B75B766FB4AAE6B5DC2D9D197A40EE6}
[INFO ] 2021-10-28T07:00:48,069Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=95bfaf7d-c804-47da-9f5d-7bb84812cf28, invocation_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, invocation_timestamp=2021-10-28T07:00:46.675Z, origin=Only For Testing, session_id=bf6b3eff-26c0-4714-b1c5-c42dbc7b556b, session_timestamp=2021-10-28T07:00:46.675Z, thread-id=206, tx_id=5DA5016D4CF623FE0502B5FABA9E3A198B75B766FB4AAE6B5DC2D9D197A40EE6}
[INFO ] 2021-10-28T07:00:48,521Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c935a3a3-eba1-4edd-817f-ee21c958f1c8, invocation_id=9b6425fd-dec7-4379-9921-65268724bb61, invocation_timestamp=2021-10-28T07:00:48.176Z, origin=Only For Testing, session_id=9b6425fd-dec7-4379-9921-65268724bb61, session_timestamp=2021-10-28T07:00:48.176Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:48,636Z [Mock network] corda.flow. - Received a notarisation request for Tx [0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=4a36cd37-3659-4f2b-bb19-17c65ffcc13c, invocation_id=2fc53521-7429-43c4-9b57-70c5f4514612, invocation_timestamp=2021-10-28T07:00:48.596Z, origin=O=UK Mint, L=London, C=GB, session_id=2fc53521-7429-43c4-9b57-70c5f4514612, session_timestamp=2021-10-28T07:00:48.596Z, thread-id=206}
[INFO ] 2021-10-28T07:00:49,114Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:00:49,133Z [Mock network] corda.flow. - Transaction [0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=4a36cd37-3659-4f2b-bb19-17c65ffcc13c, invocation_id=2fc53521-7429-43c4-9b57-70c5f4514612, invocation_timestamp=2021-10-28T07:00:48.596Z, origin=O=UK Mint, L=London, C=GB, session_id=2fc53521-7429-43c4-9b57-70c5f4514612, session_timestamp=2021-10-28T07:00:48.596Z, thread-id=206}
[INFO ] 2021-10-28T07:00:49,165Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c935a3a3-eba1-4edd-817f-ee21c958f1c8, invocation_id=9b6425fd-dec7-4379-9921-65268724bb61, invocation_timestamp=2021-10-28T07:00:48.176Z, origin=Only For Testing, session_id=9b6425fd-dec7-4379-9921-65268724bb61, session_timestamp=2021-10-28T07:00:48.176Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,167Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c935a3a3-eba1-4edd-817f-ee21c958f1c8, invocation_id=9b6425fd-dec7-4379-9921-65268724bb61, invocation_timestamp=2021-10-28T07:00:48.176Z, origin=Only For Testing, session_id=9b6425fd-dec7-4379-9921-65268724bb61, session_timestamp=2021-10-28T07:00:48.176Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,183Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c935a3a3-eba1-4edd-817f-ee21c958f1c8, invocation_id=9b6425fd-dec7-4379-9921-65268724bb61, invocation_timestamp=2021-10-28T07:00:48.176Z, origin=Only For Testing, session_id=9b6425fd-dec7-4379-9921-65268724bb61, session_timestamp=2021-10-28T07:00:48.176Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,239Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=e2477f4e-787a-44fa-bfa8-6acb4fa85cf3, invocation_id=1ae15031-749f-40a0-b485-d05e9b2964b7, invocation_timestamp=2021-10-28T07:00:48.715Z, origin=O=UK Mint, L=London, C=GB, session_id=1ae15031-749f-40a0-b485-d05e9b2964b7, session_timestamp=2021-10-28T07:00:48.715Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,445Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=e2477f4e-787a-44fa-bfa8-6acb4fa85cf3, invocation_id=1ae15031-749f-40a0-b485-d05e9b2964b7, invocation_timestamp=2021-10-28T07:00:48.715Z, origin=O=UK Mint, L=London, C=GB, session_id=1ae15031-749f-40a0-b485-d05e9b2964b7, session_timestamp=2021-10-28T07:00:48.715Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,457Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=e2477f4e-787a-44fa-bfa8-6acb4fa85cf3, invocation_id=1ae15031-749f-40a0-b485-d05e9b2964b7, invocation_timestamp=2021-10-28T07:00:48.715Z, origin=O=UK Mint, L=London, C=GB, session_id=1ae15031-749f-40a0-b485-d05e9b2964b7, session_timestamp=2021-10-28T07:00:48.715Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,470Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=e2477f4e-787a-44fa-bfa8-6acb4fa85cf3, invocation_id=1ae15031-749f-40a0-b485-d05e9b2964b7, invocation_timestamp=2021-10-28T07:00:48.715Z, origin=O=UK Mint, L=London, C=GB, session_id=1ae15031-749f-40a0-b485-d05e9b2964b7, session_timestamp=2021-10-28T07:00:48.715Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,486Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c935a3a3-eba1-4edd-817f-ee21c958f1c8, invocation_id=9b6425fd-dec7-4379-9921-65268724bb61, invocation_timestamp=2021-10-28T07:00:48.176Z, origin=Only For Testing, session_id=9b6425fd-dec7-4379-9921-65268724bb61, session_timestamp=2021-10-28T07:00:48.176Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,486Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c935a3a3-eba1-4edd-817f-ee21c958f1c8, invocation_id=9b6425fd-dec7-4379-9921-65268724bb61, invocation_timestamp=2021-10-28T07:00:48.176Z, origin=Only For Testing, session_id=9b6425fd-dec7-4379-9921-65268724bb61, session_timestamp=2021-10-28T07:00:48.176Z, thread-id=206, tx_id=0A228A8EA2F2A77B4E5E5D8C836C017006F439ECC3D7DD3B3FABDCF5AB8A2DEE}
[INFO ] 2021-10-28T07:00:49,576Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=5f4b13a7-2640-46dc-a70b-465a8fcf2fd4, invocation_id=a048a6f7-6922-4883-a23b-7ad86b497695, invocation_timestamp=2021-10-28T07:00:49.496Z, origin=Only For Testing, session_id=a048a6f7-6922-4883-a23b-7ad86b497695, session_timestamp=2021-10-28T07:00:49.496Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:49,599Z [Mock network] corda.flow. - Received a notarisation request for Tx [AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=aebf9ac8-90ab-429b-8578-b03c03b98fbf, invocation_id=837f5074-0e3d-4695-bc8b-6365a73969cc, invocation_timestamp=2021-10-28T07:00:49.587Z, origin=O=Abbey, L=London, C=GB, session_id=837f5074-0e3d-4695-bc8b-6365a73969cc, session_timestamp=2021-10-28T07:00:49.587Z, thread-id=206}
[INFO ] 2021-10-28T07:00:49,743Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:00:49,748Z [Mock network] corda.flow. - Transaction [AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=aebf9ac8-90ab-429b-8578-b03c03b98fbf, invocation_id=837f5074-0e3d-4695-bc8b-6365a73969cc, invocation_timestamp=2021-10-28T07:00:49.587Z, origin=O=Abbey, L=London, C=GB, session_id=837f5074-0e3d-4695-bc8b-6365a73969cc, session_timestamp=2021-10-28T07:00:49.587Z, thread-id=206}
[INFO ] 2021-10-28T07:00:49,807Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=5f4b13a7-2640-46dc-a70b-465a8fcf2fd4, invocation_id=a048a6f7-6922-4883-a23b-7ad86b497695, invocation_timestamp=2021-10-28T07:00:49.496Z, origin=Only For Testing, session_id=a048a6f7-6922-4883-a23b-7ad86b497695, session_timestamp=2021-10-28T07:00:49.496Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:49,808Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=5f4b13a7-2640-46dc-a70b-465a8fcf2fd4, invocation_id=a048a6f7-6922-4883-a23b-7ad86b497695, invocation_timestamp=2021-10-28T07:00:49.496Z, origin=Only For Testing, session_id=a048a6f7-6922-4883-a23b-7ad86b497695, session_timestamp=2021-10-28T07:00:49.496Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:49,818Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=5f4b13a7-2640-46dc-a70b-465a8fcf2fd4, invocation_id=a048a6f7-6922-4883-a23b-7ad86b497695, invocation_timestamp=2021-10-28T07:00:49.496Z, origin=Only For Testing, session_id=a048a6f7-6922-4883-a23b-7ad86b497695, session_timestamp=2021-10-28T07:00:49.496Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:49,833Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=205c3bd1-1e2e-414b-a195-fac651de95ba, invocation_id=999b9443-213a-4a44-9120-e930a7f35401, invocation_timestamp=2021-10-28T07:00:49.611Z, origin=O=Abbey, L=London, C=GB, session_id=999b9443-213a-4a44-9120-e930a7f35401, session_timestamp=2021-10-28T07:00:49.611Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:50,039Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=205c3bd1-1e2e-414b-a195-fac651de95ba, invocation_id=999b9443-213a-4a44-9120-e930a7f35401, invocation_timestamp=2021-10-28T07:00:49.611Z, origin=O=Abbey, L=London, C=GB, session_id=999b9443-213a-4a44-9120-e930a7f35401, session_timestamp=2021-10-28T07:00:49.611Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:50,047Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=205c3bd1-1e2e-414b-a195-fac651de95ba, invocation_id=999b9443-213a-4a44-9120-e930a7f35401, invocation_timestamp=2021-10-28T07:00:49.611Z, origin=O=Abbey, L=London, C=GB, session_id=999b9443-213a-4a44-9120-e930a7f35401, session_timestamp=2021-10-28T07:00:49.611Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:50,065Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=205c3bd1-1e2e-414b-a195-fac651de95ba, invocation_id=999b9443-213a-4a44-9120-e930a7f35401, invocation_timestamp=2021-10-28T07:00:49.611Z, origin=O=Abbey, L=London, C=GB, session_id=999b9443-213a-4a44-9120-e930a7f35401, session_timestamp=2021-10-28T07:00:49.611Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:50,079Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=5f4b13a7-2640-46dc-a70b-465a8fcf2fd4, invocation_id=a048a6f7-6922-4883-a23b-7ad86b497695, invocation_timestamp=2021-10-28T07:00:49.496Z, origin=Only For Testing, session_id=a048a6f7-6922-4883-a23b-7ad86b497695, session_timestamp=2021-10-28T07:00:49.496Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:50,079Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=5f4b13a7-2640-46dc-a70b-465a8fcf2fd4, invocation_id=a048a6f7-6922-4883-a23b-7ad86b497695, invocation_timestamp=2021-10-28T07:00:49.496Z, origin=Only For Testing, session_id=a048a6f7-6922-4883-a23b-7ad86b497695, session_timestamp=2021-10-28T07:00:49.496Z, thread-id=206, tx_id=AC6D893381D408F8B801519C519E7D2BC2AD5F6D589F837E53D44667C5681ACE}
[INFO ] 2021-10-28T07:00:50,154Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:00:50,181Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:00:50,181Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:50,186Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:00:50,197Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:00:50,197Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:50,198Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:00:50,214Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:00:50,214Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:00:50,216Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:00:50,229Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:00:50,229Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:05:40,234Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:05:40,261Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:05:40,274Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:05:40,734Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:05:42,291Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:05:42,598Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:05:42,673Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:05:42,694Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:05:42,699Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif, alias: identity-private-key {}
[INFO ] 2021-10-28T07:05:42,851Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,852Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,854Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,855Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,855Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,859Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,859Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,860Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:05:42,871Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:42,928Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:43,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:05:31.484Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:05:49,802Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:05:49,874Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:05:49,880Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:05:52,778Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:05:53,095Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:05:53,105Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095), owningKey=DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif {}
[INFO ] 2021-10-28T07:05:53,105Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:05:53,270Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095) {}
[INFO ] 2021-10-28T07:05:53,336Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:05:53,370Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:05:53,372Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:05:53,406Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095), owningKey=DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif {}
[INFO ] 2021-10-28T07:05:53,406Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:53,536Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:05:53,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:05:53,575Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:05:53,677Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:05:53,763Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:05:53,763Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:05:54,391Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095) {}
[INFO ] 2021-10-28T07:05:54,401Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095), owningKey=DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif {}
[INFO ] 2021-10-28T07:05:54,403Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:54,403Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095), owningKey=DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif {}
[INFO ] 2021-10-28T07:05:54,403Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:54,446Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:05:54,446Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:05:54,446Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:05:54,485Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:05:54,585Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:05:54,586Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:05:54,592Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:05:54,634Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:05:54,635Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT, alias: identity-private-key {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,646Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,646Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,646Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,646Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:05:54,646Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,646Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:54,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:05:31.484Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:05:55,377Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:05:55,378Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:55,378Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:55,576Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:55,587Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:05:55,591Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587), owningKey=DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT {}
[INFO ] 2021-10-28T07:05:55,591Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:55,601Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587) {}
[INFO ] 2021-10-28T07:05:55,611Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:05:55,611Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:05:55,611Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:05:55,617Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587), owningKey=DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT {}
[INFO ] 2021-10-28T07:05:55,617Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:55,654Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:05:55,659Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:05:55,659Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:05:55,660Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:05:55,668Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:05:55,698Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587) {}
[INFO ] 2021-10-28T07:05:55,702Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095), owningKey=DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif {}
[INFO ] 2021-10-28T07:05:55,702Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:05:55,720Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587), owningKey=DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT {}
[INFO ] 2021-10-28T07:05:55,720Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:55,732Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587), owningKey=DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT {}
[INFO ] 2021-10-28T07:05:55,732Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:55,733Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587), owningKey=DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT {}
[INFO ] 2021-10-28T07:05:55,733Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:55,747Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:05:55,747Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:05:55,747Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:05:55,756Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:05:55,798Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:05:55,800Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:05:55,803Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:05:55,842Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:05:55,842Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa, alias: identity-private-key {}
[INFO ] 2021-10-28T07:05:55,849Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,849Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,849Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,849Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,850Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:55,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:05:31.484Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:05:56,496Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:05:56,499Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:56,499Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:56,721Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:56,726Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:05:56,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726), owningKey=DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa {}
[INFO ] 2021-10-28T07:05:56,729Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:56,738Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726) {}
[INFO ] 2021-10-28T07:05:56,761Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:05:56,762Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:05:56,762Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:05:56,769Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726), owningKey=DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa {}
[INFO ] 2021-10-28T07:05:56,769Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:56,800Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:05:56,802Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:05:56,803Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:05:56,803Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:05:56,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:05:56,832Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726) {}
[INFO ] 2021-10-28T07:05:56,836Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095), owningKey=DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif {}
[INFO ] 2021-10-28T07:05:56,836Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:05:56,850Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726), owningKey=DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa {}
[INFO ] 2021-10-28T07:05:56,850Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:56,865Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587), owningKey=DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT {}
[INFO ] 2021-10-28T07:05:56,865Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:56,878Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726), owningKey=DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa {}
[INFO ] 2021-10-28T07:05:56,878Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:56,891Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726), owningKey=DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa {}
[INFO ] 2021-10-28T07:05:56,891Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:56,891Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726), owningKey=DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa {}
[INFO ] 2021-10-28T07:05:56,891Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:56,901Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:05:56,901Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:05:56,902Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:05:56,909Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:05:56,947Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:05:56,949Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:05:56,950Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:05:56,992Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:05:56,993Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y, alias: identity-private-key {}
[INFO ] 2021-10-28T07:05:57,000Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,000Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,000Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,001Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,001Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,001Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,001Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,001Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,001Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,002Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,002Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,003Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:05:57,003Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,003Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:05:57,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:05:31.484Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:05:57,658Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:05:57,660Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:57,660Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:57,803Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:05:57,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:05:57,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809), owningKey=DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y {}
[INFO ] 2021-10-28T07:05:57,814Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:57,821Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809) {}
[INFO ] 2021-10-28T07:05:57,828Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:05:57,828Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:05:57,828Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:05:57,835Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809), owningKey=DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y {}
[INFO ] 2021-10-28T07:05:57,835Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:57,879Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:05:57,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:05:57,883Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-070533.619-41A5180EF31F4020/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:05:57,883Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:05:57,895Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:05:57,917Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809) {}
[INFO ] 2021-10-28T07:05:57,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635404753095), owningKey=DLFYpiS78yZoBiA4to8y523asfGhR6FUwavDyvufesDqif {}
[INFO ] 2021-10-28T07:05:57,922Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:05:57,934Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809), owningKey=DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y {}
[INFO ] 2021-10-28T07:05:57,934Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:57,950Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635404755587), owningKey=DL7rZwypLJKdY8RN9SkvRwGy2YXhs5KHxGrYWm6sKNt3MT {}
[INFO ] 2021-10-28T07:05:57,950Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:57,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809), owningKey=DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y {}
[INFO ] 2021-10-28T07:05:57,965Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:57,979Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635404756726), owningKey=DLFKuMKpftFYMCR6Tf5c3rMybMrpqiFpkNrCnu3BLRcFWa {}
[INFO ] 2021-10-28T07:05:57,979Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:57,990Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809), owningKey=DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y {}
[INFO ] 2021-10-28T07:05:57,990Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:05:57,999Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809), owningKey=DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y {}
[INFO ] 2021-10-28T07:05:57,999Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:57,999Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635404757809), owningKey=DLkg3VdyGeeBUJRk39JxddVSzXCa9TopKAhrhfUAbAx6y {}
[INFO ] 2021-10-28T07:05:57,999Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:05:59,127Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=26b828d2-e8cc-4e6b-b2de-8c3203d02de6, invocation_id=983110c8-dd5a-45e9-8b51-411141f27a00, invocation_timestamp=2021-10-28T07:05:58.034Z, origin=Only For Testing, session_id=983110c8-dd5a-45e9-8b51-411141f27a00, session_timestamp=2021-10-28T07:05:58.034Z, thread-id=205, tx_id=0D86721891133E2F9B8683624279DCE286FEFFA12B1B8A763382E2E8EC35C797}
[INFO ] 2021-10-28T07:05:59,127Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=26b828d2-e8cc-4e6b-b2de-8c3203d02de6, invocation_id=983110c8-dd5a-45e9-8b51-411141f27a00, invocation_timestamp=2021-10-28T07:05:58.034Z, origin=Only For Testing, session_id=983110c8-dd5a-45e9-8b51-411141f27a00, session_timestamp=2021-10-28T07:05:58.034Z, thread-id=205, tx_id=0D86721891133E2F9B8683624279DCE286FEFFA12B1B8A763382E2E8EC35C797}
[INFO ] 2021-10-28T07:05:59,280Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=26b828d2-e8cc-4e6b-b2de-8c3203d02de6, invocation_id=983110c8-dd5a-45e9-8b51-411141f27a00, invocation_timestamp=2021-10-28T07:05:58.034Z, origin=Only For Testing, session_id=983110c8-dd5a-45e9-8b51-411141f27a00, session_timestamp=2021-10-28T07:05:58.034Z, thread-id=205, tx_id=0D86721891133E2F9B8683624279DCE286FEFFA12B1B8A763382E2E8EC35C797}
[INFO ] 2021-10-28T07:05:59,280Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=26b828d2-e8cc-4e6b-b2de-8c3203d02de6, invocation_id=983110c8-dd5a-45e9-8b51-411141f27a00, invocation_timestamp=2021-10-28T07:05:58.034Z, origin=Only For Testing, session_id=983110c8-dd5a-45e9-8b51-411141f27a00, session_timestamp=2021-10-28T07:05:58.034Z, thread-id=205, tx_id=0D86721891133E2F9B8683624279DCE286FEFFA12B1B8A763382E2E8EC35C797}
[INFO ] 2021-10-28T07:05:59,694Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=85cbb512-0628-4104-a739-daf2dc0b4ab9, invocation_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, invocation_timestamp=2021-10-28T07:05:59.386Z, origin=Only For Testing, session_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, session_timestamp=2021-10-28T07:05:59.386Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:05:59,804Z [Mock network] corda.flow. - Received a notarisation request for Tx [AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=59a06609-c627-41cb-86c6-5826a6f2d1ad, invocation_id=e75fbae7-9a34-4bf8-b6ce-cc48f4d89538, invocation_timestamp=2021-10-28T07:05:59.763Z, origin=O=UK Mint, L=London, C=GB, session_id=e75fbae7-9a34-4bf8-b6ce-cc48f4d89538, session_timestamp=2021-10-28T07:05:59.763Z, thread-id=205}
[INFO ] 2021-10-28T07:06:00,319Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:06:00,344Z [Mock network] corda.flow. - Transaction [AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=59a06609-c627-41cb-86c6-5826a6f2d1ad, invocation_id=e75fbae7-9a34-4bf8-b6ce-cc48f4d89538, invocation_timestamp=2021-10-28T07:05:59.763Z, origin=O=UK Mint, L=London, C=GB, session_id=e75fbae7-9a34-4bf8-b6ce-cc48f4d89538, session_timestamp=2021-10-28T07:05:59.763Z, thread-id=205}
[INFO ] 2021-10-28T07:06:00,393Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=85cbb512-0628-4104-a739-daf2dc0b4ab9, invocation_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, invocation_timestamp=2021-10-28T07:05:59.386Z, origin=Only For Testing, session_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, session_timestamp=2021-10-28T07:05:59.386Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,398Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=85cbb512-0628-4104-a739-daf2dc0b4ab9, invocation_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, invocation_timestamp=2021-10-28T07:05:59.386Z, origin=Only For Testing, session_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, session_timestamp=2021-10-28T07:05:59.386Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,423Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=85cbb512-0628-4104-a739-daf2dc0b4ab9, invocation_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, invocation_timestamp=2021-10-28T07:05:59.386Z, origin=Only For Testing, session_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, session_timestamp=2021-10-28T07:05:59.386Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,480Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=4692c03e-292e-4120-ae95-b042676f1051, invocation_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, invocation_timestamp=2021-10-28T07:05:59.888Z, origin=O=UK Mint, L=London, C=GB, session_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, session_timestamp=2021-10-28T07:05:59.888Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,627Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=4692c03e-292e-4120-ae95-b042676f1051, invocation_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, invocation_timestamp=2021-10-28T07:05:59.888Z, origin=O=UK Mint, L=London, C=GB, session_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, session_timestamp=2021-10-28T07:05:59.888Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,643Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=4692c03e-292e-4120-ae95-b042676f1051, invocation_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, invocation_timestamp=2021-10-28T07:05:59.888Z, origin=O=UK Mint, L=London, C=GB, session_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, session_timestamp=2021-10-28T07:05:59.888Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,660Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=4692c03e-292e-4120-ae95-b042676f1051, invocation_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, invocation_timestamp=2021-10-28T07:05:59.888Z, origin=O=UK Mint, L=London, C=GB, session_id=aa224f89-4ccc-478e-bbdf-95d9137d23f7, session_timestamp=2021-10-28T07:05:59.888Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,673Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=85cbb512-0628-4104-a739-daf2dc0b4ab9, invocation_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, invocation_timestamp=2021-10-28T07:05:59.386Z, origin=Only For Testing, session_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, session_timestamp=2021-10-28T07:05:59.386Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,673Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=85cbb512-0628-4104-a739-daf2dc0b4ab9, invocation_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, invocation_timestamp=2021-10-28T07:05:59.386Z, origin=Only For Testing, session_id=c9f62f05-ad38-471c-88f0-5e39b310c5d6, session_timestamp=2021-10-28T07:05:59.386Z, thread-id=205, tx_id=AF6EA807FB9CBCF67391CA396580982AD5B0F269704813656E4EC7E79E73E7DA}
[INFO ] 2021-10-28T07:06:00,762Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=38f0a270-8467-49c8-a6e6-620a45667903, invocation_id=893d8574-24f7-4643-85e8-0c09dc9b0668, invocation_timestamp=2021-10-28T07:06:00.683Z, origin=Only For Testing, session_id=893d8574-24f7-4643-85e8-0c09dc9b0668, session_timestamp=2021-10-28T07:06:00.683Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:00,787Z [Mock network] corda.flow. - Received a notarisation request for Tx [229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=62984120-1eeb-450e-be3b-948b0bd8b8cf, invocation_id=3ed356b1-d768-44ab-b034-b8b14c402fed, invocation_timestamp=2021-10-28T07:06:00.774Z, origin=O=Abbey, L=London, C=GB, session_id=3ed356b1-d768-44ab-b034-b8b14c402fed, session_timestamp=2021-10-28T07:06:00.774Z, thread-id=205}
[INFO ] 2021-10-28T07:06:00,941Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:06:00,945Z [Mock network] corda.flow. - Transaction [229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=62984120-1eeb-450e-be3b-948b0bd8b8cf, invocation_id=3ed356b1-d768-44ab-b034-b8b14c402fed, invocation_timestamp=2021-10-28T07:06:00.774Z, origin=O=Abbey, L=London, C=GB, session_id=3ed356b1-d768-44ab-b034-b8b14c402fed, session_timestamp=2021-10-28T07:06:00.774Z, thread-id=205}
[INFO ] 2021-10-28T07:06:00,979Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=38f0a270-8467-49c8-a6e6-620a45667903, invocation_id=893d8574-24f7-4643-85e8-0c09dc9b0668, invocation_timestamp=2021-10-28T07:06:00.683Z, origin=Only For Testing, session_id=893d8574-24f7-4643-85e8-0c09dc9b0668, session_timestamp=2021-10-28T07:06:00.683Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:00,980Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=38f0a270-8467-49c8-a6e6-620a45667903, invocation_id=893d8574-24f7-4643-85e8-0c09dc9b0668, invocation_timestamp=2021-10-28T07:06:00.683Z, origin=Only For Testing, session_id=893d8574-24f7-4643-85e8-0c09dc9b0668, session_timestamp=2021-10-28T07:06:00.683Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:00,991Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=38f0a270-8467-49c8-a6e6-620a45667903, invocation_id=893d8574-24f7-4643-85e8-0c09dc9b0668, invocation_timestamp=2021-10-28T07:06:00.683Z, origin=Only For Testing, session_id=893d8574-24f7-4643-85e8-0c09dc9b0668, session_timestamp=2021-10-28T07:06:00.683Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:01,009Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=2eeace1c-0a8e-4f68-ba8c-53348288020e, invocation_id=61f8d781-2e32-452f-afe1-70868d96e275, invocation_timestamp=2021-10-28T07:06:00.801Z, origin=O=Abbey, L=London, C=GB, session_id=61f8d781-2e32-452f-afe1-70868d96e275, session_timestamp=2021-10-28T07:06:00.801Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:01,174Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=2eeace1c-0a8e-4f68-ba8c-53348288020e, invocation_id=61f8d781-2e32-452f-afe1-70868d96e275, invocation_timestamp=2021-10-28T07:06:00.801Z, origin=O=Abbey, L=London, C=GB, session_id=61f8d781-2e32-452f-afe1-70868d96e275, session_timestamp=2021-10-28T07:06:00.801Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:01,182Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=2eeace1c-0a8e-4f68-ba8c-53348288020e, invocation_id=61f8d781-2e32-452f-afe1-70868d96e275, invocation_timestamp=2021-10-28T07:06:00.801Z, origin=O=Abbey, L=London, C=GB, session_id=61f8d781-2e32-452f-afe1-70868d96e275, session_timestamp=2021-10-28T07:06:00.801Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:01,194Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=2eeace1c-0a8e-4f68-ba8c-53348288020e, invocation_id=61f8d781-2e32-452f-afe1-70868d96e275, invocation_timestamp=2021-10-28T07:06:00.801Z, origin=O=Abbey, L=London, C=GB, session_id=61f8d781-2e32-452f-afe1-70868d96e275, session_timestamp=2021-10-28T07:06:00.801Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:01,207Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=38f0a270-8467-49c8-a6e6-620a45667903, invocation_id=893d8574-24f7-4643-85e8-0c09dc9b0668, invocation_timestamp=2021-10-28T07:06:00.683Z, origin=Only For Testing, session_id=893d8574-24f7-4643-85e8-0c09dc9b0668, session_timestamp=2021-10-28T07:06:00.683Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:01,207Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=38f0a270-8467-49c8-a6e6-620a45667903, invocation_id=893d8574-24f7-4643-85e8-0c09dc9b0668, invocation_timestamp=2021-10-28T07:06:00.683Z, origin=Only For Testing, session_id=893d8574-24f7-4643-85e8-0c09dc9b0668, session_timestamp=2021-10-28T07:06:00.683Z, thread-id=205, tx_id=229F609CA1B8B8C590DFE13F0C46DCE7CB1AD38B7BC989925A55F0530CE74557}
[INFO ] 2021-10-28T07:06:01,278Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:06:01,310Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:06:01,310Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:06:01,317Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:06:01,337Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:06:01,337Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:06:01,339Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:06:01,351Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:06:01,351Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:06:01,354Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:06:01,367Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:06:01,367Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:10:26,859Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:10:26,898Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:10:26,915Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:10:27,388Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:10:29,059Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:10:29,369Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:10:29,436Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:10:29,454Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:10:29,462Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN, alias: identity-private-key {}
[INFO ] 2021-10-28T07:10:29,604Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,604Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,610Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,611Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,611Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,612Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,612Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,613Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,613Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,613Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,614Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,619Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:10:29,620Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,692Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:29,774Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:10:17.314Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:10:35,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:10:35,825Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:10:35,835Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:10:38,763Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:10:39,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:10:39,059Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051), owningKey=DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN {}
[INFO ] 2021-10-28T07:10:39,059Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:10:39,239Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051) {}
[INFO ] 2021-10-28T07:10:39,297Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:10:39,326Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:10:39,329Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:10:39,372Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051), owningKey=DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN {}
[INFO ] 2021-10-28T07:10:39,372Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:39,563Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:10:39,582Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:10:39,595Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:10:39,756Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:10:39,982Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:10:39,982Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:10:40,631Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051) {}
[INFO ] 2021-10-28T07:10:40,640Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051), owningKey=DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN {}
[INFO ] 2021-10-28T07:10:40,640Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:40,644Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051), owningKey=DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN {}
[INFO ] 2021-10-28T07:10:40,644Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:40,689Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:10:40,691Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:10:40,692Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:10:40,720Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:10:40,800Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:10:40,803Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:10:40,806Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:10:40,849Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:10:40,849Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7, alias: identity-private-key {}
[INFO ] 2021-10-28T07:10:40,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:10:40,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:40,870Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:10:17.314Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:10:41,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:10:41,688Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:41,688Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:41,903Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:41,910Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:10:41,917Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910), owningKey=DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7 {}
[INFO ] 2021-10-28T07:10:41,917Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:41,930Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910) {}
[INFO ] 2021-10-28T07:10:41,940Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:10:41,942Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:10:41,942Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:10:41,949Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910), owningKey=DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7 {}
[INFO ] 2021-10-28T07:10:41,949Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:41,992Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:10:41,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:10:41,997Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:10:41,998Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:10:42,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:10:42,040Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910) {}
[INFO ] 2021-10-28T07:10:42,048Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051), owningKey=DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN {}
[INFO ] 2021-10-28T07:10:42,048Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:10:42,072Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910), owningKey=DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7 {}
[INFO ] 2021-10-28T07:10:42,072Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:42,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910), owningKey=DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7 {}
[INFO ] 2021-10-28T07:10:42,084Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:42,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910), owningKey=DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7 {}
[INFO ] 2021-10-28T07:10:42,084Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:42,104Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:10:42,105Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:10:42,105Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:10:42,113Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:10:42,165Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:10:42,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:10:42,171Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:10:42,217Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:10:42,217Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur, alias: identity-private-key {}
[INFO ] 2021-10-28T07:10:42,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,225Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,227Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,227Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,228Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,230Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,230Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,231Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,231Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,231Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:10:42,231Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,231Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:42,272Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:10:17.314Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:10:43,137Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:10:43,141Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:43,142Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:43,315Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:43,321Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:10:43,325Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321), owningKey=DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur {}
[INFO ] 2021-10-28T07:10:43,325Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:43,334Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321) {}
[INFO ] 2021-10-28T07:10:43,343Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:10:43,343Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:10:43,343Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:10:43,351Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321), owningKey=DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur {}
[INFO ] 2021-10-28T07:10:43,351Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:43,403Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:10:43,406Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:10:43,407Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:10:43,407Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:10:43,414Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:10:43,436Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321) {}
[INFO ] 2021-10-28T07:10:43,439Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051), owningKey=DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN {}
[INFO ] 2021-10-28T07:10:43,439Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:10:43,452Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321), owningKey=DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur {}
[INFO ] 2021-10-28T07:10:43,452Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:43,466Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910), owningKey=DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7 {}
[INFO ] 2021-10-28T07:10:43,466Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:43,479Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321), owningKey=DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur {}
[INFO ] 2021-10-28T07:10:43,479Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:43,489Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321), owningKey=DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur {}
[INFO ] 2021-10-28T07:10:43,489Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:43,489Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321), owningKey=DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur {}
[INFO ] 2021-10-28T07:10:43,489Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:43,499Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:10:43,499Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:10:43,499Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:10:43,509Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:10:43,549Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:10:43,550Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:10:43,551Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:10:43,589Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:10:43,589Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV, alias: identity-private-key {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:10:43,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:10:43,600Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:10:17.314Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:10:44,194Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:10:44,195Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:44,195Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:44,366Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:10:44,375Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:10:44,381Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375), owningKey=DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV {}
[INFO ] 2021-10-28T07:10:44,381Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:44,390Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375) {}
[INFO ] 2021-10-28T07:10:44,398Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:10:44,400Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:10:44,400Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:10:44,408Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375), owningKey=DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV {}
[INFO ] 2021-10-28T07:10:44,408Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:44,464Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:10:44,468Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:10:44,468Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071019.680-D6C6D483B6C6294F/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:10:44,470Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:10:44,479Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:10:44,500Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375) {}
[INFO ] 2021-10-28T07:10:44,503Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405039051), owningKey=DL5uyhnXq85Yn45rU4SGCCbLBkZTEgHjPvz7ijhB6JVwpN {}
[INFO ] 2021-10-28T07:10:44,503Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:10:44,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375), owningKey=DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV {}
[INFO ] 2021-10-28T07:10:44,516Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:44,531Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405041910), owningKey=DLAyhLz3cFkm46UsZxrBMtX4aAwTF94yD6M8DfdjJouXh7 {}
[INFO ] 2021-10-28T07:10:44,531Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:44,541Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375), owningKey=DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV {}
[INFO ] 2021-10-28T07:10:44,541Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:44,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405043321), owningKey=DL2ru8nas9c8bpaVzAKeKZ9P2rT5s9UBZhFo1zWEtBo3Ur {}
[INFO ] 2021-10-28T07:10:44,557Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:44,568Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375), owningKey=DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV {}
[INFO ] 2021-10-28T07:10:44,568Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:10:44,575Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375), owningKey=DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV {}
[INFO ] 2021-10-28T07:10:44,575Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:44,576Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405044375), owningKey=DLHrWPEZGvqZpp1CLoejrQh9q68iyWKc1o2dyLpyL9xQqV {}
[INFO ] 2021-10-28T07:10:44,576Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:10:45,673Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62ff3880-859a-47a1-9423-4ec8930ee0b0, invocation_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, invocation_timestamp=2021-10-28T07:10:44.605Z, origin=Only For Testing, session_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, session_timestamp=2021-10-28T07:10:44.605Z, thread-id=202, tx_id=B006171A2D9E7C3CDDB42FCDC29E2370C36680AC16125CEC940502C540C89D2D}
[INFO ] 2021-10-28T07:10:45,673Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62ff3880-859a-47a1-9423-4ec8930ee0b0, invocation_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, invocation_timestamp=2021-10-28T07:10:44.605Z, origin=Only For Testing, session_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, session_timestamp=2021-10-28T07:10:44.605Z, thread-id=202, tx_id=B006171A2D9E7C3CDDB42FCDC29E2370C36680AC16125CEC940502C540C89D2D}
[INFO ] 2021-10-28T07:10:45,843Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62ff3880-859a-47a1-9423-4ec8930ee0b0, invocation_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, invocation_timestamp=2021-10-28T07:10:44.605Z, origin=Only For Testing, session_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, session_timestamp=2021-10-28T07:10:44.605Z, thread-id=202, tx_id=B006171A2D9E7C3CDDB42FCDC29E2370C36680AC16125CEC940502C540C89D2D}
[INFO ] 2021-10-28T07:10:45,843Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62ff3880-859a-47a1-9423-4ec8930ee0b0, invocation_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, invocation_timestamp=2021-10-28T07:10:44.605Z, origin=Only For Testing, session_id=c4b878b3-6ec5-485c-a7b1-a33508522bca, session_timestamp=2021-10-28T07:10:44.605Z, thread-id=202, tx_id=B006171A2D9E7C3CDDB42FCDC29E2370C36680AC16125CEC940502C540C89D2D}
[INFO ] 2021-10-28T07:10:46,326Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=99a07cd3-015f-418f-82f3-c27b4d945aa2, invocation_id=19f31cec-b5c8-483b-b181-d395e53f23d3, invocation_timestamp=2021-10-28T07:10:46.021Z, origin=Only For Testing, session_id=19f31cec-b5c8-483b-b181-d395e53f23d3, session_timestamp=2021-10-28T07:10:46.021Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:46,426Z [Mock network] corda.flow. - Received a notarisation request for Tx [707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=fda8b18b-5f65-4413-a5cc-b175ddd3f8d8, invocation_id=6297db4e-d14d-4af3-9fcb-d14b59860358, invocation_timestamp=2021-10-28T07:10:46.394Z, origin=O=UK Mint, L=London, C=GB, session_id=6297db4e-d14d-4af3-9fcb-d14b59860358, session_timestamp=2021-10-28T07:10:46.394Z, thread-id=202}
[INFO ] 2021-10-28T07:10:46,736Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:10:46,757Z [Mock network] corda.flow. - Transaction [707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=fda8b18b-5f65-4413-a5cc-b175ddd3f8d8, invocation_id=6297db4e-d14d-4af3-9fcb-d14b59860358, invocation_timestamp=2021-10-28T07:10:46.394Z, origin=O=UK Mint, L=London, C=GB, session_id=6297db4e-d14d-4af3-9fcb-d14b59860358, session_timestamp=2021-10-28T07:10:46.394Z, thread-id=202}
[INFO ] 2021-10-28T07:10:46,791Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=99a07cd3-015f-418f-82f3-c27b4d945aa2, invocation_id=19f31cec-b5c8-483b-b181-d395e53f23d3, invocation_timestamp=2021-10-28T07:10:46.021Z, origin=Only For Testing, session_id=19f31cec-b5c8-483b-b181-d395e53f23d3, session_timestamp=2021-10-28T07:10:46.021Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:46,795Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=99a07cd3-015f-418f-82f3-c27b4d945aa2, invocation_id=19f31cec-b5c8-483b-b181-d395e53f23d3, invocation_timestamp=2021-10-28T07:10:46.021Z, origin=Only For Testing, session_id=19f31cec-b5c8-483b-b181-d395e53f23d3, session_timestamp=2021-10-28T07:10:46.021Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:46,814Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=99a07cd3-015f-418f-82f3-c27b4d945aa2, invocation_id=19f31cec-b5c8-483b-b181-d395e53f23d3, invocation_timestamp=2021-10-28T07:10:46.021Z, origin=Only For Testing, session_id=19f31cec-b5c8-483b-b181-d395e53f23d3, session_timestamp=2021-10-28T07:10:46.021Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:46,852Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=30f0c831-9cc4-4901-93b4-5cf5386fc6fb, invocation_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, invocation_timestamp=2021-10-28T07:10:46.493Z, origin=O=UK Mint, L=London, C=GB, session_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, session_timestamp=2021-10-28T07:10:46.493Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:46,991Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=30f0c831-9cc4-4901-93b4-5cf5386fc6fb, invocation_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, invocation_timestamp=2021-10-28T07:10:46.493Z, origin=O=UK Mint, L=London, C=GB, session_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, session_timestamp=2021-10-28T07:10:46.493Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:47,002Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=30f0c831-9cc4-4901-93b4-5cf5386fc6fb, invocation_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, invocation_timestamp=2021-10-28T07:10:46.493Z, origin=O=UK Mint, L=London, C=GB, session_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, session_timestamp=2021-10-28T07:10:46.493Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:47,014Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=30f0c831-9cc4-4901-93b4-5cf5386fc6fb, invocation_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, invocation_timestamp=2021-10-28T07:10:46.493Z, origin=O=UK Mint, L=London, C=GB, session_id=324818cb-fa23-48ab-ab43-a01c47c93fbc, session_timestamp=2021-10-28T07:10:46.493Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:47,030Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=99a07cd3-015f-418f-82f3-c27b4d945aa2, invocation_id=19f31cec-b5c8-483b-b181-d395e53f23d3, invocation_timestamp=2021-10-28T07:10:46.021Z, origin=Only For Testing, session_id=19f31cec-b5c8-483b-b181-d395e53f23d3, session_timestamp=2021-10-28T07:10:46.021Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:47,030Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=99a07cd3-015f-418f-82f3-c27b4d945aa2, invocation_id=19f31cec-b5c8-483b-b181-d395e53f23d3, invocation_timestamp=2021-10-28T07:10:46.021Z, origin=Only For Testing, session_id=19f31cec-b5c8-483b-b181-d395e53f23d3, session_timestamp=2021-10-28T07:10:46.021Z, thread-id=202, tx_id=707B4A29CB3CA705FF5AD3D80949068B7502919BF4BB7C394BC6ACACC74BB2CF}
[INFO ] 2021-10-28T07:10:47,121Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=05d003b9-5882-4632-99dc-9d143270d732, invocation_id=818cadfc-1b77-4488-977e-880f29355276, invocation_timestamp=2021-10-28T07:10:47.040Z, origin=Only For Testing, session_id=818cadfc-1b77-4488-977e-880f29355276, session_timestamp=2021-10-28T07:10:47.040Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,149Z [Mock network] corda.flow. - Received a notarisation request for Tx [2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=b446e02a-2194-468b-94e5-b3a8acf28e60, invocation_id=93619e2e-f7d5-49d9-abaf-a118911afb23, invocation_timestamp=2021-10-28T07:10:47.135Z, origin=O=Abbey, L=London, C=GB, session_id=93619e2e-f7d5-49d9-abaf-a118911afb23, session_timestamp=2021-10-28T07:10:47.135Z, thread-id=202}
[INFO ] 2021-10-28T07:10:47,364Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:10:47,370Z [Mock network] corda.flow. - Transaction [2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=b446e02a-2194-468b-94e5-b3a8acf28e60, invocation_id=93619e2e-f7d5-49d9-abaf-a118911afb23, invocation_timestamp=2021-10-28T07:10:47.135Z, origin=O=Abbey, L=London, C=GB, session_id=93619e2e-f7d5-49d9-abaf-a118911afb23, session_timestamp=2021-10-28T07:10:47.135Z, thread-id=202}
[INFO ] 2021-10-28T07:10:47,410Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=05d003b9-5882-4632-99dc-9d143270d732, invocation_id=818cadfc-1b77-4488-977e-880f29355276, invocation_timestamp=2021-10-28T07:10:47.040Z, origin=Only For Testing, session_id=818cadfc-1b77-4488-977e-880f29355276, session_timestamp=2021-10-28T07:10:47.040Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,415Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=05d003b9-5882-4632-99dc-9d143270d732, invocation_id=818cadfc-1b77-4488-977e-880f29355276, invocation_timestamp=2021-10-28T07:10:47.040Z, origin=Only For Testing, session_id=818cadfc-1b77-4488-977e-880f29355276, session_timestamp=2021-10-28T07:10:47.040Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,427Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=05d003b9-5882-4632-99dc-9d143270d732, invocation_id=818cadfc-1b77-4488-977e-880f29355276, invocation_timestamp=2021-10-28T07:10:47.040Z, origin=Only For Testing, session_id=818cadfc-1b77-4488-977e-880f29355276, session_timestamp=2021-10-28T07:10:47.040Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,446Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=082ce875-69df-4b8f-a31b-4666769b6c89, invocation_id=cd8bb547-0c59-48c4-8410-b9e642d43698, invocation_timestamp=2021-10-28T07:10:47.166Z, origin=O=Abbey, L=London, C=GB, session_id=cd8bb547-0c59-48c4-8410-b9e642d43698, session_timestamp=2021-10-28T07:10:47.166Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,614Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=082ce875-69df-4b8f-a31b-4666769b6c89, invocation_id=cd8bb547-0c59-48c4-8410-b9e642d43698, invocation_timestamp=2021-10-28T07:10:47.166Z, origin=O=Abbey, L=London, C=GB, session_id=cd8bb547-0c59-48c4-8410-b9e642d43698, session_timestamp=2021-10-28T07:10:47.166Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,621Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=082ce875-69df-4b8f-a31b-4666769b6c89, invocation_id=cd8bb547-0c59-48c4-8410-b9e642d43698, invocation_timestamp=2021-10-28T07:10:47.166Z, origin=O=Abbey, L=London, C=GB, session_id=cd8bb547-0c59-48c4-8410-b9e642d43698, session_timestamp=2021-10-28T07:10:47.166Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,632Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=082ce875-69df-4b8f-a31b-4666769b6c89, invocation_id=cd8bb547-0c59-48c4-8410-b9e642d43698, invocation_timestamp=2021-10-28T07:10:47.166Z, origin=O=Abbey, L=London, C=GB, session_id=cd8bb547-0c59-48c4-8410-b9e642d43698, session_timestamp=2021-10-28T07:10:47.166Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,646Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=05d003b9-5882-4632-99dc-9d143270d732, invocation_id=818cadfc-1b77-4488-977e-880f29355276, invocation_timestamp=2021-10-28T07:10:47.040Z, origin=Only For Testing, session_id=818cadfc-1b77-4488-977e-880f29355276, session_timestamp=2021-10-28T07:10:47.040Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[INFO ] 2021-10-28T07:10:47,646Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=05d003b9-5882-4632-99dc-9d143270d732, invocation_id=818cadfc-1b77-4488-977e-880f29355276, invocation_timestamp=2021-10-28T07:10:47.040Z, origin=Only For Testing, session_id=818cadfc-1b77-4488-977e-880f29355276, session_timestamp=2021-10-28T07:10:47.040Z, thread-id=202, tx_id=2FCF91B71B79686F8485E1B1134B230499EB72DDFBE8FF15EDBDD12727E72933}
[WARN ] 2021-10-28T07:10:47,657Z [Mock network] corda.flow. - Caught exception from flow [0f0dbd5e-5939-4f1a-a9cf-4bd364111426] {}
java.lang.IllegalStateException: Cannot rewind a progress tracker once it has ended
	at net.corda.core.utilities.ProgressTracker.setCurrentStep(ProgressTracker.kt:134) ~[corda-core-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:328) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[WARN ] 2021-10-28T07:10:47,657Z [Mock network] corda.flow. - Forcing flow [0f0dbd5e-5939-4f1a-a9cf-4bd364111426] into overnight observation {}
[INFO ] 2021-10-28T07:14:57,033Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:14:57,087Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:14:57,104Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:14:57,672Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:14:59,700Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:15:00,104Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:15:00,212Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:15:00,246Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:15:00,258Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS, alias: identity-private-key {}
[INFO ] 2021-10-28T07:15:00,517Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,523Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,528Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,529Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,531Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,546Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,553Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,553Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,554Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,556Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,560Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,561Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:15:00,563Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,677Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:00,955Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:14:44.294Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:15:12,247Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:15:12,376Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:15:12,387Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:15:16,619Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:15:16,936Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:15:16,948Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936), owningKey=DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS {}
[INFO ] 2021-10-28T07:15:16,949Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:15:17,115Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936) {}
[INFO ] 2021-10-28T07:15:17,174Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:15:17,205Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:15:17,207Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:15:17,273Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936), owningKey=DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS {}
[INFO ] 2021-10-28T07:15:17,273Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:17,386Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:15:17,404Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:15:17,417Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:15:17,505Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:15:17,610Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:15:17,613Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:15:18,249Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936) {}
[INFO ] 2021-10-28T07:15:18,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936), owningKey=DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS {}
[INFO ] 2021-10-28T07:15:18,270Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:18,271Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936), owningKey=DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS {}
[INFO ] 2021-10-28T07:15:18,271Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:18,370Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:15:18,370Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:15:18,370Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:15:18,415Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:15:18,476Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:15:18,478Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:15:18,479Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:15:18,525Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:15:18,525Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t, alias: identity-private-key {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:15:18,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:18,545Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:14:44.294Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:15:19,515Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:15:19,517Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:19,517Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:19,757Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:19,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:15:19,771Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766), owningKey=DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t {}
[INFO ] 2021-10-28T07:15:19,771Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:19,794Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766) {}
[INFO ] 2021-10-28T07:15:19,803Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:15:19,805Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:15:19,805Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:15:19,814Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766), owningKey=DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t {}
[INFO ] 2021-10-28T07:15:19,814Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:19,861Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:15:19,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:15:19,869Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:15:19,870Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:15:19,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:15:19,913Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766) {}
[INFO ] 2021-10-28T07:15:19,918Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936), owningKey=DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS {}
[INFO ] 2021-10-28T07:15:19,918Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:15:19,939Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766), owningKey=DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t {}
[INFO ] 2021-10-28T07:15:19,939Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:19,956Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766), owningKey=DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t {}
[INFO ] 2021-10-28T07:15:19,956Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:19,956Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766), owningKey=DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t {}
[INFO ] 2021-10-28T07:15:19,956Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:19,973Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:15:19,973Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:15:19,973Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:15:19,992Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:15:20,031Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:15:20,036Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:15:20,037Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:15:20,090Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:15:20,090Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM, alias: identity-private-key {}
[INFO ] 2021-10-28T07:15:20,098Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,098Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,099Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:20,104Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:14:44.294Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:15:21,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:15:21,031Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:21,031Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:21,304Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:21,319Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:15:21,328Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319), owningKey=DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM {}
[INFO ] 2021-10-28T07:15:21,328Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:21,347Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319) {}
[INFO ] 2021-10-28T07:15:21,359Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:15:21,363Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:15:21,363Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:15:21,368Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319), owningKey=DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM {}
[INFO ] 2021-10-28T07:15:21,368Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:21,456Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:15:21,460Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:15:21,461Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:15:21,463Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:15:21,475Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:15:21,507Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319) {}
[INFO ] 2021-10-28T07:15:21,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936), owningKey=DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS {}
[INFO ] 2021-10-28T07:15:21,516Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:15:21,535Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319), owningKey=DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM {}
[INFO ] 2021-10-28T07:15:21,535Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:21,559Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766), owningKey=DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t {}
[INFO ] 2021-10-28T07:15:21,559Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:21,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319), owningKey=DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM {}
[INFO ] 2021-10-28T07:15:21,579Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:21,595Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319), owningKey=DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM {}
[INFO ] 2021-10-28T07:15:21,595Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:21,595Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319), owningKey=DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM {}
[INFO ] 2021-10-28T07:15:21,595Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:21,608Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:15:21,609Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:15:21,609Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:15:21,621Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:15:21,666Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:15:21,667Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:15:21,668Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:15:21,709Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:15:21,709Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E, alias: identity-private-key {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:15:21,724Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:14:44.294Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:15:22,404Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:15:22,407Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:22,407Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:22,581Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:15:22,594Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:15:22,599Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594), owningKey=DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E {}
[INFO ] 2021-10-28T07:15:22,599Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:22,612Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594) {}
[INFO ] 2021-10-28T07:15:22,619Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:15:22,629Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594), owningKey=DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E {}
[INFO ] 2021-10-28T07:15:22,629Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:22,629Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:15:22,629Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:15:22,705Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:15:22,711Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:15:22,711Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071447.368-8F15EB86A6ED39EE/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:15:22,712Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:15:22,721Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:15:22,760Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594) {}
[INFO ] 2021-10-28T07:15:22,764Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405316936), owningKey=DLAStN7ghwY92NFjfyHYsMxMtbHsvLGVAubcTyY1eXxALS {}
[INFO ] 2021-10-28T07:15:22,764Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:15:22,788Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594), owningKey=DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E {}
[INFO ] 2021-10-28T07:15:22,788Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:22,813Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405319766), owningKey=DL47kJKe1PmqFZ1YpFsdxGeW8qqY5eWq1Lw7iARJb9ip5t {}
[INFO ] 2021-10-28T07:15:22,813Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:22,859Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594), owningKey=DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E {}
[INFO ] 2021-10-28T07:15:22,859Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:22,885Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405321319), owningKey=DL5PhwPP32BDbFNpFSynAe7EjkjguC3n8tckLURV8C1GeM {}
[INFO ] 2021-10-28T07:15:22,886Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:22,902Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594), owningKey=DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E {}
[INFO ] 2021-10-28T07:15:22,902Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:15:22,925Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594), owningKey=DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E {}
[INFO ] 2021-10-28T07:15:22,926Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:22,926Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405322594), owningKey=DL8jsNn3tSmjmJGgFGph3NJcibNupYN16Ym6uLZqM6Xp3E {}
[INFO ] 2021-10-28T07:15:22,926Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:15:24,279Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=17c144ba-c803-45eb-bd3a-50b22933f8cb, invocation_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, invocation_timestamp=2021-10-28T07:15:22.975Z, origin=Only For Testing, session_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, session_timestamp=2021-10-28T07:15:22.975Z, thread-id=206, tx_id=AFBFCA0CCDBE59AED27F2DCA3D5594C18995E26CECCB89D7E27564DE7600951D}
[INFO ] 2021-10-28T07:15:24,279Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=17c144ba-c803-45eb-bd3a-50b22933f8cb, invocation_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, invocation_timestamp=2021-10-28T07:15:22.975Z, origin=Only For Testing, session_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, session_timestamp=2021-10-28T07:15:22.975Z, thread-id=206, tx_id=AFBFCA0CCDBE59AED27F2DCA3D5594C18995E26CECCB89D7E27564DE7600951D}
[INFO ] 2021-10-28T07:15:24,424Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=17c144ba-c803-45eb-bd3a-50b22933f8cb, invocation_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, invocation_timestamp=2021-10-28T07:15:22.975Z, origin=Only For Testing, session_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, session_timestamp=2021-10-28T07:15:22.975Z, thread-id=206, tx_id=AFBFCA0CCDBE59AED27F2DCA3D5594C18995E26CECCB89D7E27564DE7600951D}
[INFO ] 2021-10-28T07:15:24,424Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=17c144ba-c803-45eb-bd3a-50b22933f8cb, invocation_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, invocation_timestamp=2021-10-28T07:15:22.975Z, origin=Only For Testing, session_id=58861dd7-b123-4f77-80c2-1eb0abb04b41, session_timestamp=2021-10-28T07:15:22.975Z, thread-id=206, tx_id=AFBFCA0CCDBE59AED27F2DCA3D5594C18995E26CECCB89D7E27564DE7600951D}
[INFO ] 2021-10-28T07:15:24,880Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8434a6c0-1775-4bf5-97a9-117ff4386477, invocation_id=62056111-488d-4691-80d8-f32774fbcf0f, invocation_timestamp=2021-10-28T07:15:24.521Z, origin=Only For Testing, session_id=62056111-488d-4691-80d8-f32774fbcf0f, session_timestamp=2021-10-28T07:15:24.521Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,000Z [Mock network] corda.flow. - Received a notarisation request for Tx [791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=6fe8996c-6f58-405c-a98c-84f8fa2cd1d7, invocation_id=b391faa1-3d08-46d4-ae68-29405b79e53b, invocation_timestamp=2021-10-28T07:15:24.949Z, origin=O=UK Mint, L=London, C=GB, session_id=b391faa1-3d08-46d4-ae68-29405b79e53b, session_timestamp=2021-10-28T07:15:24.949Z, thread-id=206}
[INFO ] 2021-10-28T07:15:25,352Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:15:25,372Z [Mock network] corda.flow. - Transaction [791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=6fe8996c-6f58-405c-a98c-84f8fa2cd1d7, invocation_id=b391faa1-3d08-46d4-ae68-29405b79e53b, invocation_timestamp=2021-10-28T07:15:24.949Z, origin=O=UK Mint, L=London, C=GB, session_id=b391faa1-3d08-46d4-ae68-29405b79e53b, session_timestamp=2021-10-28T07:15:24.949Z, thread-id=206}
[INFO ] 2021-10-28T07:15:25,457Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8434a6c0-1775-4bf5-97a9-117ff4386477, invocation_id=62056111-488d-4691-80d8-f32774fbcf0f, invocation_timestamp=2021-10-28T07:15:24.521Z, origin=Only For Testing, session_id=62056111-488d-4691-80d8-f32774fbcf0f, session_timestamp=2021-10-28T07:15:24.521Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,459Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8434a6c0-1775-4bf5-97a9-117ff4386477, invocation_id=62056111-488d-4691-80d8-f32774fbcf0f, invocation_timestamp=2021-10-28T07:15:24.521Z, origin=Only For Testing, session_id=62056111-488d-4691-80d8-f32774fbcf0f, session_timestamp=2021-10-28T07:15:24.521Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,475Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8434a6c0-1775-4bf5-97a9-117ff4386477, invocation_id=62056111-488d-4691-80d8-f32774fbcf0f, invocation_timestamp=2021-10-28T07:15:24.521Z, origin=Only For Testing, session_id=62056111-488d-4691-80d8-f32774fbcf0f, session_timestamp=2021-10-28T07:15:24.521Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,516Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=de0ec49d-145b-48e1-99ca-f6d904cdebd2, invocation_id=d76138c3-afe1-46f1-8675-97d5feac83bd, invocation_timestamp=2021-10-28T07:15:25.075Z, origin=O=UK Mint, L=London, C=GB, session_id=d76138c3-afe1-46f1-8675-97d5feac83bd, session_timestamp=2021-10-28T07:15:25.075Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,645Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=de0ec49d-145b-48e1-99ca-f6d904cdebd2, invocation_id=d76138c3-afe1-46f1-8675-97d5feac83bd, invocation_timestamp=2021-10-28T07:15:25.075Z, origin=O=UK Mint, L=London, C=GB, session_id=d76138c3-afe1-46f1-8675-97d5feac83bd, session_timestamp=2021-10-28T07:15:25.075Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,656Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=de0ec49d-145b-48e1-99ca-f6d904cdebd2, invocation_id=d76138c3-afe1-46f1-8675-97d5feac83bd, invocation_timestamp=2021-10-28T07:15:25.075Z, origin=O=UK Mint, L=London, C=GB, session_id=d76138c3-afe1-46f1-8675-97d5feac83bd, session_timestamp=2021-10-28T07:15:25.075Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,669Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=de0ec49d-145b-48e1-99ca-f6d904cdebd2, invocation_id=d76138c3-afe1-46f1-8675-97d5feac83bd, invocation_timestamp=2021-10-28T07:15:25.075Z, origin=O=UK Mint, L=London, C=GB, session_id=d76138c3-afe1-46f1-8675-97d5feac83bd, session_timestamp=2021-10-28T07:15:25.075Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,689Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8434a6c0-1775-4bf5-97a9-117ff4386477, invocation_id=62056111-488d-4691-80d8-f32774fbcf0f, invocation_timestamp=2021-10-28T07:15:24.521Z, origin=Only For Testing, session_id=62056111-488d-4691-80d8-f32774fbcf0f, session_timestamp=2021-10-28T07:15:24.521Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,689Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=8434a6c0-1775-4bf5-97a9-117ff4386477, invocation_id=62056111-488d-4691-80d8-f32774fbcf0f, invocation_timestamp=2021-10-28T07:15:24.521Z, origin=Only For Testing, session_id=62056111-488d-4691-80d8-f32774fbcf0f, session_timestamp=2021-10-28T07:15:24.521Z, thread-id=206, tx_id=791841A3AD52F98A0C7E67E3CE8498A7AA877B26B7016C189AF6A4818439989E}
[INFO ] 2021-10-28T07:15:25,770Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ab63bf4-21b0-48a1-bcf7-a5c3c6f1ed75, invocation_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, invocation_timestamp=2021-10-28T07:15:25.701Z, origin=Only For Testing, session_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, session_timestamp=2021-10-28T07:15:25.701Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:25,799Z [Mock network] corda.flow. - Received a notarisation request for Tx [D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=08ca5dce-adf5-444f-b14d-901a0a696caa, invocation_id=437a2dc8-e555-446a-b1f9-134efa0cc5c4, invocation_timestamp=2021-10-28T07:15:25.782Z, origin=O=Abbey, L=London, C=GB, session_id=437a2dc8-e555-446a-b1f9-134efa0cc5c4, session_timestamp=2021-10-28T07:15:25.782Z, thread-id=206}
[INFO ] 2021-10-28T07:15:25,982Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:15:25,996Z [Mock network] corda.flow. - Transaction [D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=08ca5dce-adf5-444f-b14d-901a0a696caa, invocation_id=437a2dc8-e555-446a-b1f9-134efa0cc5c4, invocation_timestamp=2021-10-28T07:15:25.782Z, origin=O=Abbey, L=London, C=GB, session_id=437a2dc8-e555-446a-b1f9-134efa0cc5c4, session_timestamp=2021-10-28T07:15:25.782Z, thread-id=206}
[INFO ] 2021-10-28T07:15:26,054Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ab63bf4-21b0-48a1-bcf7-a5c3c6f1ed75, invocation_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, invocation_timestamp=2021-10-28T07:15:25.701Z, origin=Only For Testing, session_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, session_timestamp=2021-10-28T07:15:25.701Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,056Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ab63bf4-21b0-48a1-bcf7-a5c3c6f1ed75, invocation_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, invocation_timestamp=2021-10-28T07:15:25.701Z, origin=Only For Testing, session_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, session_timestamp=2021-10-28T07:15:25.701Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,064Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ab63bf4-21b0-48a1-bcf7-a5c3c6f1ed75, invocation_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, invocation_timestamp=2021-10-28T07:15:25.701Z, origin=Only For Testing, session_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, session_timestamp=2021-10-28T07:15:25.701Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,081Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=be7183e2-e5af-43a0-ae44-e4ea81bb796e, invocation_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, invocation_timestamp=2021-10-28T07:15:25.817Z, origin=O=Abbey, L=London, C=GB, session_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, session_timestamp=2021-10-28T07:15:25.817Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,289Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=be7183e2-e5af-43a0-ae44-e4ea81bb796e, invocation_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, invocation_timestamp=2021-10-28T07:15:25.817Z, origin=O=Abbey, L=London, C=GB, session_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, session_timestamp=2021-10-28T07:15:25.817Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,298Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=be7183e2-e5af-43a0-ae44-e4ea81bb796e, invocation_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, invocation_timestamp=2021-10-28T07:15:25.817Z, origin=O=Abbey, L=London, C=GB, session_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, session_timestamp=2021-10-28T07:15:25.817Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,308Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=be7183e2-e5af-43a0-ae44-e4ea81bb796e, invocation_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, invocation_timestamp=2021-10-28T07:15:25.817Z, origin=O=Abbey, L=London, C=GB, session_id=e7f17bed-4de1-4a58-912c-16da86d8ff57, session_timestamp=2021-10-28T07:15:25.817Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,321Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ab63bf4-21b0-48a1-bcf7-a5c3c6f1ed75, invocation_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, invocation_timestamp=2021-10-28T07:15:25.701Z, origin=Only For Testing, session_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, session_timestamp=2021-10-28T07:15:25.701Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,321Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ab63bf4-21b0-48a1-bcf7-a5c3c6f1ed75, invocation_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, invocation_timestamp=2021-10-28T07:15:25.701Z, origin=Only For Testing, session_id=fda6d99d-f8b8-4e7b-8999-2c1f71489ba4, session_timestamp=2021-10-28T07:15:25.701Z, thread-id=206, tx_id=D80EA6C8C4A767E23526D1EEF93AD514E39148755519DCC2F315C3523B3633D3}
[INFO ] 2021-10-28T07:15:26,421Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b14afdb5-ca05-4a44-ba0e-980490a0c4b0, invocation_id=0b996d7a-4b4b-412d-936c-4044345dae2a, invocation_timestamp=2021-10-28T07:15:26.350Z, origin=Only For Testing, session_id=0b996d7a-4b4b-412d-936c-4044345dae2a, session_timestamp=2021-10-28T07:15:26.350Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,446Z [Mock network] corda.flow. - Received a notarisation request for Tx [01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=28bc96c1-395f-4618-ad05-5a4dbb0e12b5, invocation_id=78d48e2c-760d-4d41-919c-5683d1108e98, invocation_timestamp=2021-10-28T07:15:26.432Z, origin=O=HSBC, L=London, C=GB, session_id=78d48e2c-760d-4d41-919c-5683d1108e98, session_timestamp=2021-10-28T07:15:26.432Z, thread-id=206}
[INFO ] 2021-10-28T07:15:26,602Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:15:26,607Z [Mock network] corda.flow. - Transaction [01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=28bc96c1-395f-4618-ad05-5a4dbb0e12b5, invocation_id=78d48e2c-760d-4d41-919c-5683d1108e98, invocation_timestamp=2021-10-28T07:15:26.432Z, origin=O=HSBC, L=London, C=GB, session_id=78d48e2c-760d-4d41-919c-5683d1108e98, session_timestamp=2021-10-28T07:15:26.432Z, thread-id=206}
[INFO ] 2021-10-28T07:15:26,641Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b14afdb5-ca05-4a44-ba0e-980490a0c4b0, invocation_id=0b996d7a-4b4b-412d-936c-4044345dae2a, invocation_timestamp=2021-10-28T07:15:26.350Z, origin=Only For Testing, session_id=0b996d7a-4b4b-412d-936c-4044345dae2a, session_timestamp=2021-10-28T07:15:26.350Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,642Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b14afdb5-ca05-4a44-ba0e-980490a0c4b0, invocation_id=0b996d7a-4b4b-412d-936c-4044345dae2a, invocation_timestamp=2021-10-28T07:15:26.350Z, origin=Only For Testing, session_id=0b996d7a-4b4b-412d-936c-4044345dae2a, session_timestamp=2021-10-28T07:15:26.350Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,649Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b14afdb5-ca05-4a44-ba0e-980490a0c4b0, invocation_id=0b996d7a-4b4b-412d-936c-4044345dae2a, invocation_timestamp=2021-10-28T07:15:26.350Z, origin=Only For Testing, session_id=0b996d7a-4b4b-412d-936c-4044345dae2a, session_timestamp=2021-10-28T07:15:26.350Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,668Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=e5b9d362-585c-49d2-bb49-2aa764bc0983, invocation_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, invocation_timestamp=2021-10-28T07:15:26.455Z, origin=O=HSBC, L=London, C=GB, session_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, session_timestamp=2021-10-28T07:15:26.455Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,676Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=e5b9d362-585c-49d2-bb49-2aa764bc0983, invocation_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, invocation_timestamp=2021-10-28T07:15:26.455Z, origin=O=HSBC, L=London, C=GB, session_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, session_timestamp=2021-10-28T07:15:26.455Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,691Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=e5b9d362-585c-49d2-bb49-2aa764bc0983, invocation_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, invocation_timestamp=2021-10-28T07:15:26.455Z, origin=O=HSBC, L=London, C=GB, session_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, session_timestamp=2021-10-28T07:15:26.455Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,697Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=e5b9d362-585c-49d2-bb49-2aa764bc0983, invocation_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, invocation_timestamp=2021-10-28T07:15:26.455Z, origin=O=HSBC, L=London, C=GB, session_id=ac597d9e-29f8-4975-a2ed-e44917b20ab2, session_timestamp=2021-10-28T07:15:26.455Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,708Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b14afdb5-ca05-4a44-ba0e-980490a0c4b0, invocation_id=0b996d7a-4b4b-412d-936c-4044345dae2a, invocation_timestamp=2021-10-28T07:15:26.350Z, origin=Only For Testing, session_id=0b996d7a-4b4b-412d-936c-4044345dae2a, session_timestamp=2021-10-28T07:15:26.350Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,708Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b14afdb5-ca05-4a44-ba0e-980490a0c4b0, invocation_id=0b996d7a-4b4b-412d-936c-4044345dae2a, invocation_timestamp=2021-10-28T07:15:26.350Z, origin=Only For Testing, session_id=0b996d7a-4b4b-412d-936c-4044345dae2a, session_timestamp=2021-10-28T07:15:26.350Z, thread-id=206, tx_id=01ECEEDD883CAC32440CF3F9ACCFB6739635DE0C5C920348F27C946A6045846D}
[INFO ] 2021-10-28T07:15:26,779Z [Mock network] corda.flow. - Flow raised an error: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler. Sending it to flow hospital to be triaged. {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
[INFO ] 2021-10-28T07:15:26,782Z [Mock network] statemachine.StaffedFlowHospital. - Flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Invocation, sessionId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-7672003511590176420)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3840437007616988399), deduplicationSeed=D-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), frozenFiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler@c9b379, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@2f2ce918[Permits = 0]) {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
[INFO ] 2021-10-28T07:15:26,785Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[INFO ] 2021-10-28T07:15:26,790Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[WARN ] 2021-10-28T07:15:26,825Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] errored, dumping all transitions:

 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.775Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[0b5dc08f-3660-4c38-b642-286d1b405a2f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Invocation, sessionId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=63336D369D3AE457B63CFAEE6F6FE30B1D5FA6A97E392B6AECF514560893FB73), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62a69d09])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62a69d09])
    SignalFlowHasStarted(flowId=[0b5dc08f-3660-4c38-b642-286d1b405a2f])
    SendExisting(peerParty=O=UK Mint, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3840437007616988399), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7672003511590176420), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3840437007616988399-3613272307164241993-0-0), senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.772Z
    2021-10-28T07:15:26.773Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7672003511590176420): 
    null
    Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3840437007616988399), deduplicationSeed=D-3840437007616988399-3613272307164241993)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62a69d09]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.775Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.773Z
    2021-10-28T07:15:26.775Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.778Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), maySkipCheckpoint=false, fiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0b5dc08f-3660-4c38-b642-286d1b405a2f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Invocation, sessionId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-7672003511590176420)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3840437007616988399), deduplicationSeed=D-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), frozenFiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.775Z
    2021-10-28T07:15:26.777Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=63336D369D3AE457B63CFAEE6F6FE30B1D5FA6A97E392B6AECF514560893FB73)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), frozenFiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.779Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.777Z
    2021-10-28T07:15:26.779Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7672003511590176420).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.779Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.791Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.779Z
    2021-10-28T07:15:26.781Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2020203642487135922, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.801Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.806Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.781Z
    2021-10-28T07:15:26.802Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
[WARN ] 2021-10-28T07:15:26,825Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] error {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[WARN ] 2021-10-28T07:15:26,833Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
[WARN ] 2021-10-28T07:15:26,949Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] errored, dumping all transitions:

 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.775Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[0b5dc08f-3660-4c38-b642-286d1b405a2f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Invocation, sessionId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=63336D369D3AE457B63CFAEE6F6FE30B1D5FA6A97E392B6AECF514560893FB73), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62a69d09])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62a69d09])
    SignalFlowHasStarted(flowId=[0b5dc08f-3660-4c38-b642-286d1b405a2f])
    SendExisting(peerParty=O=UK Mint, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=3840437007616988399), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7672003511590176420), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-3840437007616988399-3613272307164241993-0-0), senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.772Z
    2021-10-28T07:15:26.773Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7672003511590176420): 
    null
    Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3840437007616988399), deduplicationSeed=D-3840437007616988399-3613272307164241993)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@62a69d09]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.775Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.773Z
    2021-10-28T07:15:26.775Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.778Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), maySkipCheckpoint=false, fiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[0b5dc08f-3660-4c38-b642-286d1b405a2f], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Invocation, sessionId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-7672003511590176420)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3840437007616988399), deduplicationSeed=D-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), frozenFiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.775Z
    2021-10-28T07:15:26.777Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=63336D369D3AE457B63CFAEE6F6FE30B1D5FA6A97E392B6AECF514560893FB73)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), frozenFiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.779Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.777Z
    2021-10-28T07:15:26.779Z
checkpoint.checkpointState.sessions.SessionId(toLong=-7672003511590176420).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.779Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.791Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.779Z
    2021-10-28T07:15:26.781Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2020203642487135922, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.801Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.806Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.781Z
    2021-10-28T07:15:26.802Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] ---
  Timestamp: 2021-10-28T07:15:26.942Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=2020203642487135922)], sessions=[Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3840437007616988399), deduplicationSeed=D-3840437007616988399-3613272307164241993)], senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080)
    CreateTransaction
    RemoveCheckpoint(id=[0b5dc08f-3660-4c38-b642-286d1b405a2f], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=0b5dc08f-3660-4c38-b642-286d1b405a2f)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-7672003511590176420)])
    RemoveFlow(flowId=[0b5dc08f-3660-4c38-b642-286d1b405a2f], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2020203642487135922, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Invocation, sessionId=f86b6203-aaa1-4249-b423-471321a35a5d, timestamp: 2021-10-28T07:15:26.772Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-7672003511590176420)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=3840437007616988399), deduplicationSeed=D-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@9b3bdfc, errorState=Errored(errors=[FlowError(errorId=2020203642487135922, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler@c9b379, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@2f2ce918[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-10-28T07:15:26.802Z
    2021-10-28T07:15:26.826Z
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-7672003511590176420))]), frozenFiber=A0B65E87742CB831D6E204B20697C2B3050CBF966B78D2A451D802B8AE52E4AA)
    net.corda.node.services.statemachine.FlowState$Finished@9b3bdfc
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
 {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
[WARN ] 2021-10-28T07:15:26,949Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [0b5dc08f-3660-4c38-b642-286d1b405a2f] error {fiber-id=10000012, flow-id=0b5dc08f-3660-4c38-b642-286d1b405a2f, invocation_id=f86b6203-aaa1-4249-b423-471321a35a5d, invocation_timestamp=2021-10-28T07:15:26.772Z, origin=O=UK Mint, L=London, C=GB, session_id=f86b6203-aaa1-4249-b423-471321a35a5d, session_timestamp=2021-10-28T07:15:26.772Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[INFO ] 2021-10-28T07:15:34,928Z [Mock network] corda.flow. - Flow raised an error: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
[INFO ] 2021-10-28T07:15:34,930Z [Mock network] statemachine.StaffedFlowHospital. - Flow [dab39011-e73d-4689-ba50-5d2d1054180e] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), frozenFiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
[INFO ] 2021-10-28T07:15:34,930Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[INFO ] 2021-10-28T07:15:34,930Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[WARN ] 2021-10-28T07:15:34,951Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dab39011-e73d-4689-ba50-5d2d1054180e] errored, dumping all transitions:

 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.723Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=22D1E0291FED6DDB5727D0EDEBD4FA7A1689EDDC84330ECCC3F706FAB28D5F8D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3860c051])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3860c051])
    SignalFlowHasStarted(flowId=[dab39011-e73d-4689-ba50-5d2d1054180e])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3860c051]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.724Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.719Z
    2021-10-28T07:15:26.724Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.724Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[dab39011-e73d-4689-ba50-5d2d1054180e], sessionId=SessionId(toLong=3840437007616988399))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3840437007616988399): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=3840437007616988399), additionalEntropy=3613272307164241993)


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.728Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.724Z
    2021-10-28T07:15:26.728Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.736Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=3840437007616988399), additionalEntropy=3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.728Z
    2021-10-28T07:15:26.734Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=22D1E0291FED6DDB5727D0EDEBD4FA7A1689EDDC84330ECCC3F706FAB28D5F8D)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.737Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=3840437007616988399), initiationEntropy=3613272307164241993, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-3840437007616988399-3613272307164241993-1-0), senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.734Z
    2021-10-28T07:15:26.736Z
checkpoint.checkpointState.sessions.SessionId(toLong=3840437007616988399): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=3840437007616988399), additionalEntropy=3613272307164241993)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)
isFlowResumed: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.770Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z), maySkipCheckpoint=false, fiber=E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z), frozenFiber=E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.736Z
    2021-10-28T07:15:26.767Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068})
    Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z)
checkpoint.flowState.frozenFiber.hash: 
    159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82
    E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C
checkpoint.flowIoRequest: 
    Send
    Sleep
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.770Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z), frozenFiber=E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6c97c9ed, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:27.067Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6c97c9ed
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.072Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6c97c9ed
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.083Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.750Z), maySkipCheckpoint=false, fiber=66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.750Z), frozenFiber=66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.767Z
    2021-10-28T07:15:27.081Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:27.067Z
    2021-10-28T07:15:27.750Z
checkpoint.flowState.frozenFiber.hash: 
    E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C
    66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.083Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.750Z), frozenFiber=66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1afe82f8, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:27.750Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1afe82f8
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.753Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1afe82f8
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:28.035Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:29.289Z), maySkipCheckpoint=false, fiber=F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:29.289Z), frozenFiber=F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:27.081Z
    2021-10-28T07:15:28.030Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:27.750Z
    2021-10-28T07:15:29.289Z
checkpoint.flowState.frozenFiber.hash: 
    66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0
    F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:28.035Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:29.289Z), frozenFiber=F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@30f3398a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:29.289Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@30f3398a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:29.291Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@30f3398a
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:29.302Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:30.336Z), maySkipCheckpoint=false, fiber=63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:30.336Z), frozenFiber=63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:28.030Z
    2021-10-28T07:15:29.299Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:29.289Z
    2021-10-28T07:15:30.336Z
checkpoint.flowState.frozenFiber.hash: 
    F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57
    63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:29.302Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:30.336Z), frozenFiber=63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1bb49d9d, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:30.336Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1bb49d9d
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:30.340Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1bb49d9d
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:30.351Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:32.057Z), maySkipCheckpoint=false, fiber=B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:32.057Z), frozenFiber=B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:29.299Z
    2021-10-28T07:15:30.348Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:30.336Z
    2021-10-28T07:15:32.057Z
checkpoint.flowState.frozenFiber.hash: 
    63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254
    B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:30.351Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:32.057Z), frozenFiber=B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a7bedfa, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:32.057Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a7bedfa
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:32.060Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a7bedfa
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:32.069Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:33.632Z), maySkipCheckpoint=false, fiber=E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:33.632Z), frozenFiber=E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:30.348Z
    2021-10-28T07:15:32.067Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:32.057Z
    2021-10-28T07:15:33.632Z
checkpoint.flowState.frozenFiber.hash: 
    B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5
    E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:32.069Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:33.632Z), frozenFiber=E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3e143882, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:33.632Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3e143882
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:33.633Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3e143882
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:33.644Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), maySkipCheckpoint=false, fiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), frozenFiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:32.067Z
    2021-10-28T07:15:33.641Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:33.632Z
    2021-10-28T07:15:34.919Z
checkpoint.flowState.frozenFiber.hash: 
    E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F
    AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
checkpoint.checkpointState.numberOfCommits: 
    8
    9
numberOfCommits: 
    8
    9
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:33.644Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), frozenFiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1f312a8, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:34.919Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1f312a8
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.921Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1f312a8
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.927Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:33.641Z
    2021-10-28T07:15:34.927Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.928Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:34.927Z
    2021-10-28T07:15:34.928Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.930Z
  Event: Error(exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2)., rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-7754816852709248976, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.930Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.930Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:34.928Z
    2021-10-28T07:15:34.930Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
[WARN ] 2021-10-28T07:15:34,951Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dab39011-e73d-4689-ba50-5d2d1054180e] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[WARN ] 2021-10-28T07:15:34,952Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
[WARN ] 2021-10-28T07:15:34,966Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dab39011-e73d-4689-ba50-5d2d1054180e] errored, dumping all transitions:

 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.723Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=22D1E0291FED6DDB5727D0EDEBD4FA7A1689EDDC84330ECCC3F706FAB28D5F8D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3860c051])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3860c051])
    SignalFlowHasStarted(flowId=[dab39011-e73d-4689-ba50-5d2d1054180e])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3860c051]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.724Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.719Z
    2021-10-28T07:15:26.724Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.724Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[dab39011-e73d-4689-ba50-5d2d1054180e], sessionId=SessionId(toLong=3840437007616988399))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=3840437007616988399): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=3840437007616988399), additionalEntropy=3613272307164241993)


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.728Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.724Z
    2021-10-28T07:15:26.728Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.736Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=3840437007616988399), additionalEntropy=3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.728Z
    2021-10-28T07:15:26.734Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=22D1E0291FED6DDB5727D0EDEBD4FA7A1689EDDC84330ECCC3F706FAB28D5F8D)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.737Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=3840437007616988399), initiationEntropy=3613272307164241993, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-3840437007616988399-3613272307164241993-1-0), senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.734Z
    2021-10-28T07:15:26.736Z
checkpoint.checkpointState.sessions.SessionId(toLong=3840437007616988399): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=3840437007616988399), additionalEntropy=3613272307164241993)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)
isFlowResumed: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.770Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z), maySkipCheckpoint=false, fiber=E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z), frozenFiber=E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.736Z
    2021-10-28T07:15:26.767Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=3840437007616988399))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068})
    Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z)
checkpoint.flowState.frozenFiber.hash: 
    159043EF14FAF90BDFA51008CB7E9B6CBC9D077BDEAFC31853B736CC5D471E82
    E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C
checkpoint.flowIoRequest: 
    Send
    Sleep
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:26.770Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.067Z), frozenFiber=E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6c97c9ed, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:27.067Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6c97c9ed
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.072Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6c97c9ed
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.083Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.750Z), maySkipCheckpoint=false, fiber=66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.750Z), frozenFiber=66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:26.767Z
    2021-10-28T07:15:27.081Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:27.067Z
    2021-10-28T07:15:27.750Z
checkpoint.flowState.frozenFiber.hash: 
    E66F72A4D9D951A7FFDA5FD5F1248E066CD8D303909944157D3EC92973C7105C
    66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.083Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:27.750Z), frozenFiber=66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1afe82f8, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:27.750Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1afe82f8
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:27.753Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1afe82f8
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:28.035Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:29.289Z), maySkipCheckpoint=false, fiber=F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:29.289Z), frozenFiber=F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:27.081Z
    2021-10-28T07:15:28.030Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:27.750Z
    2021-10-28T07:15:29.289Z
checkpoint.flowState.frozenFiber.hash: 
    66AA7EBDFF1C99C51C49373BB6B1EBB7892A49254DD29F6D0CFCA2D1616CC8E0
    F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:28.035Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:29.289Z), frozenFiber=F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@30f3398a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:29.289Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@30f3398a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:29.291Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@30f3398a
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:29.302Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:30.336Z), maySkipCheckpoint=false, fiber=63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:30.336Z), frozenFiber=63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:28.030Z
    2021-10-28T07:15:29.299Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:29.289Z
    2021-10-28T07:15:30.336Z
checkpoint.flowState.frozenFiber.hash: 
    F7F3D84A83283E3DF57CBF65C464013CBD6062130DD7006A95DD57014F78AD57
    63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:29.302Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:30.336Z), frozenFiber=63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1bb49d9d, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:30.336Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1bb49d9d
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:30.340Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1bb49d9d
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:30.351Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:32.057Z), maySkipCheckpoint=false, fiber=B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:32.057Z), frozenFiber=B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:29.299Z
    2021-10-28T07:15:30.348Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:30.336Z
    2021-10-28T07:15:32.057Z
checkpoint.flowState.frozenFiber.hash: 
    63FE8B98AB2134FDFD91141D0ACDA01D2A938629BD71BA5D284D32663A220254
    B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:30.351Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:32.057Z), frozenFiber=B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a7bedfa, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:32.057Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a7bedfa
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:32.060Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a7bedfa
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:32.069Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:33.632Z), maySkipCheckpoint=false, fiber=E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:33.632Z), frozenFiber=E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:30.348Z
    2021-10-28T07:15:32.067Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:32.057Z
    2021-10-28T07:15:33.632Z
checkpoint.flowState.frozenFiber.hash: 
    B537C3016C625E0C0AE9F9451AD659FFA3485DBFB9EE472CEAB7A6CFF82436F5
    E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
numberOfCommits: 
    7
    8
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:32.069Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:33.632Z), frozenFiber=E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3e143882, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:33.632Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3e143882
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:33.633Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3e143882
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:33.644Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), maySkipCheckpoint=false, fiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), frozenFiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:32.067Z
    2021-10-28T07:15:33.641Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:15:33.632Z
    2021-10-28T07:15:34.919Z
checkpoint.flowState.frozenFiber.hash: 
    E13993DA6B1F881DBD311945DBA3F510CAC09E06DFC57094B8084640574EB16F
    AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
checkpoint.checkpointState.numberOfCommits: 
    8
    9
numberOfCommits: 
    8
    9
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:33.644Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), frozenFiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1f312a8, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]), time=2021-10-28T07:15:34.919Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1f312a8
isWaitingForFuture: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.921Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1f312a8
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.927Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:33.641Z
    2021-10-28T07:15:34.927Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.928Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:34.927Z
    2021-10-28T07:15:34.928Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.930Z
  Event: Error(exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2)., rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-7754816852709248976, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.930Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.930Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:15:34.928Z
    2021-10-28T07:15:34.930Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [dab39011-e73d-4689-ba50-5d2d1054180e] ---
  Timestamp: 2021-10-28T07:15:34.954Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-7754816852709248976)], sessions=[], senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080)
    CreateTransaction
    RemoveCheckpoint(id=[dab39011-e73d-4689-ba50-5d2d1054180e], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=dab39011-e73d-4689-ba50-5d2d1054180e)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=3840437007616988399)])
    RemoveFlow(flowId=[dab39011-e73d-4689-ba50-5d2d1054180e], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-7754816852709248976, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Invocation, sessionId=27697471-3073-4f15-9957-d800a402209b, timestamp: 2021-10-28T07:15:26.718Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=3840437007616988399)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-3840437007616988399-3613272307164241993)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=10), flowState=net.corda.node.services.statemachine.FlowState$Finished@9b3bdfc, errorState=Errored(errors=[FlowError(errorId=-7754816852709248976, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@1aeff227, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=59c8052d-4988-47ae-9be4-e9a20f111080, reloadCheckpointAfterSuspendCount=null, numberOfCommits=10, lock=java.util.concurrent.Semaphore@7a5a0fb2[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-10-28T07:15:34.930Z
    2021-10-28T07:15:34.952Z
checkpoint.flowState: 
    Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:15:34.919Z), frozenFiber=AC30372CA0DEDA0BCCB123993CB90A0E4C9F55DB8B14E1B56E0FF3E8B601B31A)
    net.corda.node.services.statemachine.FlowState$Finished@9b3bdfc
checkpoint.checkpointState.numberOfCommits: 
    9
    10
numberOfCommits: 
    9
    10
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
[WARN ] 2021-10-28T07:15:34,966Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [dab39011-e73d-4689-ba50-5d2d1054180e] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 100.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[INFO ] 2021-10-28T07:15:34,992Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=3840437007616988399). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
[INFO ] 2021-10-28T07:15:34,997Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=3840437007616988399). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dab39011-e73d-4689-ba50-5d2d1054180e, invocation_id=27697471-3073-4f15-9957-d800a402209b, invocation_timestamp=2021-10-28T07:15:26.718Z, origin=Only For Testing, session_id=27697471-3073-4f15-9957-d800a402209b, session_timestamp=2021-10-28T07:15:26.718Z, thread-id=206}
[INFO ] 2021-10-28T07:15:35,060Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:15:35,086Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:15:35,086Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:15:35,090Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:15:35,101Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:15:35,101Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:15:35,104Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:15:35,123Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:15:35,123Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:15:35,127Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:15:35,136Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:15:35,136Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:08,812Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:17:08,857Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:17:08,870Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:17:09,319Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:17:10,796Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:11,124Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:17:11,200Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:17:11,222Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:17:11,229Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T, alias: identity-private-key {}
[INFO ] 2021-10-28T07:17:11,381Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,381Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,381Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,383Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,383Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,384Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,384Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,385Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,386Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,387Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:17:11,388Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,453Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:11,546Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:17:00.334Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:17:18,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:17:18,884Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:17:18,890Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:17:21,782Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:17:22,094Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:17:22,106Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095), owningKey=DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T {}
[INFO ] 2021-10-28T07:17:22,106Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:17:22,261Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095) {}
[INFO ] 2021-10-28T07:17:22,342Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:17:22,373Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:17:22,375Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:17:22,420Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095), owningKey=DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T {}
[INFO ] 2021-10-28T07:17:22,420Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:22,534Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:17:22,553Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:17:22,566Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:17:22,653Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:17:22,752Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:17:22,753Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:17:23,360Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095) {}
[INFO ] 2021-10-28T07:17:23,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095), owningKey=DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T {}
[INFO ] 2021-10-28T07:17:23,368Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:23,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095), owningKey=DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T {}
[INFO ] 2021-10-28T07:17:23,368Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:23,386Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:17:23,389Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:17:23,390Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:17:23,469Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:17:23,533Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:23,536Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:17:23,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:17:23,580Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:17:23,580Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi, alias: identity-private-key {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,588Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,589Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,589Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,589Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:17:23,589Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,589Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:23,607Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:17:00.334Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:17:24,623Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:17:24,630Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:24,630Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:24,831Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:24,837Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:17:24,841Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837), owningKey=DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi {}
[INFO ] 2021-10-28T07:17:24,841Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:24,850Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837) {}
[INFO ] 2021-10-28T07:17:24,859Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:17:24,859Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:17:24,859Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:17:24,868Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837), owningKey=DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi {}
[INFO ] 2021-10-28T07:17:24,868Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:24,906Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:17:24,910Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:17:24,910Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:17:24,911Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:17:24,920Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:17:24,954Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837) {}
[INFO ] 2021-10-28T07:17:24,960Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095), owningKey=DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T {}
[INFO ] 2021-10-28T07:17:24,960Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:17:24,976Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837), owningKey=DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi {}
[INFO ] 2021-10-28T07:17:24,976Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:24,987Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837), owningKey=DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi {}
[INFO ] 2021-10-28T07:17:24,987Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:24,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837), owningKey=DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi {}
[INFO ] 2021-10-28T07:17:24,988Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:25,010Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:17:25,010Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:17:25,010Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:17:25,023Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:17:25,080Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:25,082Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:17:25,083Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:17:25,124Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:17:25,124Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH, alias: identity-private-key {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,132Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:25,142Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:17:00.334Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:17:25,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:17:25,863Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:25,863Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:26,064Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:26,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:17:26,073Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070), owningKey=DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH {}
[INFO ] 2021-10-28T07:17:26,073Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:26,088Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070) {}
[INFO ] 2021-10-28T07:17:26,097Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:17:26,105Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070), owningKey=DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH {}
[INFO ] 2021-10-28T07:17:26,105Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:26,111Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:17:26,111Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:17:26,161Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:17:26,166Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:17:26,166Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:17:26,166Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:17:26,177Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:17:26,213Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070) {}
[INFO ] 2021-10-28T07:17:26,218Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095), owningKey=DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T {}
[INFO ] 2021-10-28T07:17:26,218Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:17:26,233Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070), owningKey=DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH {}
[INFO ] 2021-10-28T07:17:26,233Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:26,251Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837), owningKey=DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi {}
[INFO ] 2021-10-28T07:17:26,251Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:26,263Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070), owningKey=DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH {}
[INFO ] 2021-10-28T07:17:26,263Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:26,271Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070), owningKey=DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH {}
[INFO ] 2021-10-28T07:17:26,271Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:26,272Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070), owningKey=DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH {}
[INFO ] 2021-10-28T07:17:26,272Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:26,282Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:17:26,282Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:17:26,282Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:17:26,291Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:17:26,332Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:26,335Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:17:26,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:17:26,371Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:17:26,371Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs, alias: identity-private-key {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,380Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:17:26,383Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,383Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:17:26,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:17:00.334Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:17:27,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:17:27,092Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:27,092Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:27,269Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:17:27,274Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:17:27,277Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274), owningKey=DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs {}
[INFO ] 2021-10-28T07:17:27,277Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:27,285Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274) {}
[INFO ] 2021-10-28T07:17:27,299Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:17:27,304Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:17:27,304Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:17:27,307Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274), owningKey=DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs {}
[INFO ] 2021-10-28T07:17:27,307Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:27,350Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:17:27,353Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:17:27,353Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-071702.427-3329F6FF4D2D63EF/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:17:27,354Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:17:27,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:17:27,423Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274) {}
[INFO ] 2021-10-28T07:17:27,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635405442095), owningKey=DL2SmikmdeytniWzf1NBXYuVhH3e6weVuHwviQS7g2CF3T {}
[INFO ] 2021-10-28T07:17:27,427Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:17:27,440Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274), owningKey=DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs {}
[INFO ] 2021-10-28T07:17:27,440Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:27,454Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635405444837), owningKey=DLGdmaU9m177r2TPCDW6k2gqYUV3qJECvobZFhnNCmh8vi {}
[INFO ] 2021-10-28T07:17:27,454Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:27,466Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274), owningKey=DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs {}
[INFO ] 2021-10-28T07:17:27,466Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:27,476Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635405446070), owningKey=DLjidGU1aaQbz7S9wHYSnWCBT1TdWN7Tctq4qfnXnZBvH {}
[INFO ] 2021-10-28T07:17:27,476Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:27,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274), owningKey=DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs {}
[INFO ] 2021-10-28T07:17:27,487Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:17:27,496Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274), owningKey=DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs {}
[INFO ] 2021-10-28T07:17:27,496Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:27,496Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635405447274), owningKey=DL6eq9rteWegz3gB5PqmXn3EtR89qmrugjpgSdr2QGviPs {}
[INFO ] 2021-10-28T07:17:27,496Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:17:28,653Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b4f66be8-cd9b-40d0-8ec5-a329a4252462, invocation_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, invocation_timestamp=2021-10-28T07:17:27.539Z, origin=Only For Testing, session_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, session_timestamp=2021-10-28T07:17:27.539Z, thread-id=206, tx_id=58446994B665E1379071E42155D1BC3E256061DEB1BA5BFE2603B2F8C41572AF}
[INFO ] 2021-10-28T07:17:28,653Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b4f66be8-cd9b-40d0-8ec5-a329a4252462, invocation_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, invocation_timestamp=2021-10-28T07:17:27.539Z, origin=Only For Testing, session_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, session_timestamp=2021-10-28T07:17:27.539Z, thread-id=206, tx_id=58446994B665E1379071E42155D1BC3E256061DEB1BA5BFE2603B2F8C41572AF}
[INFO ] 2021-10-28T07:17:28,821Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b4f66be8-cd9b-40d0-8ec5-a329a4252462, invocation_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, invocation_timestamp=2021-10-28T07:17:27.539Z, origin=Only For Testing, session_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, session_timestamp=2021-10-28T07:17:27.539Z, thread-id=206, tx_id=58446994B665E1379071E42155D1BC3E256061DEB1BA5BFE2603B2F8C41572AF}
[INFO ] 2021-10-28T07:17:28,821Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b4f66be8-cd9b-40d0-8ec5-a329a4252462, invocation_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, invocation_timestamp=2021-10-28T07:17:27.539Z, origin=Only For Testing, session_id=f07c115f-cc55-4c1b-8ff3-b62d8d83bde9, session_timestamp=2021-10-28T07:17:27.539Z, thread-id=206, tx_id=58446994B665E1379071E42155D1BC3E256061DEB1BA5BFE2603B2F8C41572AF}
[INFO ] 2021-10-28T07:17:29,242Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c5b621e-45c4-41fa-b481-a8208b7068b1, invocation_id=7df59248-3208-4026-8ebd-81bdce19025a, invocation_timestamp=2021-10-28T07:17:28.919Z, origin=Only For Testing, session_id=7df59248-3208-4026-8ebd-81bdce19025a, session_timestamp=2021-10-28T07:17:28.919Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:29,350Z [Mock network] corda.flow. - Received a notarisation request for Tx [A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=00e0f40a-4da6-4a16-9f7e-ffbc2d23727a, invocation_id=98437b60-8800-4f11-8041-2504fe66ca1d, invocation_timestamp=2021-10-28T07:17:29.315Z, origin=O=UK Mint, L=London, C=GB, session_id=98437b60-8800-4f11-8041-2504fe66ca1d, session_timestamp=2021-10-28T07:17:29.315Z, thread-id=206}
[INFO ] 2021-10-28T07:17:29,719Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:17:29,739Z [Mock network] corda.flow. - Transaction [A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=00e0f40a-4da6-4a16-9f7e-ffbc2d23727a, invocation_id=98437b60-8800-4f11-8041-2504fe66ca1d, invocation_timestamp=2021-10-28T07:17:29.315Z, origin=O=UK Mint, L=London, C=GB, session_id=98437b60-8800-4f11-8041-2504fe66ca1d, session_timestamp=2021-10-28T07:17:29.315Z, thread-id=206}
[INFO ] 2021-10-28T07:17:29,796Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c5b621e-45c4-41fa-b481-a8208b7068b1, invocation_id=7df59248-3208-4026-8ebd-81bdce19025a, invocation_timestamp=2021-10-28T07:17:28.919Z, origin=Only For Testing, session_id=7df59248-3208-4026-8ebd-81bdce19025a, session_timestamp=2021-10-28T07:17:28.919Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:29,799Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c5b621e-45c4-41fa-b481-a8208b7068b1, invocation_id=7df59248-3208-4026-8ebd-81bdce19025a, invocation_timestamp=2021-10-28T07:17:28.919Z, origin=Only For Testing, session_id=7df59248-3208-4026-8ebd-81bdce19025a, session_timestamp=2021-10-28T07:17:28.919Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:29,813Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c5b621e-45c4-41fa-b481-a8208b7068b1, invocation_id=7df59248-3208-4026-8ebd-81bdce19025a, invocation_timestamp=2021-10-28T07:17:28.919Z, origin=Only For Testing, session_id=7df59248-3208-4026-8ebd-81bdce19025a, session_timestamp=2021-10-28T07:17:28.919Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:29,851Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=adfaff2b-90c7-4f4f-afa1-86fc773c53e1, invocation_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, invocation_timestamp=2021-10-28T07:17:29.416Z, origin=O=UK Mint, L=London, C=GB, session_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, session_timestamp=2021-10-28T07:17:29.416Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:29,992Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=adfaff2b-90c7-4f4f-afa1-86fc773c53e1, invocation_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, invocation_timestamp=2021-10-28T07:17:29.416Z, origin=O=UK Mint, L=London, C=GB, session_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, session_timestamp=2021-10-28T07:17:29.416Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:30,002Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=adfaff2b-90c7-4f4f-afa1-86fc773c53e1, invocation_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, invocation_timestamp=2021-10-28T07:17:29.416Z, origin=O=UK Mint, L=London, C=GB, session_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, session_timestamp=2021-10-28T07:17:29.416Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:30,016Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=adfaff2b-90c7-4f4f-afa1-86fc773c53e1, invocation_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, invocation_timestamp=2021-10-28T07:17:29.416Z, origin=O=UK Mint, L=London, C=GB, session_id=b3a68284-2b7d-4f55-86bd-4d504cc7a145, session_timestamp=2021-10-28T07:17:29.416Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:30,033Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c5b621e-45c4-41fa-b481-a8208b7068b1, invocation_id=7df59248-3208-4026-8ebd-81bdce19025a, invocation_timestamp=2021-10-28T07:17:28.919Z, origin=Only For Testing, session_id=7df59248-3208-4026-8ebd-81bdce19025a, session_timestamp=2021-10-28T07:17:28.919Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:30,033Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5c5b621e-45c4-41fa-b481-a8208b7068b1, invocation_id=7df59248-3208-4026-8ebd-81bdce19025a, invocation_timestamp=2021-10-28T07:17:28.919Z, origin=Only For Testing, session_id=7df59248-3208-4026-8ebd-81bdce19025a, session_timestamp=2021-10-28T07:17:28.919Z, thread-id=206, tx_id=A14EA17FDC55F2F9FA7368DD7EB5DD4EAE3538C31E00FEEC3B773C6BF60FC06C}
[INFO ] 2021-10-28T07:17:30,136Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=31045627-e32b-4037-8850-033636bdbd66, invocation_id=002413ce-ac0c-4561-9e69-6678fac44b83, invocation_timestamp=2021-10-28T07:17:30.049Z, origin=Only For Testing, session_id=002413ce-ac0c-4561-9e69-6678fac44b83, session_timestamp=2021-10-28T07:17:30.049Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,455Z [Mock network] corda.flow. - Received a notarisation request for Tx [71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=1aa88908-78a7-4c95-9590-1fd8e0d26acb, invocation_id=9ae71260-f9c9-42a8-996e-fcbba7712ee6, invocation_timestamp=2021-10-28T07:17:30.440Z, origin=O=Abbey, L=London, C=GB, session_id=9ae71260-f9c9-42a8-996e-fcbba7712ee6, session_timestamp=2021-10-28T07:17:30.440Z, thread-id=206}
[INFO ] 2021-10-28T07:17:30,637Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:17:30,641Z [Mock network] corda.flow. - Transaction [71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=1aa88908-78a7-4c95-9590-1fd8e0d26acb, invocation_id=9ae71260-f9c9-42a8-996e-fcbba7712ee6, invocation_timestamp=2021-10-28T07:17:30.440Z, origin=O=Abbey, L=London, C=GB, session_id=9ae71260-f9c9-42a8-996e-fcbba7712ee6, session_timestamp=2021-10-28T07:17:30.440Z, thread-id=206}
[INFO ] 2021-10-28T07:17:30,661Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=31045627-e32b-4037-8850-033636bdbd66, invocation_id=002413ce-ac0c-4561-9e69-6678fac44b83, invocation_timestamp=2021-10-28T07:17:30.049Z, origin=Only For Testing, session_id=002413ce-ac0c-4561-9e69-6678fac44b83, session_timestamp=2021-10-28T07:17:30.049Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,662Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=31045627-e32b-4037-8850-033636bdbd66, invocation_id=002413ce-ac0c-4561-9e69-6678fac44b83, invocation_timestamp=2021-10-28T07:17:30.049Z, origin=Only For Testing, session_id=002413ce-ac0c-4561-9e69-6678fac44b83, session_timestamp=2021-10-28T07:17:30.049Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,672Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=31045627-e32b-4037-8850-033636bdbd66, invocation_id=002413ce-ac0c-4561-9e69-6678fac44b83, invocation_timestamp=2021-10-28T07:17:30.049Z, origin=Only For Testing, session_id=002413ce-ac0c-4561-9e69-6678fac44b83, session_timestamp=2021-10-28T07:17:30.049Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,691Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=c68f3f71-6420-4b4c-aa1a-3086ff95cb39, invocation_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, invocation_timestamp=2021-10-28T07:17:30.470Z, origin=O=Abbey, L=London, C=GB, session_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, session_timestamp=2021-10-28T07:17:30.470Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,865Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=c68f3f71-6420-4b4c-aa1a-3086ff95cb39, invocation_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, invocation_timestamp=2021-10-28T07:17:30.470Z, origin=O=Abbey, L=London, C=GB, session_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, session_timestamp=2021-10-28T07:17:30.470Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,875Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=c68f3f71-6420-4b4c-aa1a-3086ff95cb39, invocation_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, invocation_timestamp=2021-10-28T07:17:30.470Z, origin=O=Abbey, L=London, C=GB, session_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, session_timestamp=2021-10-28T07:17:30.470Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,886Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=c68f3f71-6420-4b4c-aa1a-3086ff95cb39, invocation_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, invocation_timestamp=2021-10-28T07:17:30.470Z, origin=O=Abbey, L=London, C=GB, session_id=c15eb4c9-cae2-41d0-a3b9-aa6df3119d7d, session_timestamp=2021-10-28T07:17:30.470Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,897Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=31045627-e32b-4037-8850-033636bdbd66, invocation_id=002413ce-ac0c-4561-9e69-6678fac44b83, invocation_timestamp=2021-10-28T07:17:30.049Z, origin=Only For Testing, session_id=002413ce-ac0c-4561-9e69-6678fac44b83, session_timestamp=2021-10-28T07:17:30.049Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,897Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=31045627-e32b-4037-8850-033636bdbd66, invocation_id=002413ce-ac0c-4561-9e69-6678fac44b83, invocation_timestamp=2021-10-28T07:17:30.049Z, origin=Only For Testing, session_id=002413ce-ac0c-4561-9e69-6678fac44b83, session_timestamp=2021-10-28T07:17:30.049Z, thread-id=206, tx_id=71138C4C95B845CDAD0D4625156D31CF8FB9C46942BFD7AA77ED3AE403CC084D}
[INFO ] 2021-10-28T07:17:30,971Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=09675c31-bc03-4a30-a32d-35b21ac53259, invocation_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, invocation_timestamp=2021-10-28T07:17:30.906Z, origin=Only For Testing, session_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, session_timestamp=2021-10-28T07:17:30.906Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:30,996Z [Mock network] corda.flow. - Received a notarisation request for Tx [30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=0979294b-470b-46ce-af1c-2aa54f711cb4, invocation_id=6c61d85d-a9bc-4e70-9113-df778f25197b, invocation_timestamp=2021-10-28T07:17:30.982Z, origin=O=HSBC, L=London, C=GB, session_id=6c61d85d-a9bc-4e70-9113-df778f25197b, session_timestamp=2021-10-28T07:17:30.982Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,249Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:17:31,253Z [Mock network] corda.flow. - Transaction [30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=0979294b-470b-46ce-af1c-2aa54f711cb4, invocation_id=6c61d85d-a9bc-4e70-9113-df778f25197b, invocation_timestamp=2021-10-28T07:17:30.982Z, origin=O=HSBC, L=London, C=GB, session_id=6c61d85d-a9bc-4e70-9113-df778f25197b, session_timestamp=2021-10-28T07:17:30.982Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,294Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=09675c31-bc03-4a30-a32d-35b21ac53259, invocation_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, invocation_timestamp=2021-10-28T07:17:30.906Z, origin=Only For Testing, session_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, session_timestamp=2021-10-28T07:17:30.906Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,295Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=09675c31-bc03-4a30-a32d-35b21ac53259, invocation_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, invocation_timestamp=2021-10-28T07:17:30.906Z, origin=Only For Testing, session_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, session_timestamp=2021-10-28T07:17:30.906Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,301Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=09675c31-bc03-4a30-a32d-35b21ac53259, invocation_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, invocation_timestamp=2021-10-28T07:17:30.906Z, origin=Only For Testing, session_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, session_timestamp=2021-10-28T07:17:30.906Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,321Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=85f05b88-e384-4458-98c4-55aa271c4742, invocation_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, invocation_timestamp=2021-10-28T07:17:31.004Z, origin=O=HSBC, L=London, C=GB, session_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, session_timestamp=2021-10-28T07:17:31.004Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,335Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=85f05b88-e384-4458-98c4-55aa271c4742, invocation_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, invocation_timestamp=2021-10-28T07:17:31.004Z, origin=O=HSBC, L=London, C=GB, session_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, session_timestamp=2021-10-28T07:17:31.004Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,343Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=85f05b88-e384-4458-98c4-55aa271c4742, invocation_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, invocation_timestamp=2021-10-28T07:17:31.004Z, origin=O=HSBC, L=London, C=GB, session_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, session_timestamp=2021-10-28T07:17:31.004Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,352Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=85f05b88-e384-4458-98c4-55aa271c4742, invocation_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, invocation_timestamp=2021-10-28T07:17:31.004Z, origin=O=HSBC, L=London, C=GB, session_id=49a94105-01d5-409e-8ce9-16c5bcbaa4f5, session_timestamp=2021-10-28T07:17:31.004Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,366Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=09675c31-bc03-4a30-a32d-35b21ac53259, invocation_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, invocation_timestamp=2021-10-28T07:17:30.906Z, origin=Only For Testing, session_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, session_timestamp=2021-10-28T07:17:30.906Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,366Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=09675c31-bc03-4a30-a32d-35b21ac53259, invocation_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, invocation_timestamp=2021-10-28T07:17:30.906Z, origin=Only For Testing, session_id=d5c8e12b-5a49-4858-8008-c7b9346f57b6, session_timestamp=2021-10-28T07:17:30.906Z, thread-id=206, tx_id=30A0E44A6CCAA9AE40992739271BDCEC66EFD8803B9E5EB23C96C16A024440CD}
[INFO ] 2021-10-28T07:17:31,453Z [Mock network] corda.flow. - Flow raised an error: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,496Z [Mock network] statemachine.StaffedFlowHospital. - Flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Invocation, sessionId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-4963458445109828618)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4963458445109828618-7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@4c53ef87, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@68876cbe[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,500Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[INFO ] 2021-10-28T07:17:31,506Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[WARN ] 2021-10-28T07:17:31,541Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] errored, dumping all transitions:

 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.379Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[d2e909cd-f60a-4d91-be10-70f0513c14f4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Invocation, sessionId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=8ADE15C463A71D58779905EB8131B9038EE410FDF43255A1802B6EB37FF33340), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18c24784])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18c24784])
    SignalFlowHasStarted(flowId=[d2e909cd-f60a-4d91-be10-70f0513c14f4])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18c24784]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.380Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.376Z
    2021-10-28T07:17:31.380Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.380Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[d2e909cd-f60a-4d91-be10-70f0513c14f4], sessionId=SessionId(toLong=-4963458445109828618))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-4963458445109828618): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4963458445109828618), additionalEntropy=7606939143623884309)


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.385Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.380Z
    2021-10-28T07:17:31.385Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.394Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d2e909cd-f60a-4d91-be10-70f0513c14f4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Invocation, sessionId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-4963458445109828618)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4963458445109828618), additionalEntropy=7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.385Z
    2021-10-28T07:17:31.391Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=8ADE15C463A71D58779905EB8131B9038EE410FDF43255A1802B6EB37FF33340)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992)
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.394Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4963458445109828618), initiationEntropy=7606939143623884309, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4963458445109828618-7606939143623884309-1-0), senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.391Z
    2021-10-28T07:17:31.394Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4963458445109828618): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4963458445109828618), additionalEntropy=7606939143623884309)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4963458445109828618-7606939143623884309)
isFlowResumed: 
    false
    true


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.453Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.394Z
    2021-10-28T07:17:31.453Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.453Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.508Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.453Z
    2021-10-28T07:17:31.455Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5537882745699374284, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.516Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.517Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.455Z
    2021-10-28T07:17:31.517Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
[WARN ] 2021-10-28T07:17:31,541Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[WARN ] 2021-10-28T07:17:31,575Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
[WARN ] 2021-10-28T07:17:31,586Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] errored, dumping all transitions:

 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.379Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[d2e909cd-f60a-4d91-be10-70f0513c14f4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Invocation, sessionId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=8ADE15C463A71D58779905EB8131B9038EE410FDF43255A1802B6EB37FF33340), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18c24784])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18c24784])
    SignalFlowHasStarted(flowId=[d2e909cd-f60a-4d91-be10-70f0513c14f4])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@18c24784]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.380Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.376Z
    2021-10-28T07:17:31.380Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.380Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[d2e909cd-f60a-4d91-be10-70f0513c14f4], sessionId=SessionId(toLong=-4963458445109828618))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-4963458445109828618): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4963458445109828618), additionalEntropy=7606939143623884309)


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.385Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.380Z
    2021-10-28T07:17:31.385Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.394Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[d2e909cd-f60a-4d91-be10-70f0513c14f4], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Invocation, sessionId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-4963458445109828618)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4963458445109828618), additionalEntropy=7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.385Z
    2021-10-28T07:17:31.391Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=8ADE15C463A71D58779905EB8131B9038EE410FDF43255A1802B6EB37FF33340)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992)
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.394Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-4963458445109828618), initiationEntropy=7606939143623884309, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--4963458445109828618-7606939143623884309-1-0), senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.391Z
    2021-10-28T07:17:31.394Z
checkpoint.checkpointState.sessions.SessionId(toLong=-4963458445109828618): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-4963458445109828618), additionalEntropy=7606939143623884309)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4963458445109828618-7606939143623884309)
isFlowResumed: 
    false
    true


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.453Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.394Z
    2021-10-28T07:17:31.453Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.453Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.508Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.453Z
    2021-10-28T07:17:31.455Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-5537882745699374284, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.516Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.517Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.455Z
    2021-10-28T07:17:31.517Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] ---
  Timestamp: 2021-10-28T07:17:31.578Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-5537882745699374284)], sessions=[], senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68)
    CreateTransaction
    RemoveCheckpoint(id=[d2e909cd-f60a-4d91-be10-70f0513c14f4], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=d2e909cd-f60a-4d91-be10-70f0513c14f4)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-4963458445109828618)])
    RemoveFlow(flowId=[d2e909cd-f60a-4d91-be10-70f0513c14f4], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5537882745699374284, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Invocation, sessionId=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, timestamp: 2021-10-28T07:17:31.375Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-4963458445109828618)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--4963458445109828618-7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@2e9449f3, errorState=Errored(errors=[FlowError(errorId=-5537882745699374284, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Send, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@4c53ef87, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@68876cbe[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-10-28T07:17:31.517Z
    2021-10-28T07:17:31.568Z
checkpoint.flowState: 
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-4963458445109828618))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=D23418BB9CBA3FE150EE63F71C05F34E041A7D0CA2D7E5BCFF18C1CC1B1AB992)
    net.corda.node.services.statemachine.FlowState$Finished@2e9449f3
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
[WARN ] 2021-10-28T07:17:31,586Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [d2e909cd-f60a-4d91-be10-70f0513c14f4] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d2e909cd-f60a-4d91-be10-70f0513c14f4, invocation_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, invocation_timestamp=2021-10-28T07:17:31.375Z, origin=Only For Testing, session_id=e7e6dfce-e4b7-49e5-a1e8-9ec4a4ef270e, session_timestamp=2021-10-28T07:17:31.375Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[INFO ] 2021-10-28T07:17:31,606Z [Mock network] corda.flow. - Flow raised an error: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler. Sending it to flow hospital to be triaged. {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,608Z [Mock network] statemachine.StaffedFlowHospital. - Flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Invocation, sessionId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=2395455752038432235)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4963458445109828618), deduplicationSeed=D--4963458445109828618-7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), frozenFiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler@19bd102d, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@7b908bd0[Permits = 0]) {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,608Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[INFO ] 2021-10-28T07:17:31,608Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[WARN ] 2021-10-28T07:17:31,627Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] errored, dumping all transitions:

 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.594Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[27c38e9e-6ce0-4484-9b31-c32a3f62649c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Invocation, sessionId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=EB4B5E892FF418A326C6BB177592D2559BA951D80908AD7CE75075F093F16F06), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@42d2ae23])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@42d2ae23])
    SignalFlowHasStarted(flowId=[27c38e9e-6ce0-4484-9b31-c32a3f62649c])
    SendExisting(peerParty=O=UK Mint, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4963458445109828618), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2395455752038432235), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4963458445109828618-7606939143623884309-0-0), senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.591Z
    2021-10-28T07:17:31.592Z
checkpoint.checkpointState.sessions.SessionId(toLong=2395455752038432235): 
    null
    Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4963458445109828618), deduplicationSeed=D--4963458445109828618-7606939143623884309)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@42d2ae23]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.598Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.592Z
    2021-10-28T07:17:31.598Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.605Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), maySkipCheckpoint=false, fiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[27c38e9e-6ce0-4484-9b31-c32a3f62649c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Invocation, sessionId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=2395455752038432235)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4963458445109828618), deduplicationSeed=D--4963458445109828618-7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), frozenFiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.598Z
    2021-10-28T07:17:31.602Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=EB4B5E892FF418A326C6BB177592D2559BA951D80908AD7CE75075F093F16F06)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), frozenFiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.605Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.602Z
    2021-10-28T07:17:31.605Z
checkpoint.checkpointState.sessions.SessionId(toLong=2395455752038432235).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.606Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.605Z
    2021-10-28T07:17:31.606Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.608Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.606Z
    2021-10-28T07:17:31.607Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1989183714330614792, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.609Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.609Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.607Z
    2021-10-28T07:17:31.609Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
[WARN ] 2021-10-28T07:17:31,627Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] error {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[WARN ] 2021-10-28T07:17:31,627Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
[WARN ] 2021-10-28T07:17:31,791Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] errored, dumping all transitions:

 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.594Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[27c38e9e-6ce0-4484-9b31-c32a3f62649c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Invocation, sessionId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=EB4B5E892FF418A326C6BB177592D2559BA951D80908AD7CE75075F093F16F06), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@42d2ae23])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@42d2ae23])
    SignalFlowHasStarted(flowId=[27c38e9e-6ce0-4484-9b31-c32a3f62649c])
    SendExisting(peerParty=O=UK Mint, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4963458445109828618), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2395455752038432235), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--4963458445109828618-7606939143623884309-0-0), senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.591Z
    2021-10-28T07:17:31.592Z
checkpoint.checkpointState.sessions.SessionId(toLong=2395455752038432235): 
    null
    Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4963458445109828618), deduplicationSeed=D--4963458445109828618-7606939143623884309)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@42d2ae23]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.598Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.592Z
    2021-10-28T07:17:31.598Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.605Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), maySkipCheckpoint=false, fiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[27c38e9e-6ce0-4484-9b31-c32a3f62649c], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Invocation, sessionId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=2395455752038432235)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4963458445109828618), deduplicationSeed=D--4963458445109828618-7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), frozenFiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.598Z
    2021-10-28T07:17:31.602Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=EB4B5E892FF418A326C6BB177592D2559BA951D80908AD7CE75075F093F16F06)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), frozenFiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.605Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.602Z
    2021-10-28T07:17:31.605Z
checkpoint.checkpointState.sessions.SessionId(toLong=2395455752038432235).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.606Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.605Z
    2021-10-28T07:17:31.606Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.608Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.606Z
    2021-10-28T07:17:31.607Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1989183714330614792, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.609Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.609Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:17:31.607Z
    2021-10-28T07:17:31.609Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] ---
  Timestamp: 2021-10-28T07:17:31.768Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-1989183714330614792)], sessions=[Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4963458445109828618), deduplicationSeed=D--4963458445109828618-7606939143623884309)], senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68)
    CreateTransaction
    RemoveCheckpoint(id=[27c38e9e-6ce0-4484-9b31-c32a3f62649c], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=27c38e9e-6ce0-4484-9b31-c32a3f62649c)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=2395455752038432235)])
    RemoveFlow(flowId=[27c38e9e-6ce0-4484-9b31-c32a3f62649c], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1989183714330614792, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Invocation, sessionId=87247df7-2f77-41a6-9242-589a0cb583e9, timestamp: 2021-10-28T07:17:31.590Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=2395455752038432235)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4963458445109828618), deduplicationSeed=D--4963458445109828618-7606939143623884309)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@2e9449f3, errorState=Errored(errors=[FlowError(errorId=-1989183714330614792, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler@19bd102d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=2cf27bf5-d922-41eb-9416-e512b8f31a68, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@7b908bd0[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-10-28T07:17:31.609Z
    2021-10-28T07:17:31.627Z
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=2395455752038432235))]), frozenFiber=3029486D78A4FEAE4F7C4B1A6A1E8DB11EB899D26E6A877E3C7E21533A121A87)
    net.corda.node.services.statemachine.FlowState$Finished@2e9449f3
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
 {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
[WARN ] 2021-10-28T07:17:31,791Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [27c38e9e-6ce0-4484-9b31-c32a3f62649c] error {fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[INFO ] 2021-10-28T07:17:31,861Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=-4963458445109828618). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,872Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=-4963458445109828618). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000012, flow-id=27c38e9e-6ce0-4484-9b31-c32a3f62649c, invocation_id=87247df7-2f77-41a6-9242-589a0cb583e9, invocation_timestamp=2021-10-28T07:17:31.590Z, origin=O=UK Mint, L=London, C=GB, session_id=87247df7-2f77-41a6-9242-589a0cb583e9, session_timestamp=2021-10-28T07:17:31.590Z, thread-id=206}
[INFO ] 2021-10-28T07:17:31,915Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:17:31,956Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:17:31,956Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:31,961Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:17:31,972Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:17:31,972Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:31,976Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:17:31,987Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:17:31,987Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:17:31,988Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:17:31,998Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:17:31,998Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:38:53,843Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:38:53,875Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:38:53,887Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:38:54,332Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:38:55,988Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:38:56,331Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:38:56,422Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:38:56,448Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:38:56,452Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q, alias: identity-private-key {}
[INFO ] 2021-10-28T07:38:56,637Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,638Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,638Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,639Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,640Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,642Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,644Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,645Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,647Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,647Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,681Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,763Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:38:56,769Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:38:56,854Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:38:57,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:38:42.907Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:39:04,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:39:04,904Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:39:04,912Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:39:08,306Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:39:08,632Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:39:08,645Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632), owningKey=DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q {}
[INFO ] 2021-10-28T07:39:08,645Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:39:08,805Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632) {}
[INFO ] 2021-10-28T07:39:08,872Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:39:08,912Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:39:08,915Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:39:08,946Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632), owningKey=DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q {}
[INFO ] 2021-10-28T07:39:08,946Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:09,106Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:39:09,125Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:39:09,138Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:39:09,225Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:39:09,309Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:39:09,309Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:39:09,979Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632) {}
[INFO ] 2021-10-28T07:39:09,992Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632), owningKey=DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q {}
[INFO ] 2021-10-28T07:39:09,992Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:09,992Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632), owningKey=DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q {}
[INFO ] 2021-10-28T07:39:09,992Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:10,010Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:39:10,013Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:39:10,013Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:39:10,084Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:39:10,140Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:39:10,141Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:39:10,143Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:39:10,185Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:39:10,185Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN, alias: identity-private-key {}
[INFO ] 2021-10-28T07:39:10,194Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,195Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,195Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,195Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,195Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,198Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,206Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,206Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,206Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:39:10,206Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,206Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:39:10,216Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:38:42.907Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:39:11,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:39:11,100Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:11,100Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:11,289Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:11,296Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:39:11,303Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296), owningKey=DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN {}
[INFO ] 2021-10-28T07:39:11,303Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:11,314Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296) {}
[INFO ] 2021-10-28T07:39:11,329Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:39:11,334Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:39:11,336Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:39:11,341Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296), owningKey=DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN {}
[INFO ] 2021-10-28T07:39:11,341Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:11,408Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:39:11,411Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:39:11,411Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:39:11,412Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:39:11,416Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:39:11,440Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296) {}
[INFO ] 2021-10-28T07:39:11,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632), owningKey=DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q {}
[INFO ] 2021-10-28T07:39:11,442Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:39:11,457Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296), owningKey=DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN {}
[INFO ] 2021-10-28T07:39:11,457Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:11,469Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296), owningKey=DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN {}
[INFO ] 2021-10-28T07:39:11,469Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:11,472Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296), owningKey=DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN {}
[INFO ] 2021-10-28T07:39:11,472Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:11,486Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:39:11,486Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:39:11,486Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:39:11,502Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:39:11,570Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:39:11,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:39:11,574Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:39:11,614Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:39:11,615Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf, alias: identity-private-key {}
[INFO ] 2021-10-28T07:39:11,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,624Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,625Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:39:11,633Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:38:42.907Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:39:12,567Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:39:12,570Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:12,570Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:12,758Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:12,764Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:39:12,767Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764), owningKey=DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf {}
[INFO ] 2021-10-28T07:39:12,767Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:12,781Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764) {}
[INFO ] 2021-10-28T07:39:12,790Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:39:12,792Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:39:12,792Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:39:12,800Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764), owningKey=DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf {}
[INFO ] 2021-10-28T07:39:12,800Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:12,833Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:39:12,836Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:39:12,836Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:39:12,837Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:39:12,858Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:39:12,882Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764) {}
[INFO ] 2021-10-28T07:39:12,889Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632), owningKey=DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q {}
[INFO ] 2021-10-28T07:39:12,889Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:39:12,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764), owningKey=DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf {}
[INFO ] 2021-10-28T07:39:12,906Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:12,925Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296), owningKey=DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN {}
[INFO ] 2021-10-28T07:39:12,925Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:12,942Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764), owningKey=DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf {}
[INFO ] 2021-10-28T07:39:12,942Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:12,958Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764), owningKey=DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf {}
[INFO ] 2021-10-28T07:39:12,958Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:12,958Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764), owningKey=DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf {}
[INFO ] 2021-10-28T07:39:12,958Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:12,968Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:39:12,968Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:39:12,968Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:39:12,978Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:39:13,032Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:39:13,033Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:39:13,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:39:13,070Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:39:13,070Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C, alias: identity-private-key {}
[INFO ] 2021-10-28T07:39:13,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,077Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,078Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:39:13,087Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:38:42.907Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:39:13,688Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:39:13,690Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:13,690Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:13,889Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:39:13,894Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:39:13,898Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895), owningKey=DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C {}
[INFO ] 2021-10-28T07:39:13,898Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:13,906Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895) {}
[INFO ] 2021-10-28T07:39:13,912Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:39:13,914Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:39:13,914Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:39:13,920Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895), owningKey=DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C {}
[INFO ] 2021-10-28T07:39:13,920Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:13,953Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:39:13,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:39:13,957Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-073845.605-C18A08CE9B918EDD/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:39:13,958Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:39:13,974Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:39:13,997Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895) {}
[INFO ] 2021-10-28T07:39:14,003Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635406748632), owningKey=DLHPuT9armioZ35qZJ4K8M89ZFERFyTf3tJtR2Hw4P9A7q {}
[INFO ] 2021-10-28T07:39:14,003Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:39:14,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895), owningKey=DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C {}
[INFO ] 2021-10-28T07:39:14,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:14,044Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635406751296), owningKey=DL2G4nEuq44moDFRhBS9Tm2UHmtQKeaesJYVQT9tu6cqyN {}
[INFO ] 2021-10-28T07:39:14,044Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:14,072Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895), owningKey=DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C {}
[INFO ] 2021-10-28T07:39:14,072Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:14,089Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635406752764), owningKey=DLDDVZTmtuoLFNsfHqCvSFaFNiVfVge1D9tCF5s94YqEDf {}
[INFO ] 2021-10-28T07:39:14,089Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:14,105Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895), owningKey=DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C {}
[INFO ] 2021-10-28T07:39:14,105Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:39:14,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895), owningKey=DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C {}
[INFO ] 2021-10-28T07:39:14,120Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:14,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635406753895), owningKey=DLBErrh8ikyL2zTbstjTny2b6miFfj747LnQThMYSVvJ4C {}
[INFO ] 2021-10-28T07:39:14,120Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:39:15,198Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1d8727a-a8c1-4c38-baf1-cbe0e1214eb5, invocation_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, invocation_timestamp=2021-10-28T07:39:14.154Z, origin=Only For Testing, session_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, session_timestamp=2021-10-28T07:39:14.154Z, thread-id=206, tx_id=5001C49B18C5B40D94AB38CF3B35659479C489A77C20F7D8C65018D47F8BFA69}
[INFO ] 2021-10-28T07:39:15,198Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1d8727a-a8c1-4c38-baf1-cbe0e1214eb5, invocation_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, invocation_timestamp=2021-10-28T07:39:14.154Z, origin=Only For Testing, session_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, session_timestamp=2021-10-28T07:39:14.154Z, thread-id=206, tx_id=5001C49B18C5B40D94AB38CF3B35659479C489A77C20F7D8C65018D47F8BFA69}
[INFO ] 2021-10-28T07:39:15,333Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1d8727a-a8c1-4c38-baf1-cbe0e1214eb5, invocation_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, invocation_timestamp=2021-10-28T07:39:14.154Z, origin=Only For Testing, session_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, session_timestamp=2021-10-28T07:39:14.154Z, thread-id=206, tx_id=5001C49B18C5B40D94AB38CF3B35659479C489A77C20F7D8C65018D47F8BFA69}
[INFO ] 2021-10-28T07:39:15,333Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1d8727a-a8c1-4c38-baf1-cbe0e1214eb5, invocation_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, invocation_timestamp=2021-10-28T07:39:14.154Z, origin=Only For Testing, session_id=4054e7a1-becc-4b0b-83a6-e8d9893c7aa0, session_timestamp=2021-10-28T07:39:14.154Z, thread-id=206, tx_id=5001C49B18C5B40D94AB38CF3B35659479C489A77C20F7D8C65018D47F8BFA69}
[INFO ] 2021-10-28T07:39:15,768Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=04df977c-1918-41e3-b85e-ef74d8255fa4, invocation_id=c1c74347-2423-472e-a755-554657b0b4c0, invocation_timestamp=2021-10-28T07:39:15.440Z, origin=Only For Testing, session_id=c1c74347-2423-472e-a755-554657b0b4c0, session_timestamp=2021-10-28T07:39:15.440Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:15,886Z [Mock network] corda.flow. - Received a notarisation request for Tx [DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=9e669d80-ee68-4d71-817a-0afd99ddac06, invocation_id=02910e6c-bd99-4670-bf8f-6edf7bf4337d, invocation_timestamp=2021-10-28T07:39:15.846Z, origin=O=UK Mint, L=London, C=GB, session_id=02910e6c-bd99-4670-bf8f-6edf7bf4337d, session_timestamp=2021-10-28T07:39:15.846Z, thread-id=206}
[INFO ] 2021-10-28T07:39:16,250Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:39:16,270Z [Mock network] corda.flow. - Transaction [DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=9e669d80-ee68-4d71-817a-0afd99ddac06, invocation_id=02910e6c-bd99-4670-bf8f-6edf7bf4337d, invocation_timestamp=2021-10-28T07:39:15.846Z, origin=O=UK Mint, L=London, C=GB, session_id=02910e6c-bd99-4670-bf8f-6edf7bf4337d, session_timestamp=2021-10-28T07:39:15.846Z, thread-id=206}
[INFO ] 2021-10-28T07:39:16,317Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=04df977c-1918-41e3-b85e-ef74d8255fa4, invocation_id=c1c74347-2423-472e-a755-554657b0b4c0, invocation_timestamp=2021-10-28T07:39:15.440Z, origin=Only For Testing, session_id=c1c74347-2423-472e-a755-554657b0b4c0, session_timestamp=2021-10-28T07:39:15.440Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,320Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=04df977c-1918-41e3-b85e-ef74d8255fa4, invocation_id=c1c74347-2423-472e-a755-554657b0b4c0, invocation_timestamp=2021-10-28T07:39:15.440Z, origin=Only For Testing, session_id=c1c74347-2423-472e-a755-554657b0b4c0, session_timestamp=2021-10-28T07:39:15.440Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,335Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=04df977c-1918-41e3-b85e-ef74d8255fa4, invocation_id=c1c74347-2423-472e-a755-554657b0b4c0, invocation_timestamp=2021-10-28T07:39:15.440Z, origin=Only For Testing, session_id=c1c74347-2423-472e-a755-554657b0b4c0, session_timestamp=2021-10-28T07:39:15.440Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,376Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=fff22c25-e9a0-4abf-adff-eb1600fc8034, invocation_id=3be38306-f47b-4a99-ae0b-184505134b92, invocation_timestamp=2021-10-28T07:39:15.967Z, origin=O=UK Mint, L=London, C=GB, session_id=3be38306-f47b-4a99-ae0b-184505134b92, session_timestamp=2021-10-28T07:39:15.967Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,498Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=fff22c25-e9a0-4abf-adff-eb1600fc8034, invocation_id=3be38306-f47b-4a99-ae0b-184505134b92, invocation_timestamp=2021-10-28T07:39:15.967Z, origin=O=UK Mint, L=London, C=GB, session_id=3be38306-f47b-4a99-ae0b-184505134b92, session_timestamp=2021-10-28T07:39:15.967Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,510Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=fff22c25-e9a0-4abf-adff-eb1600fc8034, invocation_id=3be38306-f47b-4a99-ae0b-184505134b92, invocation_timestamp=2021-10-28T07:39:15.967Z, origin=O=UK Mint, L=London, C=GB, session_id=3be38306-f47b-4a99-ae0b-184505134b92, session_timestamp=2021-10-28T07:39:15.967Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,522Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=fff22c25-e9a0-4abf-adff-eb1600fc8034, invocation_id=3be38306-f47b-4a99-ae0b-184505134b92, invocation_timestamp=2021-10-28T07:39:15.967Z, origin=O=UK Mint, L=London, C=GB, session_id=3be38306-f47b-4a99-ae0b-184505134b92, session_timestamp=2021-10-28T07:39:15.967Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,536Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=04df977c-1918-41e3-b85e-ef74d8255fa4, invocation_id=c1c74347-2423-472e-a755-554657b0b4c0, invocation_timestamp=2021-10-28T07:39:15.440Z, origin=Only For Testing, session_id=c1c74347-2423-472e-a755-554657b0b4c0, session_timestamp=2021-10-28T07:39:15.440Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,536Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=04df977c-1918-41e3-b85e-ef74d8255fa4, invocation_id=c1c74347-2423-472e-a755-554657b0b4c0, invocation_timestamp=2021-10-28T07:39:15.440Z, origin=Only For Testing, session_id=c1c74347-2423-472e-a755-554657b0b4c0, session_timestamp=2021-10-28T07:39:15.440Z, thread-id=206, tx_id=DA3DEE19F8CFBD6A426DF5D197CB4BA4E5F54F72BAFCAB2E086255B331AD25EA}
[INFO ] 2021-10-28T07:39:16,638Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=8f05aad7-ac7e-47aa-aa50-2816f442fe65, invocation_id=091aba25-e342-4950-92df-0d16ddb00e0a, invocation_timestamp=2021-10-28T07:39:16.546Z, origin=Only For Testing, session_id=091aba25-e342-4950-92df-0d16ddb00e0a, session_timestamp=2021-10-28T07:39:16.546Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:16,664Z [Mock network] corda.flow. - Received a notarisation request for Tx [0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=fca87283-94d1-4d72-8571-0f1205d3c770, invocation_id=3db5f241-ecad-4495-80ad-62deb73353f1, invocation_timestamp=2021-10-28T07:39:16.652Z, origin=O=Abbey, L=London, C=GB, session_id=3db5f241-ecad-4495-80ad-62deb73353f1, session_timestamp=2021-10-28T07:39:16.652Z, thread-id=206}
[INFO ] 2021-10-28T07:39:16,879Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:39:16,887Z [Mock network] corda.flow. - Transaction [0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=fca87283-94d1-4d72-8571-0f1205d3c770, invocation_id=3db5f241-ecad-4495-80ad-62deb73353f1, invocation_timestamp=2021-10-28T07:39:16.652Z, origin=O=Abbey, L=London, C=GB, session_id=3db5f241-ecad-4495-80ad-62deb73353f1, session_timestamp=2021-10-28T07:39:16.652Z, thread-id=206}
[INFO ] 2021-10-28T07:39:16,905Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=8f05aad7-ac7e-47aa-aa50-2816f442fe65, invocation_id=091aba25-e342-4950-92df-0d16ddb00e0a, invocation_timestamp=2021-10-28T07:39:16.546Z, origin=Only For Testing, session_id=091aba25-e342-4950-92df-0d16ddb00e0a, session_timestamp=2021-10-28T07:39:16.546Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:16,906Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=8f05aad7-ac7e-47aa-aa50-2816f442fe65, invocation_id=091aba25-e342-4950-92df-0d16ddb00e0a, invocation_timestamp=2021-10-28T07:39:16.546Z, origin=Only For Testing, session_id=091aba25-e342-4950-92df-0d16ddb00e0a, session_timestamp=2021-10-28T07:39:16.546Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:16,916Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=8f05aad7-ac7e-47aa-aa50-2816f442fe65, invocation_id=091aba25-e342-4950-92df-0d16ddb00e0a, invocation_timestamp=2021-10-28T07:39:16.546Z, origin=Only For Testing, session_id=091aba25-e342-4950-92df-0d16ddb00e0a, session_timestamp=2021-10-28T07:39:16.546Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:16,937Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=f0419142-0dcb-483e-ac6e-34ec235a986b, invocation_id=fe83b115-81cb-46be-a69b-7f8db48b062f, invocation_timestamp=2021-10-28T07:39:16.680Z, origin=O=Abbey, L=London, C=GB, session_id=fe83b115-81cb-46be-a69b-7f8db48b062f, session_timestamp=2021-10-28T07:39:16.680Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:17,093Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=f0419142-0dcb-483e-ac6e-34ec235a986b, invocation_id=fe83b115-81cb-46be-a69b-7f8db48b062f, invocation_timestamp=2021-10-28T07:39:16.680Z, origin=O=Abbey, L=London, C=GB, session_id=fe83b115-81cb-46be-a69b-7f8db48b062f, session_timestamp=2021-10-28T07:39:16.680Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:17,112Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=f0419142-0dcb-483e-ac6e-34ec235a986b, invocation_id=fe83b115-81cb-46be-a69b-7f8db48b062f, invocation_timestamp=2021-10-28T07:39:16.680Z, origin=O=Abbey, L=London, C=GB, session_id=fe83b115-81cb-46be-a69b-7f8db48b062f, session_timestamp=2021-10-28T07:39:16.680Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:17,123Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=f0419142-0dcb-483e-ac6e-34ec235a986b, invocation_id=fe83b115-81cb-46be-a69b-7f8db48b062f, invocation_timestamp=2021-10-28T07:39:16.680Z, origin=O=Abbey, L=London, C=GB, session_id=fe83b115-81cb-46be-a69b-7f8db48b062f, session_timestamp=2021-10-28T07:39:16.680Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:17,134Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=8f05aad7-ac7e-47aa-aa50-2816f442fe65, invocation_id=091aba25-e342-4950-92df-0d16ddb00e0a, invocation_timestamp=2021-10-28T07:39:16.546Z, origin=Only For Testing, session_id=091aba25-e342-4950-92df-0d16ddb00e0a, session_timestamp=2021-10-28T07:39:16.546Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:17,134Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=8f05aad7-ac7e-47aa-aa50-2816f442fe65, invocation_id=091aba25-e342-4950-92df-0d16ddb00e0a, invocation_timestamp=2021-10-28T07:39:16.546Z, origin=Only For Testing, session_id=091aba25-e342-4950-92df-0d16ddb00e0a, session_timestamp=2021-10-28T07:39:16.546Z, thread-id=206, tx_id=0C61FA1D99F805A08D0F71040213C318051856A6683E9C60AB0BBCF2529F0B7B}
[INFO ] 2021-10-28T07:39:17,234Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=f714c94a-01b6-4dc6-99f5-03221f049d8a, invocation_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, invocation_timestamp=2021-10-28T07:39:17.147Z, origin=Only For Testing, session_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, session_timestamp=2021-10-28T07:39:17.147Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,260Z [Mock network] corda.flow. - Received a notarisation request for Tx [A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=37d8cce8-c271-4ca4-90e4-b9b40cfa10ce, invocation_id=226166b1-f296-4944-946f-3dddac64af7f, invocation_timestamp=2021-10-28T07:39:17.247Z, origin=O=HSBC, L=London, C=GB, session_id=226166b1-f296-4944-946f-3dddac64af7f, session_timestamp=2021-10-28T07:39:17.247Z, thread-id=206}
[INFO ] 2021-10-28T07:39:17,496Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:39:17,502Z [Mock network] corda.flow. - Transaction [A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=37d8cce8-c271-4ca4-90e4-b9b40cfa10ce, invocation_id=226166b1-f296-4944-946f-3dddac64af7f, invocation_timestamp=2021-10-28T07:39:17.247Z, origin=O=HSBC, L=London, C=GB, session_id=226166b1-f296-4944-946f-3dddac64af7f, session_timestamp=2021-10-28T07:39:17.247Z, thread-id=206}
[INFO ] 2021-10-28T07:39:17,559Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=f714c94a-01b6-4dc6-99f5-03221f049d8a, invocation_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, invocation_timestamp=2021-10-28T07:39:17.147Z, origin=Only For Testing, session_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, session_timestamp=2021-10-28T07:39:17.147Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,560Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=f714c94a-01b6-4dc6-99f5-03221f049d8a, invocation_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, invocation_timestamp=2021-10-28T07:39:17.147Z, origin=Only For Testing, session_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, session_timestamp=2021-10-28T07:39:17.147Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,569Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=f714c94a-01b6-4dc6-99f5-03221f049d8a, invocation_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, invocation_timestamp=2021-10-28T07:39:17.147Z, origin=Only For Testing, session_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, session_timestamp=2021-10-28T07:39:17.147Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,590Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=b2513ca5-30c5-40c3-b126-f1a21cb2f3ef, invocation_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, invocation_timestamp=2021-10-28T07:39:17.267Z, origin=O=HSBC, L=London, C=GB, session_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, session_timestamp=2021-10-28T07:39:17.267Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,598Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=b2513ca5-30c5-40c3-b126-f1a21cb2f3ef, invocation_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, invocation_timestamp=2021-10-28T07:39:17.267Z, origin=O=HSBC, L=London, C=GB, session_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, session_timestamp=2021-10-28T07:39:17.267Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,605Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=b2513ca5-30c5-40c3-b126-f1a21cb2f3ef, invocation_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, invocation_timestamp=2021-10-28T07:39:17.267Z, origin=O=HSBC, L=London, C=GB, session_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, session_timestamp=2021-10-28T07:39:17.267Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,612Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=b2513ca5-30c5-40c3-b126-f1a21cb2f3ef, invocation_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, invocation_timestamp=2021-10-28T07:39:17.267Z, origin=O=HSBC, L=London, C=GB, session_id=6b2c11bf-9790-4f57-a6f5-5b2dd0b6fc4f, session_timestamp=2021-10-28T07:39:17.267Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,621Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=f714c94a-01b6-4dc6-99f5-03221f049d8a, invocation_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, invocation_timestamp=2021-10-28T07:39:17.147Z, origin=Only For Testing, session_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, session_timestamp=2021-10-28T07:39:17.147Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,621Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=f714c94a-01b6-4dc6-99f5-03221f049d8a, invocation_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, invocation_timestamp=2021-10-28T07:39:17.147Z, origin=Only For Testing, session_id=4f8c03b2-e0ae-4b83-b27d-d5538a2f70d2, session_timestamp=2021-10-28T07:39:17.147Z, thread-id=206, tx_id=A637FE76939FA3D60373DD350DCFA58FF4AFB683B0A5B67ABA41568D8685E0CF}
[INFO ] 2021-10-28T07:39:17,670Z [Mock network] corda.flow. - Flow raised an error: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
[INFO ] 2021-10-28T07:39:17,675Z [Mock network] statemachine.StaffedFlowHospital. - Flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Invocation, sessionId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-532961400704592695)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--532961400704592695-9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@3c263f36, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@34a8a66[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
[INFO ] 2021-10-28T07:39:17,677Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[INFO ] 2021-10-28T07:39:17,680Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[WARN ] 2021-10-28T07:39:17,710Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] errored, dumping all transitions:

 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.632Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Invocation, sessionId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=1EBDC9EC917A99CA23F2BE034163094E41E3032297EFE419FB952E79CF842DCB), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@49fcc62c])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@49fcc62c])
    SignalFlowHasStarted(flowId=[40df5342-da98-4e2a-a360-eb6f0d7f22fc])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@49fcc62c]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.633Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.629Z
    2021-10-28T07:39:17.633Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.634Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], sessionId=SessionId(toLong=-532961400704592695))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.633Z
    2021-10-28T07:39:17.634Z
checkpoint.checkpointState.sessions.SessionId(toLong=-532961400704592695): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-532961400704592695), additionalEntropy=9044819256222594274)


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.637Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.634Z
    2021-10-28T07:39:17.637Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.644Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Invocation, sessionId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-532961400704592695)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-532961400704592695), additionalEntropy=9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.637Z
    2021-10-28T07:39:17.642Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=1EBDC9EC917A99CA23F2BE034163094E41E3032297EFE419FB952E79CF842DCB)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.645Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-532961400704592695), initiationEntropy=9044819256222594274, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--532961400704592695-9044819256222594274-1-0), senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.642Z
    2021-10-28T07:39:17.644Z
checkpoint.checkpointState.sessions.SessionId(toLong=-532961400704592695): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-532961400704592695), additionalEntropy=9044819256222594274)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--532961400704592695-9044819256222594274)
isFlowResumed: 
    false
    true


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.670Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.644Z
    2021-10-28T07:39:17.670Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.670Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.681Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.670Z
    2021-10-28T07:39:17.673Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-7643764469804632542, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.689Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.690Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.673Z
    2021-10-28T07:39:17.690Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
[WARN ] 2021-10-28T07:39:17,710Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[WARN ] 2021-10-28T07:39:17,713Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
[WARN ] 2021-10-28T07:39:17,722Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] errored, dumping all transitions:

 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.632Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Invocation, sessionId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=1EBDC9EC917A99CA23F2BE034163094E41E3032297EFE419FB952E79CF842DCB), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@49fcc62c])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@49fcc62c])
    SignalFlowHasStarted(flowId=[40df5342-da98-4e2a-a360-eb6f0d7f22fc])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@49fcc62c]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.633Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.629Z
    2021-10-28T07:39:17.633Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.634Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], sessionId=SessionId(toLong=-532961400704592695))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.633Z
    2021-10-28T07:39:17.634Z
checkpoint.checkpointState.sessions.SessionId(toLong=-532961400704592695): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-532961400704592695), additionalEntropy=9044819256222594274)


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.637Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.634Z
    2021-10-28T07:39:17.637Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.644Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Invocation, sessionId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-532961400704592695)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-532961400704592695), additionalEntropy=9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.637Z
    2021-10-28T07:39:17.642Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=1EBDC9EC917A99CA23F2BE034163094E41E3032297EFE419FB952E79CF842DCB)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.645Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-532961400704592695), initiationEntropy=9044819256222594274, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--532961400704592695-9044819256222594274-1-0), senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.642Z
    2021-10-28T07:39:17.644Z
checkpoint.checkpointState.sessions.SessionId(toLong=-532961400704592695): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-532961400704592695), additionalEntropy=9044819256222594274)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--532961400704592695-9044819256222594274)
isFlowResumed: 
    false
    true


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.670Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.644Z
    2021-10-28T07:39:17.670Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.670Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.681Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.670Z
    2021-10-28T07:39:17.673Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-7643764469804632542, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.689Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.690Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.673Z
    2021-10-28T07:39:17.690Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] ---
  Timestamp: 2021-10-28T07:39:17.716Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-7643764469804632542)], sessions=[], senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04)
    CreateTransaction
    RemoveCheckpoint(id=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=40df5342-da98-4e2a-a360-eb6f0d7f22fc)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-532961400704592695)])
    RemoveFlow(flowId=[40df5342-da98-4e2a-a360-eb6f0d7f22fc], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-7643764469804632542, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Invocation, sessionId=8adf1f74-2321-42a3-adfe-b831316b2ee5, timestamp: 2021-10-28T07:39:17.628Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=-532961400704592695)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--532961400704592695-9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@75223ff9, errorState=Errored(errors=[FlowError(errorId=-7643764469804632542, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Send, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@3c263f36, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@34a8a66[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-10-28T07:39:17.690Z
    2021-10-28T07:39:17.710Z
checkpoint.flowState: 
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=-532961400704592695))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=8C1291DC2D56F33958F1EAE8970B7D33AA54880DDC557CEA93A839062B7BA368)
    net.corda.node.services.statemachine.FlowState$Finished@75223ff9
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
[WARN ] 2021-10-28T07:39:17,722Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [40df5342-da98-4e2a-a360-eb6f0d7f22fc] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=40df5342-da98-4e2a-a360-eb6f0d7f22fc, invocation_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, invocation_timestamp=2021-10-28T07:39:17.628Z, origin=Only For Testing, session_id=8adf1f74-2321-42a3-adfe-b831316b2ee5, session_timestamp=2021-10-28T07:39:17.628Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlow
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:55) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 23 more
[INFO ] 2021-10-28T07:39:17,739Z [Mock network] corda.flow. - Flow raised an error: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler. Sending it to flow hospital to be triaged. {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
[INFO ] 2021-10-28T07:39:17,741Z [Mock network] statemachine.StaffedFlowHospital. - Flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Invocation, sessionId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=7018708388648723421)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-532961400704592695), deduplicationSeed=D--532961400704592695-9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), frozenFiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler@76fc1a1d, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@48b77b7e[Permits = 0]) {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
[INFO ] 2021-10-28T07:39:17,742Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[INFO ] 2021-10-28T07:39:17,744Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[WARN ] 2021-10-28T07:39:17,814Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] errored, dumping all transitions:

 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.732Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Invocation, sessionId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=EAF4C158CA54622C0F3E46E8931636313CFCF42EB889D1342F4E49C7F851A279), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ec43d30])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ec43d30])
    SignalFlowHasStarted(flowId=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d])
    SendExisting(peerParty=O=UK Mint, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-532961400704592695), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=7018708388648723421), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--532961400704592695-9044819256222594274-0-0), senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.727Z
    2021-10-28T07:39:17.728Z
checkpoint.checkpointState.sessions.SessionId(toLong=7018708388648723421): 
    null
    Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-532961400704592695), deduplicationSeed=D--532961400704592695-9044819256222594274)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ec43d30]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.734Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.728Z
    2021-10-28T07:39:17.734Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.738Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), maySkipCheckpoint=false, fiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Invocation, sessionId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=7018708388648723421)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-532961400704592695), deduplicationSeed=D--532961400704592695-9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), frozenFiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.734Z
    2021-10-28T07:39:17.736Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=EAF4C158CA54622C0F3E46E8931636313CFCF42EB889D1342F4E49C7F851A279)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), frozenFiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.738Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.736Z
    2021-10-28T07:39:17.738Z
checkpoint.checkpointState.sessions.SessionId(toLong=7018708388648723421).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.739Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.738Z
    2021-10-28T07:39:17.739Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.747Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2443700005153569957, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.747Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.747Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.739Z
    2021-10-28T07:39:17.747Z
checkpoint.errorState.propagating: 
    false
    true
 {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
[WARN ] 2021-10-28T07:39:17,814Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] error {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[WARN ] 2021-10-28T07:39:17,815Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
[WARN ] 2021-10-28T07:39:18,083Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] errored, dumping all transitions:

 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.732Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Invocation, sessionId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=EAF4C158CA54622C0F3E46E8931636313CFCF42EB889D1342F4E49C7F851A279), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ec43d30])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ec43d30])
    SignalFlowHasStarted(flowId=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d])
    SendExisting(peerParty=O=UK Mint, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-532961400704592695), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=7018708388648723421), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--532961400704592695-9044819256222594274-0-0), senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.727Z
    2021-10-28T07:39:17.728Z
checkpoint.checkpointState.sessions.SessionId(toLong=7018708388648723421): 
    null
    Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-532961400704592695), deduplicationSeed=D--532961400704592695-9044819256222594274)
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ec43d30]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.734Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.728Z
    2021-10-28T07:39:17.734Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.738Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), maySkipCheckpoint=false, fiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Invocation, sessionId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=7018708388648723421)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-532961400704592695), deduplicationSeed=D--532961400704592695-9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), frozenFiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.734Z
    2021-10-28T07:39:17.736Z
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=EAF4C158CA54622C0F3E46E8931636313CFCF42EB889D1342F4E49C7F851A279)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), frozenFiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.738Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.736Z
    2021-10-28T07:39:17.738Z
checkpoint.checkpointState.sessions.SessionId(toLong=7018708388648723421).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.739Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.738Z
    2021-10-28T07:39:17.739Z
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.747Z
  Event: Error(exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2443700005153569957, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.747Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:17.747Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:39:17.739Z
    2021-10-28T07:39:17.747Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] ---
  Timestamp: 2021-10-28T07:39:18.073Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=2443700005153569957)], sessions=[Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-532961400704592695), deduplicationSeed=D--532961400704592695-9044819256222594274)], senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04)
    CreateTransaction
    RemoveCheckpoint(id=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=7018708388648723421)])
    RemoveFlow(flowId=[7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2443700005153569957, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=UK Mint, L=London, C=GB), trace=Trace(invocationId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Invocation, sessionId=8808eecd-95f8-4b00-a404-d7e0f7622a1e, timestamp: 2021-10-28T07:39:17.726Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=7018708388648723421)=Initiated(peerParty=O=UK Mint, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-532961400704592695), deduplicationSeed=D--532961400704592695-9044819256222594274)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=3), flowState=net.corda.node.services.statemachine.FlowState$Finished@75223ff9, errorState=Errored(errors=[FlowError(errorId=2443700005153569957, exception=java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler@76fc1a1d, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=3c998d5b-e439-4b6e-8b04-ba0a61d74c04, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@48b77b7e[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-10-28T07:39:17.747Z
    2021-10-28T07:39:17.815Z
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=7018708388648723421))]), frozenFiber=FE59C736E817B77ED99C835CABC7D7B892D30151C99047452730F3BE5050CE66)
    net.corda.node.services.statemachine.FlowState$Finished@75223ff9
checkpoint.checkpointState.numberOfCommits: 
    2
    3
numberOfCommits: 
    2
    3
isRemoved: 
    false
    true
 {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
[WARN ] 2021-10-28T07:39:18,083Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d] error {fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
java.lang.NoClassDefFoundError: com/r3/corda/lib/ci/workflows/SyncKeyMappingFlowHandler
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:29) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemTokensFlowHandler.call(RedeemTokensFlowHandler.kt:22) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:39) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler.call(RedeemTokens.kt:36) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
Caused by: java.lang.ClassNotFoundException: com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_201]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_201]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_201]
	... 19 more
[INFO ] 2021-10-28T07:39:18,112Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=-532961400704592695). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
[INFO ] 2021-10-28T07:39:18,115Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=-532961400704592695). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000012, flow-id=7b2b2d3e-97e2-4e1b-bace-fb5fd345c38d, invocation_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, invocation_timestamp=2021-10-28T07:39:17.726Z, origin=O=UK Mint, L=London, C=GB, session_id=8808eecd-95f8-4b00-a404-d7e0f7622a1e, session_timestamp=2021-10-28T07:39:17.726Z, thread-id=206}
[INFO ] 2021-10-28T07:39:18,168Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:39:18,206Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:39:18,206Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:39:18,211Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:39:18,221Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:39:18,221Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:39:18,222Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:39:18,236Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:39:18,236Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:39:18,237Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:39:18,255Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:39:18,255Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:46:53,529Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:46:53,558Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:46:53,573Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:46:54,018Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:46:55,584Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:46:55,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:46:56,002Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:46:56,045Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:46:56,049Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh, alias: identity-private-key {}
[INFO ] 2021-10-28T07:46:56,197Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,198Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,198Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,198Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,199Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,199Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,199Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,200Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,200Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,200Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,200Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,201Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:46:56,202Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,257Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:46:56,368Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:46:43.198Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:47:03,993Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:47:04,106Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:47:04,114Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:47:07,500Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:47:07,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:47:07,802Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793), owningKey=DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh {}
[INFO ] 2021-10-28T07:47:07,802Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:47:07,972Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793) {}
[INFO ] 2021-10-28T07:47:08,033Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:47:08,073Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:47:08,083Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:47:08,108Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793), owningKey=DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh {}
[INFO ] 2021-10-28T07:47:08,108Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:08,253Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:47:08,274Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:47:08,286Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:47:08,377Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:47:08,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:47:08,465Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:47:09,144Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793) {}
[INFO ] 2021-10-28T07:47:09,157Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793), owningKey=DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh {}
[INFO ] 2021-10-28T07:47:09,157Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:09,157Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793), owningKey=DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh {}
[INFO ] 2021-10-28T07:47:09,157Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:09,176Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:47:09,177Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:47:09,177Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:47:09,215Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:47:09,284Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:47:09,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:47:09,286Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:47:09,331Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:47:09,331Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5, alias: identity-private-key {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,339Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:47:09,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,340Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:47:09,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:46:43.198Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:47:10,060Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:47:10,062Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:10,062Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:10,249Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:10,256Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:47:10,263Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256), owningKey=DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5 {}
[INFO ] 2021-10-28T07:47:10,263Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:10,273Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256) {}
[INFO ] 2021-10-28T07:47:10,280Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:47:10,281Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:47:10,281Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:47:10,289Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256), owningKey=DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5 {}
[INFO ] 2021-10-28T07:47:10,289Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:10,336Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:47:10,340Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:47:10,340Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:47:10,341Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:47:10,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:47:10,372Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256) {}
[INFO ] 2021-10-28T07:47:10,374Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793), owningKey=DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh {}
[INFO ] 2021-10-28T07:47:10,374Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:47:10,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256), owningKey=DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5 {}
[INFO ] 2021-10-28T07:47:10,397Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:10,409Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256), owningKey=DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5 {}
[INFO ] 2021-10-28T07:47:10,409Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:10,409Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256), owningKey=DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5 {}
[INFO ] 2021-10-28T07:47:10,409Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:10,422Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:47:10,423Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:47:10,423Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:47:10,431Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:47:10,473Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:47:10,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:47:10,475Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:47:10,514Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:47:10,514Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3, alias: identity-private-key {}
[INFO ] 2021-10-28T07:47:10,521Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,521Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,522Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:47:10,531Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:46:43.198Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:47:11,178Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:47:11,180Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:11,180Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:11,331Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:11,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:47:11,340Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336), owningKey=DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3 {}
[INFO ] 2021-10-28T07:47:11,340Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:11,349Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336) {}
[INFO ] 2021-10-28T07:47:11,357Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:47:11,358Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:47:11,358Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:47:11,365Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336), owningKey=DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3 {}
[INFO ] 2021-10-28T07:47:11,365Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:11,403Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:47:11,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:47:11,405Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:47:11,406Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:47:11,412Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:47:11,455Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336) {}
[INFO ] 2021-10-28T07:47:11,458Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793), owningKey=DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh {}
[INFO ] 2021-10-28T07:47:11,458Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:47:11,477Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336), owningKey=DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3 {}
[INFO ] 2021-10-28T07:47:11,477Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:11,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256), owningKey=DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5 {}
[INFO ] 2021-10-28T07:47:11,491Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:11,503Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336), owningKey=DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3 {}
[INFO ] 2021-10-28T07:47:11,504Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:11,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336), owningKey=DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3 {}
[INFO ] 2021-10-28T07:47:11,514Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:11,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336), owningKey=DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3 {}
[INFO ] 2021-10-28T07:47:11,514Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:11,527Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:47:11,527Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:47:11,527Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:47:11,537Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:47:11,576Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:47:11,578Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:47:11,579Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:47:11,623Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:47:11,623Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6, alias: identity-private-key {}
[INFO ] 2021-10-28T07:47:11,629Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,629Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,629Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,629Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,630Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:47:11,631Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,631Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:47:11,634Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:46:43.198Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:47:12,199Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:47:12,202Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:12,202Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:12,367Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:47:12,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:47:12,377Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372), owningKey=DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6 {}
[INFO ] 2021-10-28T07:47:12,377Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:12,387Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372) {}
[INFO ] 2021-10-28T07:47:12,393Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:47:12,396Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:47:12,396Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:47:12,401Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372), owningKey=DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6 {}
[INFO ] 2021-10-28T07:47:12,401Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:12,444Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:47:12,446Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:47:12,447Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074645.715-2A5CAEBAD5994A96/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:47:12,447Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:47:12,453Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:47:12,475Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372) {}
[INFO ] 2021-10-28T07:47:12,480Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407227793), owningKey=DLCBqxYGvh6bEkHSZXeCFPMKGMsj3qgfymvSpHD42LZ8kh {}
[INFO ] 2021-10-28T07:47:12,480Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:47:12,492Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372), owningKey=DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6 {}
[INFO ] 2021-10-28T07:47:12,492Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:12,503Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407230256), owningKey=DL3eoDpcWkAwUxsu42GRVusSv2YyQuXbevYjgehdMjL7M5 {}
[INFO ] 2021-10-28T07:47:12,503Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:12,518Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372), owningKey=DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6 {}
[INFO ] 2021-10-28T07:47:12,518Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:12,529Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407231336), owningKey=DLHdg7k473X9gzqDwPcerEKJ8BCvCsTgecd7DXaMKhx2E3 {}
[INFO ] 2021-10-28T07:47:12,529Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:12,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372), owningKey=DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6 {}
[INFO ] 2021-10-28T07:47:12,538Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:47:12,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372), owningKey=DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6 {}
[INFO ] 2021-10-28T07:47:12,546Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:12,547Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407232372), owningKey=DL2PjBwJQ6phZwmACLxiXfCnJGMasrVMmdrBBDEoCrKak6 {}
[INFO ] 2021-10-28T07:47:12,547Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:47:13,575Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b261c71f-22cb-42d9-a6c4-58cf77d3238b, invocation_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, invocation_timestamp=2021-10-28T07:47:12.583Z, origin=Only For Testing, session_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, session_timestamp=2021-10-28T07:47:12.583Z, thread-id=206, tx_id=74CC79D43E168AF7C39B1B3C853AEA741DE3CE5BA2C348208844C60EE1F6EE30}
[INFO ] 2021-10-28T07:47:13,575Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b261c71f-22cb-42d9-a6c4-58cf77d3238b, invocation_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, invocation_timestamp=2021-10-28T07:47:12.583Z, origin=Only For Testing, session_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, session_timestamp=2021-10-28T07:47:12.583Z, thread-id=206, tx_id=74CC79D43E168AF7C39B1B3C853AEA741DE3CE5BA2C348208844C60EE1F6EE30}
[INFO ] 2021-10-28T07:47:13,701Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b261c71f-22cb-42d9-a6c4-58cf77d3238b, invocation_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, invocation_timestamp=2021-10-28T07:47:12.583Z, origin=Only For Testing, session_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, session_timestamp=2021-10-28T07:47:12.583Z, thread-id=206, tx_id=74CC79D43E168AF7C39B1B3C853AEA741DE3CE5BA2C348208844C60EE1F6EE30}
[INFO ] 2021-10-28T07:47:13,701Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b261c71f-22cb-42d9-a6c4-58cf77d3238b, invocation_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, invocation_timestamp=2021-10-28T07:47:12.583Z, origin=Only For Testing, session_id=486031a9-5416-4a3d-bc13-43e1b2acbf17, session_timestamp=2021-10-28T07:47:12.583Z, thread-id=206, tx_id=74CC79D43E168AF7C39B1B3C853AEA741DE3CE5BA2C348208844C60EE1F6EE30}
[INFO ] 2021-10-28T07:47:14,118Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=cad3c669-fa33-4eee-846e-fe098c3b3c8c, invocation_id=8578843d-c43e-472b-b507-29e927020972, invocation_timestamp=2021-10-28T07:47:13.798Z, origin=Only For Testing, session_id=8578843d-c43e-472b-b507-29e927020972, session_timestamp=2021-10-28T07:47:13.798Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:14,212Z [Mock network] corda.flow. - Received a notarisation request for Tx [D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=95df0bc4-0be6-4ce5-ad08-78e0847ad68d, invocation_id=9e256594-a832-4ded-b158-c1d8c7fbc81f, invocation_timestamp=2021-10-28T07:47:14.180Z, origin=O=UK Mint, L=London, C=GB, session_id=9e256594-a832-4ded-b158-c1d8c7fbc81f, session_timestamp=2021-10-28T07:47:14.180Z, thread-id=206}
[INFO ] 2021-10-28T07:47:14,594Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:47:14,613Z [Mock network] corda.flow. - Transaction [D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=95df0bc4-0be6-4ce5-ad08-78e0847ad68d, invocation_id=9e256594-a832-4ded-b158-c1d8c7fbc81f, invocation_timestamp=2021-10-28T07:47:14.180Z, origin=O=UK Mint, L=London, C=GB, session_id=9e256594-a832-4ded-b158-c1d8c7fbc81f, session_timestamp=2021-10-28T07:47:14.180Z, thread-id=206}
[INFO ] 2021-10-28T07:47:14,648Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=cad3c669-fa33-4eee-846e-fe098c3b3c8c, invocation_id=8578843d-c43e-472b-b507-29e927020972, invocation_timestamp=2021-10-28T07:47:13.798Z, origin=Only For Testing, session_id=8578843d-c43e-472b-b507-29e927020972, session_timestamp=2021-10-28T07:47:13.798Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:14,650Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=cad3c669-fa33-4eee-846e-fe098c3b3c8c, invocation_id=8578843d-c43e-472b-b507-29e927020972, invocation_timestamp=2021-10-28T07:47:13.798Z, origin=Only For Testing, session_id=8578843d-c43e-472b-b507-29e927020972, session_timestamp=2021-10-28T07:47:13.798Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:14,667Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=cad3c669-fa33-4eee-846e-fe098c3b3c8c, invocation_id=8578843d-c43e-472b-b507-29e927020972, invocation_timestamp=2021-10-28T07:47:13.798Z, origin=Only For Testing, session_id=8578843d-c43e-472b-b507-29e927020972, session_timestamp=2021-10-28T07:47:13.798Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:14,699Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=06a40a27-01a3-4152-9b3a-5c280d8bb3eb, invocation_id=1d189722-d649-421c-b232-e2792d45febb, invocation_timestamp=2021-10-28T07:47:14.296Z, origin=O=UK Mint, L=London, C=GB, session_id=1d189722-d649-421c-b232-e2792d45febb, session_timestamp=2021-10-28T07:47:14.296Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:14,979Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=06a40a27-01a3-4152-9b3a-5c280d8bb3eb, invocation_id=1d189722-d649-421c-b232-e2792d45febb, invocation_timestamp=2021-10-28T07:47:14.296Z, origin=O=UK Mint, L=London, C=GB, session_id=1d189722-d649-421c-b232-e2792d45febb, session_timestamp=2021-10-28T07:47:14.296Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:14,998Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=06a40a27-01a3-4152-9b3a-5c280d8bb3eb, invocation_id=1d189722-d649-421c-b232-e2792d45febb, invocation_timestamp=2021-10-28T07:47:14.296Z, origin=O=UK Mint, L=London, C=GB, session_id=1d189722-d649-421c-b232-e2792d45febb, session_timestamp=2021-10-28T07:47:14.296Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:15,036Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=06a40a27-01a3-4152-9b3a-5c280d8bb3eb, invocation_id=1d189722-d649-421c-b232-e2792d45febb, invocation_timestamp=2021-10-28T07:47:14.296Z, origin=O=UK Mint, L=London, C=GB, session_id=1d189722-d649-421c-b232-e2792d45febb, session_timestamp=2021-10-28T07:47:14.296Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:15,052Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=cad3c669-fa33-4eee-846e-fe098c3b3c8c, invocation_id=8578843d-c43e-472b-b507-29e927020972, invocation_timestamp=2021-10-28T07:47:13.798Z, origin=Only For Testing, session_id=8578843d-c43e-472b-b507-29e927020972, session_timestamp=2021-10-28T07:47:13.798Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:15,052Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=cad3c669-fa33-4eee-846e-fe098c3b3c8c, invocation_id=8578843d-c43e-472b-b507-29e927020972, invocation_timestamp=2021-10-28T07:47:13.798Z, origin=Only For Testing, session_id=8578843d-c43e-472b-b507-29e927020972, session_timestamp=2021-10-28T07:47:13.798Z, thread-id=206, tx_id=D61F51BB4BF91C0E9174CE6417980E7DBB6B5231722D5CC19A05FCD78D683C09}
[INFO ] 2021-10-28T07:47:15,162Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=1dadc7e2-9d33-423e-ad62-60ddafa848e6, invocation_id=253af7d8-69e9-41b2-beed-5158f13f75e6, invocation_timestamp=2021-10-28T07:47:15.063Z, origin=Only For Testing, session_id=253af7d8-69e9-41b2-beed-5158f13f75e6, session_timestamp=2021-10-28T07:47:15.063Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:15,200Z [Mock network] corda.flow. - Received a notarisation request for Tx [FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=2952e923-04bc-45a0-978a-45cfad476111, invocation_id=5df0a138-8e2f-45d9-88df-497ef5284570, invocation_timestamp=2021-10-28T07:47:15.177Z, origin=O=Abbey, L=London, C=GB, session_id=5df0a138-8e2f-45d9-88df-497ef5284570, session_timestamp=2021-10-28T07:47:15.177Z, thread-id=206}
[INFO ] 2021-10-28T07:47:15,837Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:47:15,842Z [Mock network] corda.flow. - Transaction [FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=2952e923-04bc-45a0-978a-45cfad476111, invocation_id=5df0a138-8e2f-45d9-88df-497ef5284570, invocation_timestamp=2021-10-28T07:47:15.177Z, origin=O=Abbey, L=London, C=GB, session_id=5df0a138-8e2f-45d9-88df-497ef5284570, session_timestamp=2021-10-28T07:47:15.177Z, thread-id=206}
[INFO ] 2021-10-28T07:47:15,903Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=1dadc7e2-9d33-423e-ad62-60ddafa848e6, invocation_id=253af7d8-69e9-41b2-beed-5158f13f75e6, invocation_timestamp=2021-10-28T07:47:15.063Z, origin=Only For Testing, session_id=253af7d8-69e9-41b2-beed-5158f13f75e6, session_timestamp=2021-10-28T07:47:15.063Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:15,905Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=1dadc7e2-9d33-423e-ad62-60ddafa848e6, invocation_id=253af7d8-69e9-41b2-beed-5158f13f75e6, invocation_timestamp=2021-10-28T07:47:15.063Z, origin=Only For Testing, session_id=253af7d8-69e9-41b2-beed-5158f13f75e6, session_timestamp=2021-10-28T07:47:15.063Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:15,919Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=1dadc7e2-9d33-423e-ad62-60ddafa848e6, invocation_id=253af7d8-69e9-41b2-beed-5158f13f75e6, invocation_timestamp=2021-10-28T07:47:15.063Z, origin=Only For Testing, session_id=253af7d8-69e9-41b2-beed-5158f13f75e6, session_timestamp=2021-10-28T07:47:15.063Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:15,946Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=192be099-f2fe-43fc-bb5e-bb26a53cff8e, invocation_id=e7832f6f-2c27-49bd-a044-86ba253fc363, invocation_timestamp=2021-10-28T07:47:15.540Z, origin=O=Abbey, L=London, C=GB, session_id=e7832f6f-2c27-49bd-a044-86ba253fc363, session_timestamp=2021-10-28T07:47:15.540Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:16,336Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=192be099-f2fe-43fc-bb5e-bb26a53cff8e, invocation_id=e7832f6f-2c27-49bd-a044-86ba253fc363, invocation_timestamp=2021-10-28T07:47:15.540Z, origin=O=Abbey, L=London, C=GB, session_id=e7832f6f-2c27-49bd-a044-86ba253fc363, session_timestamp=2021-10-28T07:47:15.540Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:16,347Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=192be099-f2fe-43fc-bb5e-bb26a53cff8e, invocation_id=e7832f6f-2c27-49bd-a044-86ba253fc363, invocation_timestamp=2021-10-28T07:47:15.540Z, origin=O=Abbey, L=London, C=GB, session_id=e7832f6f-2c27-49bd-a044-86ba253fc363, session_timestamp=2021-10-28T07:47:15.540Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:16,366Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=192be099-f2fe-43fc-bb5e-bb26a53cff8e, invocation_id=e7832f6f-2c27-49bd-a044-86ba253fc363, invocation_timestamp=2021-10-28T07:47:15.540Z, origin=O=Abbey, L=London, C=GB, session_id=e7832f6f-2c27-49bd-a044-86ba253fc363, session_timestamp=2021-10-28T07:47:15.540Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:16,382Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=1dadc7e2-9d33-423e-ad62-60ddafa848e6, invocation_id=253af7d8-69e9-41b2-beed-5158f13f75e6, invocation_timestamp=2021-10-28T07:47:15.063Z, origin=Only For Testing, session_id=253af7d8-69e9-41b2-beed-5158f13f75e6, session_timestamp=2021-10-28T07:47:15.063Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:16,384Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=1dadc7e2-9d33-423e-ad62-60ddafa848e6, invocation_id=253af7d8-69e9-41b2-beed-5158f13f75e6, invocation_timestamp=2021-10-28T07:47:15.063Z, origin=Only For Testing, session_id=253af7d8-69e9-41b2-beed-5158f13f75e6, session_timestamp=2021-10-28T07:47:15.063Z, thread-id=206, tx_id=FF811459EFFC8CFA3045FD3DD47DCDC5A3F9C5A4519B465B10FA933DA206936F}
[INFO ] 2021-10-28T07:47:16,589Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9f62b6c0-a67d-4289-8090-9a62d496c523, invocation_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, invocation_timestamp=2021-10-28T07:47:16.504Z, origin=Only For Testing, session_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, session_timestamp=2021-10-28T07:47:16.504Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:16,621Z [Mock network] corda.flow. - Received a notarisation request for Tx [C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=ee4c56cf-5c81-4e79-8168-40146afddfa7, invocation_id=b863e9e5-6e26-44d9-9b52-d46d8efc32b6, invocation_timestamp=2021-10-28T07:47:16.605Z, origin=O=HSBC, L=London, C=GB, session_id=b863e9e5-6e26-44d9-9b52-d46d8efc32b6, session_timestamp=2021-10-28T07:47:16.605Z, thread-id=206}
[INFO ] 2021-10-28T07:47:16,855Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:47:16,859Z [Mock network] corda.flow. - Transaction [C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=ee4c56cf-5c81-4e79-8168-40146afddfa7, invocation_id=b863e9e5-6e26-44d9-9b52-d46d8efc32b6, invocation_timestamp=2021-10-28T07:47:16.605Z, origin=O=HSBC, L=London, C=GB, session_id=b863e9e5-6e26-44d9-9b52-d46d8efc32b6, session_timestamp=2021-10-28T07:47:16.605Z, thread-id=206}
[INFO ] 2021-10-28T07:47:16,928Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9f62b6c0-a67d-4289-8090-9a62d496c523, invocation_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, invocation_timestamp=2021-10-28T07:47:16.504Z, origin=Only For Testing, session_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, session_timestamp=2021-10-28T07:47:16.504Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:16,930Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9f62b6c0-a67d-4289-8090-9a62d496c523, invocation_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, invocation_timestamp=2021-10-28T07:47:16.504Z, origin=Only For Testing, session_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, session_timestamp=2021-10-28T07:47:16.504Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:16,939Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9f62b6c0-a67d-4289-8090-9a62d496c523, invocation_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, invocation_timestamp=2021-10-28T07:47:16.504Z, origin=Only For Testing, session_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, session_timestamp=2021-10-28T07:47:16.504Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:16,962Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=f5ef4d97-2f80-4577-9bce-2c37245464fd, invocation_id=d57e7210-424d-480a-832a-046bae083ba1, invocation_timestamp=2021-10-28T07:47:16.631Z, origin=O=HSBC, L=London, C=GB, session_id=d57e7210-424d-480a-832a-046bae083ba1, session_timestamp=2021-10-28T07:47:16.631Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:16,974Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=f5ef4d97-2f80-4577-9bce-2c37245464fd, invocation_id=d57e7210-424d-480a-832a-046bae083ba1, invocation_timestamp=2021-10-28T07:47:16.631Z, origin=O=HSBC, L=London, C=GB, session_id=d57e7210-424d-480a-832a-046bae083ba1, session_timestamp=2021-10-28T07:47:16.631Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:16,982Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=f5ef4d97-2f80-4577-9bce-2c37245464fd, invocation_id=d57e7210-424d-480a-832a-046bae083ba1, invocation_timestamp=2021-10-28T07:47:16.631Z, origin=O=HSBC, L=London, C=GB, session_id=d57e7210-424d-480a-832a-046bae083ba1, session_timestamp=2021-10-28T07:47:16.631Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:16,992Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=f5ef4d97-2f80-4577-9bce-2c37245464fd, invocation_id=d57e7210-424d-480a-832a-046bae083ba1, invocation_timestamp=2021-10-28T07:47:16.631Z, origin=O=HSBC, L=London, C=GB, session_id=d57e7210-424d-480a-832a-046bae083ba1, session_timestamp=2021-10-28T07:47:16.631Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:17,016Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9f62b6c0-a67d-4289-8090-9a62d496c523, invocation_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, invocation_timestamp=2021-10-28T07:47:16.504Z, origin=Only For Testing, session_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, session_timestamp=2021-10-28T07:47:16.504Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:17,016Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=9f62b6c0-a67d-4289-8090-9a62d496c523, invocation_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, invocation_timestamp=2021-10-28T07:47:16.504Z, origin=Only For Testing, session_id=f4a91f5c-6679-4757-bc5f-a38ae40b003d, session_timestamp=2021-10-28T07:47:16.504Z, thread-id=206, tx_id=C7646BF22ABB12CCB4F11FF4DCE932E62CDADEE6E0C928208B89159A4D9B5B1E}
[INFO ] 2021-10-28T07:47:17,408Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f80c287d-1221-46a6-9336-4852b9e5df6a, invocation_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, invocation_timestamp=2021-10-28T07:47:17.039Z, origin=Only For Testing, session_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, session_timestamp=2021-10-28T07:47:17.039Z, thread-id=206, tx_id=6A88A4DF00348CCFFA6DF3339C3C2CF7B6A34D199A287434B0A0C466A04C56D9}
[INFO ] 2021-10-28T07:47:17,438Z [Mock network] corda.flow. - Received a notarisation request for Tx [6A88A4DF00348CCFFA6DF3339C3C2CF7B6A34D199A287434B0A0C466A04C56D9] from [O=UK Mint, L=London, C=GB] {fiber-id=10000013, flow-id=942472d9-1196-4c61-a845-52db63f9ec85, invocation_id=4fd83be0-ced1-45a7-9f59-c52e822241df, invocation_timestamp=2021-10-28T07:47:17.426Z, origin=O=UK Mint, L=London, C=GB, session_id=4fd83be0-ced1-45a7-9f59-c52e822241df, session_timestamp=2021-10-28T07:47:17.426Z, thread-id=206}
[INFO ] 2021-10-28T07:47:17,465Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:47:17,469Z [Mock network] corda.flow. - Transaction [6A88A4DF00348CCFFA6DF3339C3C2CF7B6A34D199A287434B0A0C466A04C56D9] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000013, flow-id=942472d9-1196-4c61-a845-52db63f9ec85, invocation_id=4fd83be0-ced1-45a7-9f59-c52e822241df, invocation_timestamp=2021-10-28T07:47:17.426Z, origin=O=UK Mint, L=London, C=GB, session_id=4fd83be0-ced1-45a7-9f59-c52e822241df, session_timestamp=2021-10-28T07:47:17.426Z, thread-id=206}
[INFO ] 2021-10-28T07:47:17,498Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f80c287d-1221-46a6-9336-4852b9e5df6a, invocation_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, invocation_timestamp=2021-10-28T07:47:17.039Z, origin=Only For Testing, session_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, session_timestamp=2021-10-28T07:47:17.039Z, thread-id=206, tx_id=6A88A4DF00348CCFFA6DF3339C3C2CF7B6A34D199A287434B0A0C466A04C56D9}
[INFO ] 2021-10-28T07:47:17,499Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f80c287d-1221-46a6-9336-4852b9e5df6a, invocation_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, invocation_timestamp=2021-10-28T07:47:17.039Z, origin=Only For Testing, session_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, session_timestamp=2021-10-28T07:47:17.039Z, thread-id=206, tx_id=6A88A4DF00348CCFFA6DF3339C3C2CF7B6A34D199A287434B0A0C466A04C56D9}
[INFO ] 2021-10-28T07:47:17,563Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f80c287d-1221-46a6-9336-4852b9e5df6a, invocation_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, invocation_timestamp=2021-10-28T07:47:17.039Z, origin=Only For Testing, session_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, session_timestamp=2021-10-28T07:47:17.039Z, thread-id=206, tx_id=6A88A4DF00348CCFFA6DF3339C3C2CF7B6A34D199A287434B0A0C466A04C56D9}
[INFO ] 2021-10-28T07:47:17,563Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f80c287d-1221-46a6-9336-4852b9e5df6a, invocation_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, invocation_timestamp=2021-10-28T07:47:17.039Z, origin=Only For Testing, session_id=97b7243b-b5f5-40cd-afc3-2d081b7caf31, session_timestamp=2021-10-28T07:47:17.039Z, thread-id=206, tx_id=6A88A4DF00348CCFFA6DF3339C3C2CF7B6A34D199A287434B0A0C466A04C56D9}
[INFO ] 2021-10-28T07:47:17,646Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:47:17,682Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:47:17,682Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:47:17,701Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:47:17,718Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:47:17,718Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:47:17,720Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:47:17,736Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:47:17,736Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:47:17,738Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:47:17,755Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:47:17,755Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:49:51,739Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:49:51,768Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:49:51,780Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:49:52,228Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:49:53,773Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:49:54,090Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:49:54,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:49:54,190Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:49:54,195Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj, alias: identity-private-key {}
[INFO ] 2021-10-28T07:49:54,343Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,343Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,343Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,344Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,345Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,346Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,347Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,348Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,349Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:49:54,350Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,406Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:49:54,517Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:49:41.587Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:50:01,919Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:50:02,011Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:50:02,016Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:50:05,310Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:50:05,631Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:50:05,640Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631), owningKey=DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj {}
[INFO ] 2021-10-28T07:50:05,640Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:50:05,810Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631) {}
[INFO ] 2021-10-28T07:50:05,878Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:50:05,916Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:50:05,918Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:50:05,954Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631), owningKey=DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj {}
[INFO ] 2021-10-28T07:50:05,954Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:06,115Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:50:06,134Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:50:06,147Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:50:06,253Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:50:06,368Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:50:06,369Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:50:07,096Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631) {}
[INFO ] 2021-10-28T07:50:07,111Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631), owningKey=DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj {}
[INFO ] 2021-10-28T07:50:07,113Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:07,116Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631), owningKey=DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj {}
[INFO ] 2021-10-28T07:50:07,118Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:07,140Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:50:07,161Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:50:07,167Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:50:07,190Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:50:07,262Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:50:07,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:50:07,265Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:50:07,312Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:50:07,312Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP, alias: identity-private-key {}
[INFO ] 2021-10-28T07:50:07,319Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,319Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,319Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,319Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,320Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:50:07,326Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:49:41.587Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:50:08,054Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:50:08,058Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:08,058Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:08,260Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:08,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:50:08,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267), owningKey=DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP {}
[INFO ] 2021-10-28T07:50:08,273Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:08,284Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267) {}
[INFO ] 2021-10-28T07:50:08,291Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:50:08,292Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:50:08,292Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:50:08,300Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267), owningKey=DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP {}
[INFO ] 2021-10-28T07:50:08,300Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:08,346Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:50:08,350Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:50:08,350Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:50:08,350Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:50:08,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:50:08,389Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267) {}
[INFO ] 2021-10-28T07:50:08,393Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631), owningKey=DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj {}
[INFO ] 2021-10-28T07:50:08,393Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:50:08,421Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267), owningKey=DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP {}
[INFO ] 2021-10-28T07:50:08,421Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:08,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267), owningKey=DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP {}
[INFO ] 2021-10-28T07:50:08,442Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:08,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267), owningKey=DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP {}
[INFO ] 2021-10-28T07:50:08,442Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:08,461Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:50:08,461Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:50:08,464Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:50:08,474Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:50:08,528Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:50:08,531Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:50:08,532Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:50:08,577Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:50:08,578Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193, alias: identity-private-key {}
[INFO ] 2021-10-28T07:50:08,591Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,591Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,591Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,593Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,593Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:50:08,595Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,595Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:50:08,610Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:49:41.587Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:50:09,313Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:50:09,316Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:09,316Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:09,523Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:09,531Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:50:09,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531), owningKey=DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193 {}
[INFO ] 2021-10-28T07:50:09,538Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:09,550Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531) {}
[INFO ] 2021-10-28T07:50:09,571Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:50:09,572Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:50:09,572Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:50:09,579Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531), owningKey=DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193 {}
[INFO ] 2021-10-28T07:50:09,579Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:09,622Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:50:09,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:50:09,626Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:50:09,626Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:50:09,636Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:50:09,661Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531) {}
[INFO ] 2021-10-28T07:50:09,663Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631), owningKey=DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj {}
[INFO ] 2021-10-28T07:50:09,663Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:50:09,675Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531), owningKey=DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193 {}
[INFO ] 2021-10-28T07:50:09,675Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:09,687Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267), owningKey=DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP {}
[INFO ] 2021-10-28T07:50:09,687Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:09,705Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531), owningKey=DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193 {}
[INFO ] 2021-10-28T07:50:09,705Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:09,719Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531), owningKey=DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193 {}
[INFO ] 2021-10-28T07:50:09,719Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:09,720Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531), owningKey=DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193 {}
[INFO ] 2021-10-28T07:50:09,720Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:09,734Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:50:09,734Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:50:09,734Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:50:09,744Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:50:09,786Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:50:09,787Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:50:09,788Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:50:09,826Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:50:09,827Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6, alias: identity-private-key {}
[INFO ] 2021-10-28T07:50:09,832Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,832Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,832Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,832Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,832Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,832Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,833Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:50:09,836Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:49:41.587Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:50:10,481Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:50:10,483Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:10,483Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:10,657Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:50:10,663Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:50:10,667Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663), owningKey=DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6 {}
[INFO ] 2021-10-28T07:50:10,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:10,675Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663) {}
[INFO ] 2021-10-28T07:50:10,688Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:50:10,689Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:50:10,689Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:50:10,697Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663), owningKey=DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6 {}
[INFO ] 2021-10-28T07:50:10,697Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:10,762Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:50:10,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:50:10,767Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-074944.129-2FF45EF10A152D31/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:50:10,767Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:50:10,785Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:50:10,815Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663) {}
[INFO ] 2021-10-28T07:50:10,820Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407405631), owningKey=DL3EgdH4Dpg6k5yZHaw78USuYXrcjeCHzA5ormNNtRjphj {}
[INFO ] 2021-10-28T07:50:10,820Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:50:10,835Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663), owningKey=DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6 {}
[INFO ] 2021-10-28T07:50:10,835Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:10,851Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407408267), owningKey=DL5WDys7gi6d3KYUoRVtxaKL8w5QAsFKiQQD8Wx8XTzhrP {}
[INFO ] 2021-10-28T07:50:10,853Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:10,864Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663), owningKey=DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6 {}
[INFO ] 2021-10-28T07:50:10,864Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:10,883Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407409531), owningKey=DLD8DaWNG7yjSDSY8T6Fiqpt2jGHNY7de7KKcrBJKCm193 {}
[INFO ] 2021-10-28T07:50:10,883Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:10,896Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663), owningKey=DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6 {}
[INFO ] 2021-10-28T07:50:10,896Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:50:10,911Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663), owningKey=DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6 {}
[INFO ] 2021-10-28T07:50:10,911Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:10,911Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407410663), owningKey=DLDVSPpw2EEY1Hdazqd5z8eDmjQpw5XyuKzDJizbEFkyQ6 {}
[INFO ] 2021-10-28T07:50:10,911Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:50:12,169Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8e8dd67-d0a8-49f6-8910-4bd0e7bcc22f, invocation_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, invocation_timestamp=2021-10-28T07:50:10.959Z, origin=Only For Testing, session_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, session_timestamp=2021-10-28T07:50:10.959Z, thread-id=205, tx_id=2CA29DB0A535C17944941B9E3952DD916BE6CA7CE59EF3B987A07937EA525DAF}
[INFO ] 2021-10-28T07:50:12,169Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8e8dd67-d0a8-49f6-8910-4bd0e7bcc22f, invocation_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, invocation_timestamp=2021-10-28T07:50:10.959Z, origin=Only For Testing, session_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, session_timestamp=2021-10-28T07:50:10.959Z, thread-id=205, tx_id=2CA29DB0A535C17944941B9E3952DD916BE6CA7CE59EF3B987A07937EA525DAF}
[INFO ] 2021-10-28T07:50:12,326Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8e8dd67-d0a8-49f6-8910-4bd0e7bcc22f, invocation_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, invocation_timestamp=2021-10-28T07:50:10.959Z, origin=Only For Testing, session_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, session_timestamp=2021-10-28T07:50:10.959Z, thread-id=205, tx_id=2CA29DB0A535C17944941B9E3952DD916BE6CA7CE59EF3B987A07937EA525DAF}
[INFO ] 2021-10-28T07:50:12,326Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8e8dd67-d0a8-49f6-8910-4bd0e7bcc22f, invocation_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, invocation_timestamp=2021-10-28T07:50:10.959Z, origin=Only For Testing, session_id=deac7fe3-8909-40d8-a7a2-af59c44ffce7, session_timestamp=2021-10-28T07:50:10.959Z, thread-id=205, tx_id=2CA29DB0A535C17944941B9E3952DD916BE6CA7CE59EF3B987A07937EA525DAF}
[INFO ] 2021-10-28T07:50:12,768Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=1bc08595-7acf-4764-bc83-73fac4ec4b44, invocation_id=7464a4d5-517b-4402-b005-20c425794fb3, invocation_timestamp=2021-10-28T07:50:12.448Z, origin=Only For Testing, session_id=7464a4d5-517b-4402-b005-20c425794fb3, session_timestamp=2021-10-28T07:50:12.448Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:12,883Z [Mock network] corda.flow. - Received a notarisation request for Tx [70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=de4580d4-cc2e-4d06-a9de-5115b1e40374, invocation_id=55878d08-7352-4f64-9976-463619f23fe1, invocation_timestamp=2021-10-28T07:50:12.845Z, origin=O=UK Mint, L=London, C=GB, session_id=55878d08-7352-4f64-9976-463619f23fe1, session_timestamp=2021-10-28T07:50:12.845Z, thread-id=205}
[INFO ] 2021-10-28T07:50:13,546Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:50:13,575Z [Mock network] corda.flow. - Transaction [70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=de4580d4-cc2e-4d06-a9de-5115b1e40374, invocation_id=55878d08-7352-4f64-9976-463619f23fe1, invocation_timestamp=2021-10-28T07:50:12.845Z, origin=O=UK Mint, L=London, C=GB, session_id=55878d08-7352-4f64-9976-463619f23fe1, session_timestamp=2021-10-28T07:50:12.845Z, thread-id=205}
[INFO ] 2021-10-28T07:50:13,657Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=1bc08595-7acf-4764-bc83-73fac4ec4b44, invocation_id=7464a4d5-517b-4402-b005-20c425794fb3, invocation_timestamp=2021-10-28T07:50:12.448Z, origin=Only For Testing, session_id=7464a4d5-517b-4402-b005-20c425794fb3, session_timestamp=2021-10-28T07:50:12.448Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,661Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=1bc08595-7acf-4764-bc83-73fac4ec4b44, invocation_id=7464a4d5-517b-4402-b005-20c425794fb3, invocation_timestamp=2021-10-28T07:50:12.448Z, origin=Only For Testing, session_id=7464a4d5-517b-4402-b005-20c425794fb3, session_timestamp=2021-10-28T07:50:12.448Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,677Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=1bc08595-7acf-4764-bc83-73fac4ec4b44, invocation_id=7464a4d5-517b-4402-b005-20c425794fb3, invocation_timestamp=2021-10-28T07:50:12.448Z, origin=Only For Testing, session_id=7464a4d5-517b-4402-b005-20c425794fb3, session_timestamp=2021-10-28T07:50:12.448Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,721Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=ca523601-b827-476a-922d-9a54673c0de7, invocation_id=615976d6-02ca-486f-92d8-10c443ffea6b, invocation_timestamp=2021-10-28T07:50:12.976Z, origin=O=UK Mint, L=London, C=GB, session_id=615976d6-02ca-486f-92d8-10c443ffea6b, session_timestamp=2021-10-28T07:50:12.976Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,928Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=ca523601-b827-476a-922d-9a54673c0de7, invocation_id=615976d6-02ca-486f-92d8-10c443ffea6b, invocation_timestamp=2021-10-28T07:50:12.976Z, origin=O=UK Mint, L=London, C=GB, session_id=615976d6-02ca-486f-92d8-10c443ffea6b, session_timestamp=2021-10-28T07:50:12.976Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,944Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=ca523601-b827-476a-922d-9a54673c0de7, invocation_id=615976d6-02ca-486f-92d8-10c443ffea6b, invocation_timestamp=2021-10-28T07:50:12.976Z, origin=O=UK Mint, L=London, C=GB, session_id=615976d6-02ca-486f-92d8-10c443ffea6b, session_timestamp=2021-10-28T07:50:12.976Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,968Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=ca523601-b827-476a-922d-9a54673c0de7, invocation_id=615976d6-02ca-486f-92d8-10c443ffea6b, invocation_timestamp=2021-10-28T07:50:12.976Z, origin=O=UK Mint, L=London, C=GB, session_id=615976d6-02ca-486f-92d8-10c443ffea6b, session_timestamp=2021-10-28T07:50:12.976Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,999Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=1bc08595-7acf-4764-bc83-73fac4ec4b44, invocation_id=7464a4d5-517b-4402-b005-20c425794fb3, invocation_timestamp=2021-10-28T07:50:12.448Z, origin=Only For Testing, session_id=7464a4d5-517b-4402-b005-20c425794fb3, session_timestamp=2021-10-28T07:50:12.448Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:13,999Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=1bc08595-7acf-4764-bc83-73fac4ec4b44, invocation_id=7464a4d5-517b-4402-b005-20c425794fb3, invocation_timestamp=2021-10-28T07:50:12.448Z, origin=Only For Testing, session_id=7464a4d5-517b-4402-b005-20c425794fb3, session_timestamp=2021-10-28T07:50:12.448Z, thread-id=205, tx_id=70B86D492016D16BDC8DE7A704FA8AB6A4FF564E109BB48C23B41178706D67E5}
[INFO ] 2021-10-28T07:50:14,140Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d39e7cfd-09b9-45cf-8cae-7e4f0fd060b0, invocation_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, invocation_timestamp=2021-10-28T07:50:14.015Z, origin=Only For Testing, session_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, session_timestamp=2021-10-28T07:50:14.015Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,183Z [Mock network] corda.flow. - Received a notarisation request for Tx [3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=c7a3ffe1-0911-4515-b4f9-10f12efcbc63, invocation_id=85ecfd4c-f366-4689-9296-daab6f01d51d, invocation_timestamp=2021-10-28T07:50:14.157Z, origin=O=Abbey, L=London, C=GB, session_id=85ecfd4c-f366-4689-9296-daab6f01d51d, session_timestamp=2021-10-28T07:50:14.157Z, thread-id=205}
[INFO ] 2021-10-28T07:50:14,581Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:50:14,601Z [Mock network] corda.flow. - Transaction [3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=c7a3ffe1-0911-4515-b4f9-10f12efcbc63, invocation_id=85ecfd4c-f366-4689-9296-daab6f01d51d, invocation_timestamp=2021-10-28T07:50:14.157Z, origin=O=Abbey, L=London, C=GB, session_id=85ecfd4c-f366-4689-9296-daab6f01d51d, session_timestamp=2021-10-28T07:50:14.157Z, thread-id=205}
[INFO ] 2021-10-28T07:50:14,673Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d39e7cfd-09b9-45cf-8cae-7e4f0fd060b0, invocation_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, invocation_timestamp=2021-10-28T07:50:14.015Z, origin=Only For Testing, session_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, session_timestamp=2021-10-28T07:50:14.015Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,675Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d39e7cfd-09b9-45cf-8cae-7e4f0fd060b0, invocation_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, invocation_timestamp=2021-10-28T07:50:14.015Z, origin=Only For Testing, session_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, session_timestamp=2021-10-28T07:50:14.015Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,686Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d39e7cfd-09b9-45cf-8cae-7e4f0fd060b0, invocation_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, invocation_timestamp=2021-10-28T07:50:14.015Z, origin=Only For Testing, session_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, session_timestamp=2021-10-28T07:50:14.015Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,712Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=e46b5c84-c074-472b-9fb4-2394a05bb75d, invocation_id=19e85a81-8e38-4179-9510-acbfac0b67f3, invocation_timestamp=2021-10-28T07:50:14.225Z, origin=O=Abbey, L=London, C=GB, session_id=19e85a81-8e38-4179-9510-acbfac0b67f3, session_timestamp=2021-10-28T07:50:14.225Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,873Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=e46b5c84-c074-472b-9fb4-2394a05bb75d, invocation_id=19e85a81-8e38-4179-9510-acbfac0b67f3, invocation_timestamp=2021-10-28T07:50:14.225Z, origin=O=Abbey, L=London, C=GB, session_id=19e85a81-8e38-4179-9510-acbfac0b67f3, session_timestamp=2021-10-28T07:50:14.225Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,881Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=e46b5c84-c074-472b-9fb4-2394a05bb75d, invocation_id=19e85a81-8e38-4179-9510-acbfac0b67f3, invocation_timestamp=2021-10-28T07:50:14.225Z, origin=O=Abbey, L=London, C=GB, session_id=19e85a81-8e38-4179-9510-acbfac0b67f3, session_timestamp=2021-10-28T07:50:14.225Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,894Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=e46b5c84-c074-472b-9fb4-2394a05bb75d, invocation_id=19e85a81-8e38-4179-9510-acbfac0b67f3, invocation_timestamp=2021-10-28T07:50:14.225Z, origin=O=Abbey, L=London, C=GB, session_id=19e85a81-8e38-4179-9510-acbfac0b67f3, session_timestamp=2021-10-28T07:50:14.225Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,915Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d39e7cfd-09b9-45cf-8cae-7e4f0fd060b0, invocation_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, invocation_timestamp=2021-10-28T07:50:14.015Z, origin=Only For Testing, session_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, session_timestamp=2021-10-28T07:50:14.015Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:14,917Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d39e7cfd-09b9-45cf-8cae-7e4f0fd060b0, invocation_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, invocation_timestamp=2021-10-28T07:50:14.015Z, origin=Only For Testing, session_id=b7067cf4-491d-4dfd-ae13-494d29d9c212, session_timestamp=2021-10-28T07:50:14.015Z, thread-id=205, tx_id=3C3911BCBA087ECDC58E880A511AD4E53BF58CCCD1B8653F5EF7FE7FF6988581}
[INFO ] 2021-10-28T07:50:15,048Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=1db1fdcc-6919-4907-a694-cd5bac4856ec, invocation_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, invocation_timestamp=2021-10-28T07:50:14.929Z, origin=Only For Testing, session_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, session_timestamp=2021-10-28T07:50:14.929Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,074Z [Mock network] corda.flow. - Received a notarisation request for Tx [777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=eb7dd109-04f8-4ff4-a57c-c08d3197c8ec, invocation_id=193a3fb4-0433-4998-8ad4-5b8c877b6ff0, invocation_timestamp=2021-10-28T07:50:15.060Z, origin=O=HSBC, L=London, C=GB, session_id=193a3fb4-0433-4998-8ad4-5b8c877b6ff0, session_timestamp=2021-10-28T07:50:15.060Z, thread-id=205}
[INFO ] 2021-10-28T07:50:15,198Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:50:15,204Z [Mock network] corda.flow. - Transaction [777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=eb7dd109-04f8-4ff4-a57c-c08d3197c8ec, invocation_id=193a3fb4-0433-4998-8ad4-5b8c877b6ff0, invocation_timestamp=2021-10-28T07:50:15.060Z, origin=O=HSBC, L=London, C=GB, session_id=193a3fb4-0433-4998-8ad4-5b8c877b6ff0, session_timestamp=2021-10-28T07:50:15.060Z, thread-id=205}
[INFO ] 2021-10-28T07:50:15,255Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=1db1fdcc-6919-4907-a694-cd5bac4856ec, invocation_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, invocation_timestamp=2021-10-28T07:50:14.929Z, origin=Only For Testing, session_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, session_timestamp=2021-10-28T07:50:14.929Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,257Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=1db1fdcc-6919-4907-a694-cd5bac4856ec, invocation_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, invocation_timestamp=2021-10-28T07:50:14.929Z, origin=Only For Testing, session_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, session_timestamp=2021-10-28T07:50:14.929Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,268Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=1db1fdcc-6919-4907-a694-cd5bac4856ec, invocation_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, invocation_timestamp=2021-10-28T07:50:14.929Z, origin=Only For Testing, session_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, session_timestamp=2021-10-28T07:50:14.929Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,291Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=6bd5421b-ed38-422b-b0e2-b45db5c5484b, invocation_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, invocation_timestamp=2021-10-28T07:50:15.083Z, origin=O=HSBC, L=London, C=GB, session_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, session_timestamp=2021-10-28T07:50:15.083Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,302Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=6bd5421b-ed38-422b-b0e2-b45db5c5484b, invocation_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, invocation_timestamp=2021-10-28T07:50:15.083Z, origin=O=HSBC, L=London, C=GB, session_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, session_timestamp=2021-10-28T07:50:15.083Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,310Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=6bd5421b-ed38-422b-b0e2-b45db5c5484b, invocation_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, invocation_timestamp=2021-10-28T07:50:15.083Z, origin=O=HSBC, L=London, C=GB, session_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, session_timestamp=2021-10-28T07:50:15.083Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,319Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=6bd5421b-ed38-422b-b0e2-b45db5c5484b, invocation_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, invocation_timestamp=2021-10-28T07:50:15.083Z, origin=O=HSBC, L=London, C=GB, session_id=9b71b035-b287-42b7-b0a7-176baaf7f0a9, session_timestamp=2021-10-28T07:50:15.083Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,336Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=1db1fdcc-6919-4907-a694-cd5bac4856ec, invocation_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, invocation_timestamp=2021-10-28T07:50:14.929Z, origin=Only For Testing, session_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, session_timestamp=2021-10-28T07:50:14.929Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:15,337Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=1db1fdcc-6919-4907-a694-cd5bac4856ec, invocation_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, invocation_timestamp=2021-10-28T07:50:14.929Z, origin=Only For Testing, session_id=5f6e4b1d-27ae-414b-a861-0668f4e2b6f3, session_timestamp=2021-10-28T07:50:14.929Z, thread-id=205, tx_id=777E3DCD22BCB88BED7EE84DD05F49818244EF7D783BFD57BA787B0601D5BA97}
[INFO ] 2021-10-28T07:50:22,931Z [Mock network] corda.flow. - Flow raised an error: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
[INFO ] 2021-10-28T07:50:22,936Z [Mock network] statemachine.StaffedFlowHospital. - Flow [116352c9-ed40-4784-a75a-270d69396757] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), frozenFiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
[INFO ] 2021-10-28T07:50:22,943Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[INFO ] 2021-10-28T07:50:22,949Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[WARN ] 2021-10-28T07:50:23,005Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [116352c9-ed40-4784-a75a-270d69396757] errored, dumping all transitions:

 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.350Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=85F4AABB43D93FA94FE250719080162BAA1F5CB9DB2A0C5844F9141761E18235), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@439c9dd4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@439c9dd4])
    SignalFlowHasStarted(flowId=[116352c9-ed40-4784-a75a-270d69396757])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@439c9dd4]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.351Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.347Z
    2021-10-28T07:50:15.351Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.351Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[116352c9-ed40-4784-a75a-270d69396757], sessionId=SessionId(toLong=971758430154948657))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=971758430154948657): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=971758430154948657), additionalEntropy=1348756620652220284)


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.354Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.351Z
    2021-10-28T07:50:15.354Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.360Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=971758430154948657), additionalEntropy=1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.354Z
    2021-10-28T07:50:15.359Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=85F4AABB43D93FA94FE250719080162BAA1F5CB9DB2A0C5844F9141761E18235)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.361Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=971758430154948657), initiationEntropy=1348756620652220284, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-971758430154948657-1348756620652220284-1-0), senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.359Z
    2021-10-28T07:50:15.361Z
checkpoint.checkpointState.sessions.SessionId(toLong=971758430154948657): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=971758430154948657), additionalEntropy=1348756620652220284)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)
isFlowResumed: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.388Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z), maySkipCheckpoint=false, fiber=BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z), frozenFiber=BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.361Z
    2021-10-28T07:50:15.386Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068})
    Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z)
checkpoint.flowState.frozenFiber.hash: 
    6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC
    BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6
checkpoint.flowIoRequest: 
    Send
    Sleep
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.388Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z), frozenFiber=BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5270c94c, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:15.590Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5270c94c
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.594Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5270c94c
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.607Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:16.386Z), maySkipCheckpoint=false, fiber=2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:16.386Z), frozenFiber=2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.386Z
    2021-10-28T07:50:15.604Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:15.590Z
    2021-10-28T07:50:16.386Z
checkpoint.flowState.frozenFiber.hash: 
    BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6
    2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.608Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:16.386Z), frozenFiber=2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3d6ac07a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:16.386Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3d6ac07a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:16.390Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3d6ac07a
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:16.402Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:17.484Z), maySkipCheckpoint=false, fiber=73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:17.484Z), frozenFiber=73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.604Z
    2021-10-28T07:50:16.399Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:16.386Z
    2021-10-28T07:50:17.484Z
checkpoint.flowState.frozenFiber.hash: 
    2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10
    73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:16.402Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:17.484Z), frozenFiber=73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6e15f9c7, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:17.484Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6e15f9c7
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:17.489Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6e15f9c7
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:17.499Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:19.031Z), maySkipCheckpoint=false, fiber=8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:19.031Z), frozenFiber=8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:16.399Z
    2021-10-28T07:50:17.496Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:17.484Z
    2021-10-28T07:50:19.031Z
checkpoint.flowState.frozenFiber.hash: 
    73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3
    8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:17.500Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:19.031Z), frozenFiber=8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6b28cf8a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:19.031Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6b28cf8a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:19.036Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6b28cf8a
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:19.044Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:20.193Z), maySkipCheckpoint=false, fiber=5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:20.193Z), frozenFiber=5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:17.496Z
    2021-10-28T07:50:19.042Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:19.031Z
    2021-10-28T07:50:20.193Z
checkpoint.flowState.frozenFiber.hash: 
    8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F
    5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:19.044Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:20.193Z), frozenFiber=5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4becd6a2, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:20.193Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4becd6a2
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:20.198Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4becd6a2
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:20.207Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:21.288Z), maySkipCheckpoint=false, fiber=B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:21.288Z), frozenFiber=B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:19.042Z
    2021-10-28T07:50:20.205Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:20.193Z
    2021-10-28T07:50:21.288Z
checkpoint.flowState.frozenFiber.hash: 
    5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385
    B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
numberOfCommits: 
    7
    8
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:20.207Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:21.288Z), frozenFiber=B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@77e4fb95, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:21.288Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@77e4fb95
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:21.294Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@77e4fb95
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:21.303Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), maySkipCheckpoint=false, fiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), frozenFiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:20.205Z
    2021-10-28T07:50:21.301Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:21.288Z
    2021-10-28T07:50:22.920Z
checkpoint.flowState.frozenFiber.hash: 
    B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235
    816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
numberOfCommits: 
    8
    9
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:21.303Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), frozenFiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5a1d3e7c, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:22.920Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5a1d3e7c
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.924Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5a1d3e7c
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.931Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:21.301Z
    2021-10-28T07:50:22.931Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.931Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.951Z
  Event: Error(exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2)., rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:22.931Z
    2021-10-28T07:50:22.934Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=934094814530173038, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.955Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.956Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:22.934Z
    2021-10-28T07:50:22.956Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
[WARN ] 2021-10-28T07:50:23,005Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [116352c9-ed40-4784-a75a-270d69396757] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[WARN ] 2021-10-28T07:50:23,006Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
[WARN ] 2021-10-28T07:50:23,032Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [116352c9-ed40-4784-a75a-270d69396757] errored, dumping all transitions:

 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.350Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=85F4AABB43D93FA94FE250719080162BAA1F5CB9DB2A0C5844F9141761E18235), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@439c9dd4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@439c9dd4])
    SignalFlowHasStarted(flowId=[116352c9-ed40-4784-a75a-270d69396757])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@439c9dd4]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.351Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.347Z
    2021-10-28T07:50:15.351Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.351Z
  Event: InitiateFlow(destination=O=UK Mint, L=London, C=GB, wellKnownParty=O=UK Mint, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[116352c9-ed40-4784-a75a-270d69396757], sessionId=SessionId(toLong=971758430154948657))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=971758430154948657): 
    null
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=971758430154948657), additionalEntropy=1348756620652220284)


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.354Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.351Z
    2021-10-28T07:50:15.354Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.360Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), maySkipCheckpoint=false, fiber=6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=971758430154948657), additionalEntropy=1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.354Z
    2021-10-28T07:50:15.359Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=85F4AABB43D93FA94FE250719080162BAA1F5CB9DB2A0C5844F9141761E18235)
    Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068}), frozenFiber=6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC)
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Send
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.361Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=UK Mint, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=971758430154948657), initiationEntropy=1348756620652220284, initiatorFlowClassName=com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, appName=tokens-workflows-1.2, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-971758430154948657-1348756620652220284-1-0), senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9))], sendExisting=[])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.359Z
    2021-10-28T07:50:15.361Z
checkpoint.checkpointState.sessions.SessionId(toLong=971758430154948657): 
    Uninitiated(destination=O=UK Mint, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=971758430154948657), additionalEntropy=1348756620652220284)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)
isFlowResumed: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.388Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z), maySkipCheckpoint=false, fiber=BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z), frozenFiber=BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.361Z
    2021-10-28T07:50:15.386Z
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=UK Mint, L=London, C=GB, sourceSessionId=SessionId(toLong=971758430154948657))=30CA3FAA088FEB6941B6AC83E08D955E5E42CC359DC7875BECB7B08DC9C35068})
    Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z)
checkpoint.flowState.frozenFiber.hash: 
    6677E87E321A6A150FB3A41C8D5FA2538E2E4F9BA268AD1C7E589052C1B16FFC
    BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6
checkpoint.flowIoRequest: 
    Send
    Sleep
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.388Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:15.590Z), frozenFiber=BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5270c94c, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=3, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:15.590Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5270c94c
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.594Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5270c94c
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.607Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:16.386Z), maySkipCheckpoint=false, fiber=2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:16.386Z), frozenFiber=2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.386Z
    2021-10-28T07:50:15.604Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:15.590Z
    2021-10-28T07:50:16.386Z
checkpoint.flowState.frozenFiber.hash: 
    BA99D86D39587C79E974B4E9CB7C062A923DF46C38C02778AD759C7DD1D9CDD6
    2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:15.608Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:16.386Z), frozenFiber=2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3d6ac07a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:16.386Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3d6ac07a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:16.390Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3d6ac07a
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:16.402Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:17.484Z), maySkipCheckpoint=false, fiber=73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:17.484Z), frozenFiber=73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:15.604Z
    2021-10-28T07:50:16.399Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:16.386Z
    2021-10-28T07:50:17.484Z
checkpoint.flowState.frozenFiber.hash: 
    2ECFFC6591999CC982E739B3A0A9A28141E8FF7D7382DC2EFFE716C4B09C5A10
    73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:16.402Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:17.484Z), frozenFiber=73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6e15f9c7, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:17.484Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6e15f9c7
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:17.489Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6e15f9c7
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:17.499Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:19.031Z), maySkipCheckpoint=false, fiber=8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:19.031Z), frozenFiber=8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:16.399Z
    2021-10-28T07:50:17.496Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:17.484Z
    2021-10-28T07:50:19.031Z
checkpoint.flowState.frozenFiber.hash: 
    73F459B8FD7700048AB9004C30539BDCAF704F06699827C4F884930947FDADA3
    8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:17.500Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:19.031Z), frozenFiber=8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6b28cf8a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=6, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:19.031Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6b28cf8a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:19.036Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@6b28cf8a
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:19.044Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:20.193Z), maySkipCheckpoint=false, fiber=5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:20.193Z), frozenFiber=5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:17.496Z
    2021-10-28T07:50:19.042Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:19.031Z
    2021-10-28T07:50:20.193Z
checkpoint.flowState.frozenFiber.hash: 
    8F959776650ED059F5F7A6769271FA58D47BE0F1B4F456B4B08CEC3B1B9A526F
    5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:19.044Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:20.193Z), frozenFiber=5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4becd6a2, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:20.193Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4becd6a2
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:20.198Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4becd6a2
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:20.207Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:21.288Z), maySkipCheckpoint=false, fiber=B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:21.288Z), frozenFiber=B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:19.042Z
    2021-10-28T07:50:20.205Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:20.193Z
    2021-10-28T07:50:21.288Z
checkpoint.flowState.frozenFiber.hash: 
    5EDA1C8EE75A0C18C196DF1194CE57FE71C01C10BA6CC7DA7D5315932AFBC385
    B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
numberOfCommits: 
    7
    8
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:20.207Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:21.288Z), frozenFiber=B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@77e4fb95, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:21.288Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@77e4fb95
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:21.294Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@77e4fb95
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:21.303Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), maySkipCheckpoint=false, fiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), frozenFiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:20.205Z
    2021-10-28T07:50:21.301Z
checkpoint.flowState.flowIORequest.wakeUpAfter: 
    2021-10-28T07:50:21.288Z
    2021-10-28T07:50:22.920Z
checkpoint.flowState.frozenFiber.hash: 
    B29E415204552A97D4ED0581BBC1E9B2B59BE09576D1AE58A9F9C5A0F480C235
    816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.checkpointState.numberOfSuspends: 
    7
    8
numberOfCommits: 
    8
    9
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:21.303Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=9), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), frozenFiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5a1d3e7c, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]), time=2021-10-28T07:50:22.920Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5a1d3e7c
isWaitingForFuture: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.924Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5a1d3e7c
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.931Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:21.301Z
    2021-10-28T07:50:22.931Z
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow, subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.931Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, classToInitiateWith=class com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens, flowInfo=FlowInfo(flowVersion=1, appName=tokens-workflows-1.2), subFlowVersion=CorDappFlow(platformVersion=10, corDappName=tokens-workflows-1.2, corDappHash=083B488BA5E2E66D66A990182CB7395C1D1DEE551E26D1295E04933FC30D92E9), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)]


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.951Z
  Event: Error(exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2)., rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:22.931Z
    2021-10-28T07:50:22.934Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=934094814530173038, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.955Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:22.956Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2021-10-28T07:50:22.934Z
    2021-10-28T07:50:22.956Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [116352c9-ed40-4784-a75a-270d69396757] ---
  Timestamp: 2021-10-28T07:50:23.013Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=934094814530173038)], sessions=[], senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9)
    CreateTransaction
    RemoveCheckpoint(id=[116352c9-ed40-4784-a75a-270d69396757], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=116352c9-ed40-4784-a75a-270d69396757)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=971758430154948657)])
    RemoveFlow(flowId=[116352c9-ed40-4784-a75a-270d69396757], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=934094814530173038, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB)), trace=Trace(invocationId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Invocation, sessionId=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, timestamp: 2021-10-28T07:50:15.346Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=UK Mint, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=UK Mint, L=London, C=GB, sessions={SessionId(toLong=971758430154948657)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-971758430154948657-1348756620652220284)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, classToInitiateWith=class net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CoreFlow(platformVersion=10), isEnabledTimedFlow=false)], numberOfSuspends=8, numberOfCommits=10), flowState=net.corda.node.services.statemachine.FlowState$Finished@5cf6c963, errorState=Errored(errors=[FlowError(errorId=934094814530173038, exception=com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow@79cc09f4, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=97028eb9-28c3-455b-894e-a4f2da1ec6e9, reloadCheckpointAfterSuspendCount=null, numberOfCommits=10, lock=java.util.concurrent.Semaphore@320ff4ab[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.timestamp: 
    2021-10-28T07:50:22.956Z
    2021-10-28T07:50:23.005Z
checkpoint.flowState: 
    Started(flowIORequest=Sleep(wakeUpAfter=2021-10-28T07:50:22.920Z), frozenFiber=816A350612B107A635C8E764124B1B8A00C76D1D07A760608634D59CBF9E1F75)
    net.corda.node.services.statemachine.FlowState$Finished@5cf6c963
checkpoint.checkpointState.numberOfCommits: 
    9
    10
numberOfCommits: 
    9
    10
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
[WARN ] 2021-10-28T07:50:23,032Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [116352c9-ed40-4784-a75a-270d69396757] error {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
com.r3.corda.lib.tokens.selection.InsufficientBalanceException: Insufficient spendable states identified for 20.00 TokenType(tokenIdentifier='GBP', fractionDigits=2).
	at com.r3.corda.lib.tokens.selection.database.selector.DatabaseTokenSelection.selectTokens(DatabaseTokenSelection.kt:133) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.selection.api.Selector.selectTokens(Selector.kt:47) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFlowUtilities.addFungibleTokensToRedeem(RedeemFlowUtilities.kt:109) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.RedeemFungibleTokensFlow.generateExit(RedeemFungibleTokensFlow.kt:32) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:51) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.redeem.AbstractRedeemTokensFlow.call(AbstractRedeemTokensFlow.kt:23) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:30) ~[tokens-workflows-1.2.jar:?]
	at com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens.call(RedeemTokens.kt:17) ~[tokens-workflows-1.2.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.8.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.8.jar:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:45) ~[main/:?]
	at net.corda.samples.tokenizedhouse.flows.RedeemEGbpFlow.call(RedeemEGbpFlow.java:21) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.8.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.8.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.8.jar:?]
[INFO ] 2021-10-28T07:50:23,048Z [Mock network] statemachine.SingleThreadedStateMachineManager. - Cannot find flow corresponding to session ID - SessionId(toLong=971758430154948657). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=116352c9-ed40-4784-a75a-270d69396757, invocation_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, invocation_timestamp=2021-10-28T07:50:15.346Z, origin=Only For Testing, session_id=022ce75f-92ff-4696-b263-c6a3ed8f5e2d, session_timestamp=2021-10-28T07:50:15.346Z, thread-id=205}
[INFO ] 2021-10-28T07:50:23,095Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:50:23,119Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:50:23,119Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:50:23,124Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:50:23,134Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:50:23,134Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:50:23,139Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:50:23,150Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:50:23,150Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:50:23,158Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:50:23,176Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:50:23,176Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:51:48,696Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075141.848-9813925C8CB955/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:51:48,722Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:51:48,734Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:51:49,199Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:51:50,740Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:51:51,052Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:51:51,130Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:51:51,153Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:51:51,159Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6, alias: identity-private-key {}
[INFO ] 2021-10-28T07:51:51,307Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,308Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,309Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,309Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,310Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,310Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,310Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,310Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,311Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,311Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,312Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,313Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:51:51,314Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,358Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:51:51,472Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:51:39.652Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:51:58,447Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:51:58,527Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:51:58,532Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:52:01,381Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:52:01,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:52:01,736Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727), owningKey=DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6 {}
[INFO ] 2021-10-28T07:52:01,736Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:52:01,892Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727) {}
[INFO ] 2021-10-28T07:52:01,960Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:52:02,006Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:52:02,008Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:52:02,044Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727), owningKey=DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6 {}
[INFO ] 2021-10-28T07:52:02,044Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:02,197Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:52:02,217Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:52:02,230Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075141.848-9813925C8CB955/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:52:02,318Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:52:02,432Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:52:02,433Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:52:03,051Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727) {}
[INFO ] 2021-10-28T07:52:03,064Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727), owningKey=DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6 {}
[INFO ] 2021-10-28T07:52:03,066Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:03,070Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727), owningKey=DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6 {}
[INFO ] 2021-10-28T07:52:03,073Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:03,096Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075141.848-9813925C8CB955/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:52:03,103Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:52:03,105Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:52:03,139Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:52:03,217Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:52:03,219Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:52:03,221Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:52:03,261Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:52:03,262Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f, alias: identity-private-key {}
[INFO ] 2021-10-28T07:52:03,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:52:03,273Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:51:39.652Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:52:03,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:52:03,960Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:03,962Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:04,160Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:04,169Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:52:04,174Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169), owningKey=DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f {}
[INFO ] 2021-10-28T07:52:04,174Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:04,186Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169) {}
[INFO ] 2021-10-28T07:52:04,200Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:52:04,204Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:52:04,204Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:52:04,210Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169), owningKey=DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f {}
[INFO ] 2021-10-28T07:52:04,210Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:04,257Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:52:04,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:52:04,263Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075141.848-9813925C8CB955/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:52:04,264Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:52:04,286Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:52:04,312Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169) {}
[INFO ] 2021-10-28T07:52:04,316Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727), owningKey=DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6 {}
[INFO ] 2021-10-28T07:52:04,316Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:52:04,330Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169), owningKey=DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f {}
[INFO ] 2021-10-28T07:52:04,330Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:04,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169), owningKey=DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f {}
[INFO ] 2021-10-28T07:52:04,343Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:04,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169), owningKey=DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f {}
[INFO ] 2021-10-28T07:52:04,344Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:04,355Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075141.848-9813925C8CB955/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:52:04,355Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:52:04,355Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:52:04,369Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:52:04,422Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:52:04,425Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:52:04,426Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:52:04,462Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:52:04,465Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg, alias: identity-private-key {}
[INFO ] 2021-10-28T07:52:04,473Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,475Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,477Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:52:04,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,479Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:52:04,490Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:51:39.652Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:52:05,181Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:52:05,182Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:05,182Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:05,370Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:05,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:52:05,379Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376), owningKey=DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg {}
[INFO ] 2021-10-28T07:52:05,379Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:05,389Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376) {}
[INFO ] 2021-10-28T07:52:05,401Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:52:05,403Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:52:05,403Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:52:05,411Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376), owningKey=DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg {}
[INFO ] 2021-10-28T07:52:05,411Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:05,448Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:52:05,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:52:05,452Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075141.848-9813925C8CB955/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:52:05,452Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:52:05,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:52:05,494Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376) {}
[INFO ] 2021-10-28T07:52:05,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727), owningKey=DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6 {}
[INFO ] 2021-10-28T07:52:05,498Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:52:05,518Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376), owningKey=DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg {}
[INFO ] 2021-10-28T07:52:05,518Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:05,532Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169), owningKey=DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f {}
[INFO ] 2021-10-28T07:52:05,535Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:05,554Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376), owningKey=DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg {}
[INFO ] 2021-10-28T07:52:05,554Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:05,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376), owningKey=DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg {}
[INFO ] 2021-10-28T07:52:05,572Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:05,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376), owningKey=DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg {}
[INFO ] 2021-10-28T07:52:05,572Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:05,589Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075141.848-9813925C8CB955/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:52:05,590Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:52:05,590Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:52:05,599Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075141.848-9813925C8CB955/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:52:05,639Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:52:05,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:52:05,641Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:52:05,681Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:52:05,681Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j, alias: identity-private-key {}
[INFO ] 2021-10-28T07:52:05,687Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:52:05,692Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:51:39.652Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:52:06,326Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:52:06,328Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:06,328Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:06,522Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:52:06,527Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:52:06,532Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527), owningKey=DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j {}
[INFO ] 2021-10-28T07:52:06,532Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:06,543Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527) {}
[INFO ] 2021-10-28T07:52:06,551Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:52:06,553Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:52:06,553Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:52:06,562Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527), owningKey=DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j {}
[INFO ] 2021-10-28T07:52:06,562Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:06,677Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:52:06,694Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:52:06,694Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075141.848-9813925C8CB955/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:52:06,694Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:52:06,707Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:52:06,730Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527) {}
[INFO ] 2021-10-28T07:52:06,734Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407521727), owningKey=DL28QepZC236acikEirfrPFuyHxZ2hBygxdMpwSo22MuK6 {}
[INFO ] 2021-10-28T07:52:06,734Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:52:06,746Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527), owningKey=DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j {}
[INFO ] 2021-10-28T07:52:06,746Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:06,764Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407524169), owningKey=DL2dzqnzz2EMQkpShiDFUoJDjjvYZCSmdU4JN4DFsVra2f {}
[INFO ] 2021-10-28T07:52:06,764Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:06,780Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527), owningKey=DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j {}
[INFO ] 2021-10-28T07:52:06,780Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:06,794Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407525376), owningKey=DLFoqCggas3KThQ57ZR5wfTpUubTiKFQSrVvXTymtsMjg {}
[INFO ] 2021-10-28T07:52:06,794Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:06,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527), owningKey=DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j {}
[INFO ] 2021-10-28T07:52:06,806Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:52:06,819Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527), owningKey=DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j {}
[INFO ] 2021-10-28T07:52:06,819Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:06,820Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407526527), owningKey=DLBPSCAPGKpWRdyXRwobdHaJvnJrCwi4BYisV9d5TQmP6j {}
[INFO ] 2021-10-28T07:52:06,820Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:52:07,958Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a94fd1d6-7016-4b15-9b3a-88c0b8f64a17, invocation_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, invocation_timestamp=2021-10-28T07:52:06.865Z, origin=Only For Testing, session_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, session_timestamp=2021-10-28T07:52:06.865Z, thread-id=205, tx_id=1698D2602A2B56E1677BA1F464EAB5E87399F42117AE69A886B946D989EA7A72}
[INFO ] 2021-10-28T07:52:07,958Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a94fd1d6-7016-4b15-9b3a-88c0b8f64a17, invocation_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, invocation_timestamp=2021-10-28T07:52:06.865Z, origin=Only For Testing, session_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, session_timestamp=2021-10-28T07:52:06.865Z, thread-id=205, tx_id=1698D2602A2B56E1677BA1F464EAB5E87399F42117AE69A886B946D989EA7A72}
[INFO ] 2021-10-28T07:52:08,091Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a94fd1d6-7016-4b15-9b3a-88c0b8f64a17, invocation_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, invocation_timestamp=2021-10-28T07:52:06.865Z, origin=Only For Testing, session_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, session_timestamp=2021-10-28T07:52:06.865Z, thread-id=205, tx_id=1698D2602A2B56E1677BA1F464EAB5E87399F42117AE69A886B946D989EA7A72}
[INFO ] 2021-10-28T07:52:08,092Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a94fd1d6-7016-4b15-9b3a-88c0b8f64a17, invocation_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, invocation_timestamp=2021-10-28T07:52:06.865Z, origin=Only For Testing, session_id=c06d30b4-7cc2-410c-bec7-0b0d44d8360e, session_timestamp=2021-10-28T07:52:06.865Z, thread-id=205, tx_id=1698D2602A2B56E1677BA1F464EAB5E87399F42117AE69A886B946D989EA7A72}
[INFO ] 2021-10-28T07:52:08,497Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=7cae3067-5960-4373-8002-b128189e201f, invocation_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, invocation_timestamp=2021-10-28T07:52:08.180Z, origin=Only For Testing, session_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, session_timestamp=2021-10-28T07:52:08.180Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:08,599Z [Mock network] corda.flow. - Received a notarisation request for Tx [D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=ba655c6d-c141-4d2c-ae72-41b5276f1721, invocation_id=4ef8eca5-7ffe-4935-bcab-722bdbce7e45, invocation_timestamp=2021-10-28T07:52:08.567Z, origin=O=UK Mint, L=London, C=GB, session_id=4ef8eca5-7ffe-4935-bcab-722bdbce7e45, session_timestamp=2021-10-28T07:52:08.567Z, thread-id=205}
[INFO ] 2021-10-28T07:52:08,948Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:52:08,968Z [Mock network] corda.flow. - Transaction [D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=ba655c6d-c141-4d2c-ae72-41b5276f1721, invocation_id=4ef8eca5-7ffe-4935-bcab-722bdbce7e45, invocation_timestamp=2021-10-28T07:52:08.567Z, origin=O=UK Mint, L=London, C=GB, session_id=4ef8eca5-7ffe-4935-bcab-722bdbce7e45, session_timestamp=2021-10-28T07:52:08.567Z, thread-id=205}
[INFO ] 2021-10-28T07:52:09,035Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=7cae3067-5960-4373-8002-b128189e201f, invocation_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, invocation_timestamp=2021-10-28T07:52:08.180Z, origin=Only For Testing, session_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, session_timestamp=2021-10-28T07:52:08.180Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,039Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=7cae3067-5960-4373-8002-b128189e201f, invocation_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, invocation_timestamp=2021-10-28T07:52:08.180Z, origin=Only For Testing, session_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, session_timestamp=2021-10-28T07:52:08.180Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,053Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=7cae3067-5960-4373-8002-b128189e201f, invocation_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, invocation_timestamp=2021-10-28T07:52:08.180Z, origin=Only For Testing, session_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, session_timestamp=2021-10-28T07:52:08.180Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,093Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=527e6beb-728c-47e6-8f55-b63755765e80, invocation_id=bc35ccf5-726d-4312-b75f-c1893c56b979, invocation_timestamp=2021-10-28T07:52:08.666Z, origin=O=UK Mint, L=London, C=GB, session_id=bc35ccf5-726d-4312-b75f-c1893c56b979, session_timestamp=2021-10-28T07:52:08.666Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,249Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=527e6beb-728c-47e6-8f55-b63755765e80, invocation_id=bc35ccf5-726d-4312-b75f-c1893c56b979, invocation_timestamp=2021-10-28T07:52:08.666Z, origin=O=UK Mint, L=London, C=GB, session_id=bc35ccf5-726d-4312-b75f-c1893c56b979, session_timestamp=2021-10-28T07:52:08.666Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,284Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=527e6beb-728c-47e6-8f55-b63755765e80, invocation_id=bc35ccf5-726d-4312-b75f-c1893c56b979, invocation_timestamp=2021-10-28T07:52:08.666Z, origin=O=UK Mint, L=London, C=GB, session_id=bc35ccf5-726d-4312-b75f-c1893c56b979, session_timestamp=2021-10-28T07:52:08.666Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,304Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=527e6beb-728c-47e6-8f55-b63755765e80, invocation_id=bc35ccf5-726d-4312-b75f-c1893c56b979, invocation_timestamp=2021-10-28T07:52:08.666Z, origin=O=UK Mint, L=London, C=GB, session_id=bc35ccf5-726d-4312-b75f-c1893c56b979, session_timestamp=2021-10-28T07:52:08.666Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,322Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=7cae3067-5960-4373-8002-b128189e201f, invocation_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, invocation_timestamp=2021-10-28T07:52:08.180Z, origin=Only For Testing, session_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, session_timestamp=2021-10-28T07:52:08.180Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,323Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=7cae3067-5960-4373-8002-b128189e201f, invocation_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, invocation_timestamp=2021-10-28T07:52:08.180Z, origin=Only For Testing, session_id=9ec819e5-ed74-4677-9f3a-150b1ed6e915, session_timestamp=2021-10-28T07:52:08.180Z, thread-id=205, tx_id=D1BA7EE5F72B2D2E206E450AA46A25D96C969A782648AEB51C72D4674C4C8F2A}
[INFO ] 2021-10-28T07:52:09,423Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0d37471c-347b-44e6-9156-d63c7f3e72a8, invocation_id=47d342d0-0237-4252-84f5-30f68aba814b, invocation_timestamp=2021-10-28T07:52:09.336Z, origin=Only For Testing, session_id=47d342d0-0237-4252-84f5-30f68aba814b, session_timestamp=2021-10-28T07:52:09.336Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,449Z [Mock network] corda.flow. - Received a notarisation request for Tx [20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=7d1352af-6945-4bb3-a9b2-7a51cf0d1e39, invocation_id=25b97311-403f-44b9-ba80-784010a06619, invocation_timestamp=2021-10-28T07:52:09.436Z, origin=O=Abbey, L=London, C=GB, session_id=25b97311-403f-44b9-ba80-784010a06619, session_timestamp=2021-10-28T07:52:09.436Z, thread-id=205}
[INFO ] 2021-10-28T07:52:09,576Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:52:09,581Z [Mock network] corda.flow. - Transaction [20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=7d1352af-6945-4bb3-a9b2-7a51cf0d1e39, invocation_id=25b97311-403f-44b9-ba80-784010a06619, invocation_timestamp=2021-10-28T07:52:09.436Z, origin=O=Abbey, L=London, C=GB, session_id=25b97311-403f-44b9-ba80-784010a06619, session_timestamp=2021-10-28T07:52:09.436Z, thread-id=205}
[INFO ] 2021-10-28T07:52:09,604Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0d37471c-347b-44e6-9156-d63c7f3e72a8, invocation_id=47d342d0-0237-4252-84f5-30f68aba814b, invocation_timestamp=2021-10-28T07:52:09.336Z, origin=Only For Testing, session_id=47d342d0-0237-4252-84f5-30f68aba814b, session_timestamp=2021-10-28T07:52:09.336Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,605Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0d37471c-347b-44e6-9156-d63c7f3e72a8, invocation_id=47d342d0-0237-4252-84f5-30f68aba814b, invocation_timestamp=2021-10-28T07:52:09.336Z, origin=Only For Testing, session_id=47d342d0-0237-4252-84f5-30f68aba814b, session_timestamp=2021-10-28T07:52:09.336Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,614Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0d37471c-347b-44e6-9156-d63c7f3e72a8, invocation_id=47d342d0-0237-4252-84f5-30f68aba814b, invocation_timestamp=2021-10-28T07:52:09.336Z, origin=Only For Testing, session_id=47d342d0-0237-4252-84f5-30f68aba814b, session_timestamp=2021-10-28T07:52:09.336Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,637Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=efbdbcec-161b-46e6-be85-24d2bf931f34, invocation_id=485afa3f-d764-4907-992a-dd460c43a9e6, invocation_timestamp=2021-10-28T07:52:09.464Z, origin=O=Abbey, L=London, C=GB, session_id=485afa3f-d764-4907-992a-dd460c43a9e6, session_timestamp=2021-10-28T07:52:09.464Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,799Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=efbdbcec-161b-46e6-be85-24d2bf931f34, invocation_id=485afa3f-d764-4907-992a-dd460c43a9e6, invocation_timestamp=2021-10-28T07:52:09.464Z, origin=O=Abbey, L=London, C=GB, session_id=485afa3f-d764-4907-992a-dd460c43a9e6, session_timestamp=2021-10-28T07:52:09.464Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,807Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=efbdbcec-161b-46e6-be85-24d2bf931f34, invocation_id=485afa3f-d764-4907-992a-dd460c43a9e6, invocation_timestamp=2021-10-28T07:52:09.464Z, origin=O=Abbey, L=London, C=GB, session_id=485afa3f-d764-4907-992a-dd460c43a9e6, session_timestamp=2021-10-28T07:52:09.464Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,818Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=efbdbcec-161b-46e6-be85-24d2bf931f34, invocation_id=485afa3f-d764-4907-992a-dd460c43a9e6, invocation_timestamp=2021-10-28T07:52:09.464Z, origin=O=Abbey, L=London, C=GB, session_id=485afa3f-d764-4907-992a-dd460c43a9e6, session_timestamp=2021-10-28T07:52:09.464Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,831Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0d37471c-347b-44e6-9156-d63c7f3e72a8, invocation_id=47d342d0-0237-4252-84f5-30f68aba814b, invocation_timestamp=2021-10-28T07:52:09.336Z, origin=Only For Testing, session_id=47d342d0-0237-4252-84f5-30f68aba814b, session_timestamp=2021-10-28T07:52:09.336Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,831Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0d37471c-347b-44e6-9156-d63c7f3e72a8, invocation_id=47d342d0-0237-4252-84f5-30f68aba814b, invocation_timestamp=2021-10-28T07:52:09.336Z, origin=Only For Testing, session_id=47d342d0-0237-4252-84f5-30f68aba814b, session_timestamp=2021-10-28T07:52:09.336Z, thread-id=205, tx_id=20C9A35035F385E6EA2BB71E2CED44716F45E94C50FA17027447A513A1E87B6D}
[INFO ] 2021-10-28T07:52:09,920Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5dca3ad5-2e2e-4c47-aded-e1ee614ac825, invocation_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, invocation_timestamp=2021-10-28T07:52:09.842Z, origin=Only For Testing, session_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, session_timestamp=2021-10-28T07:52:09.842Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:09,958Z [Mock network] corda.flow. - Received a notarisation request for Tx [52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=8d53a505-a934-4aee-913e-bbc185152802, invocation_id=ed87b897-21ba-49ec-aaf1-659edcb41ce0, invocation_timestamp=2021-10-28T07:52:09.941Z, origin=O=HSBC, L=London, C=GB, session_id=ed87b897-21ba-49ec-aaf1-659edcb41ce0, session_timestamp=2021-10-28T07:52:09.941Z, thread-id=205}
[INFO ] 2021-10-28T07:52:10,190Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:52:10,195Z [Mock network] corda.flow. - Transaction [52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=8d53a505-a934-4aee-913e-bbc185152802, invocation_id=ed87b897-21ba-49ec-aaf1-659edcb41ce0, invocation_timestamp=2021-10-28T07:52:09.941Z, origin=O=HSBC, L=London, C=GB, session_id=ed87b897-21ba-49ec-aaf1-659edcb41ce0, session_timestamp=2021-10-28T07:52:09.941Z, thread-id=205}
[INFO ] 2021-10-28T07:52:10,212Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5dca3ad5-2e2e-4c47-aded-e1ee614ac825, invocation_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, invocation_timestamp=2021-10-28T07:52:09.842Z, origin=Only For Testing, session_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, session_timestamp=2021-10-28T07:52:09.842Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,213Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5dca3ad5-2e2e-4c47-aded-e1ee614ac825, invocation_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, invocation_timestamp=2021-10-28T07:52:09.842Z, origin=Only For Testing, session_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, session_timestamp=2021-10-28T07:52:09.842Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,221Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5dca3ad5-2e2e-4c47-aded-e1ee614ac825, invocation_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, invocation_timestamp=2021-10-28T07:52:09.842Z, origin=Only For Testing, session_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, session_timestamp=2021-10-28T07:52:09.842Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,242Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=6e9eb1d1-10d4-4fe1-a21b-a110e50b1e65, invocation_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, invocation_timestamp=2021-10-28T07:52:09.967Z, origin=O=HSBC, L=London, C=GB, session_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, session_timestamp=2021-10-28T07:52:09.967Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,251Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=6e9eb1d1-10d4-4fe1-a21b-a110e50b1e65, invocation_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, invocation_timestamp=2021-10-28T07:52:09.967Z, origin=O=HSBC, L=London, C=GB, session_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, session_timestamp=2021-10-28T07:52:09.967Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,262Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=6e9eb1d1-10d4-4fe1-a21b-a110e50b1e65, invocation_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, invocation_timestamp=2021-10-28T07:52:09.967Z, origin=O=HSBC, L=London, C=GB, session_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, session_timestamp=2021-10-28T07:52:09.967Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,271Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=6e9eb1d1-10d4-4fe1-a21b-a110e50b1e65, invocation_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, invocation_timestamp=2021-10-28T07:52:09.967Z, origin=O=HSBC, L=London, C=GB, session_id=4b4d0e03-fb06-4eed-ad5d-39b89784a859, session_timestamp=2021-10-28T07:52:09.967Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,282Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5dca3ad5-2e2e-4c47-aded-e1ee614ac825, invocation_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, invocation_timestamp=2021-10-28T07:52:09.842Z, origin=Only For Testing, session_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, session_timestamp=2021-10-28T07:52:09.842Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,282Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=5dca3ad5-2e2e-4c47-aded-e1ee614ac825, invocation_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, invocation_timestamp=2021-10-28T07:52:09.842Z, origin=Only For Testing, session_id=c788f70f-6d88-4357-ae1a-fd36ea01cc2c, session_timestamp=2021-10-28T07:52:09.842Z, thread-id=205, tx_id=52FF1465A3193A6BE48C25B46F793DCF47D5D4A6EE85A4C8089656544105BA88}
[INFO ] 2021-10-28T07:52:10,349Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=633fffdd-5641-4147-91c7-1777bbcc658b, invocation_id=86870b7f-46cc-451d-a563-d9a511d4826c, invocation_timestamp=2021-10-28T07:52:10.299Z, origin=Only For Testing, session_id=86870b7f-46cc-451d-a563-d9a511d4826c, session_timestamp=2021-10-28T07:52:10.299Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,365Z [Mock network] corda.flow. - Received a notarisation request for Tx [3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=2ff330dc-4e95-4156-a247-cd11502b20e8, invocation_id=971ea4ac-0698-40e4-a399-0bfdf519d148, invocation_timestamp=2021-10-28T07:52:10.358Z, origin=O=Abbey, L=London, C=GB, session_id=971ea4ac-0698-40e4-a399-0bfdf519d148, session_timestamp=2021-10-28T07:52:10.358Z, thread-id=205}
[INFO ] 2021-10-28T07:52:10,604Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:52:10,609Z [Mock network] corda.flow. - Transaction [3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=2ff330dc-4e95-4156-a247-cd11502b20e8, invocation_id=971ea4ac-0698-40e4-a399-0bfdf519d148, invocation_timestamp=2021-10-28T07:52:10.358Z, origin=O=Abbey, L=London, C=GB, session_id=971ea4ac-0698-40e4-a399-0bfdf519d148, session_timestamp=2021-10-28T07:52:10.358Z, thread-id=205}
[INFO ] 2021-10-28T07:52:10,647Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=633fffdd-5641-4147-91c7-1777bbcc658b, invocation_id=86870b7f-46cc-451d-a563-d9a511d4826c, invocation_timestamp=2021-10-28T07:52:10.299Z, origin=Only For Testing, session_id=86870b7f-46cc-451d-a563-d9a511d4826c, session_timestamp=2021-10-28T07:52:10.299Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,648Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=633fffdd-5641-4147-91c7-1777bbcc658b, invocation_id=86870b7f-46cc-451d-a563-d9a511d4826c, invocation_timestamp=2021-10-28T07:52:10.299Z, origin=Only For Testing, session_id=86870b7f-46cc-451d-a563-d9a511d4826c, session_timestamp=2021-10-28T07:52:10.299Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,652Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=633fffdd-5641-4147-91c7-1777bbcc658b, invocation_id=86870b7f-46cc-451d-a563-d9a511d4826c, invocation_timestamp=2021-10-28T07:52:10.299Z, origin=Only For Testing, session_id=86870b7f-46cc-451d-a563-d9a511d4826c, session_timestamp=2021-10-28T07:52:10.299Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,671Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=0ffdfe0c-9fdb-43c9-b90b-3b3542bce58a, invocation_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, invocation_timestamp=2021-10-28T07:52:10.372Z, origin=O=Abbey, L=London, C=GB, session_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, session_timestamp=2021-10-28T07:52:10.372Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,749Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=0ffdfe0c-9fdb-43c9-b90b-3b3542bce58a, invocation_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, invocation_timestamp=2021-10-28T07:52:10.372Z, origin=O=Abbey, L=London, C=GB, session_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, session_timestamp=2021-10-28T07:52:10.372Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,757Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=0ffdfe0c-9fdb-43c9-b90b-3b3542bce58a, invocation_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, invocation_timestamp=2021-10-28T07:52:10.372Z, origin=O=Abbey, L=London, C=GB, session_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, session_timestamp=2021-10-28T07:52:10.372Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,764Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=0ffdfe0c-9fdb-43c9-b90b-3b3542bce58a, invocation_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, invocation_timestamp=2021-10-28T07:52:10.372Z, origin=O=Abbey, L=London, C=GB, session_id=8c2dcca0-4df5-41e4-a043-68b7a10735ac, session_timestamp=2021-10-28T07:52:10.372Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,772Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=633fffdd-5641-4147-91c7-1777bbcc658b, invocation_id=86870b7f-46cc-451d-a563-d9a511d4826c, invocation_timestamp=2021-10-28T07:52:10.299Z, origin=Only For Testing, session_id=86870b7f-46cc-451d-a563-d9a511d4826c, session_timestamp=2021-10-28T07:52:10.299Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,772Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=633fffdd-5641-4147-91c7-1777bbcc658b, invocation_id=86870b7f-46cc-451d-a563-d9a511d4826c, invocation_timestamp=2021-10-28T07:52:10.299Z, origin=Only For Testing, session_id=86870b7f-46cc-451d-a563-d9a511d4826c, session_timestamp=2021-10-28T07:52:10.299Z, thread-id=205, tx_id=3F1C6B0B16D5D005879E0726FF6D32F9068234B5E11950B4480CECA8B79C1A78}
[INFO ] 2021-10-28T07:52:10,976Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=70055b75-2230-475f-8e2b-a3a0c17e60c3, invocation_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, invocation_timestamp=2021-10-28T07:52:10.779Z, origin=Only For Testing, session_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, session_timestamp=2021-10-28T07:52:10.779Z, thread-id=205, tx_id=71660E6DA911E6B7C6BECD41DB547839C6556123E1635F613D5C7129B5DAA7E8}
[INFO ] 2021-10-28T07:52:10,993Z [Mock network] corda.flow. - Received a notarisation request for Tx [71660E6DA911E6B7C6BECD41DB547839C6556123E1635F613D5C7129B5DAA7E8] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=d7e873a0-be25-4b0c-a702-e9bea07a703a, invocation_id=deb307f5-2af9-4408-9da1-ba0025a56ef7, invocation_timestamp=2021-10-28T07:52:10.985Z, origin=O=UK Mint, L=London, C=GB, session_id=deb307f5-2af9-4408-9da1-ba0025a56ef7, session_timestamp=2021-10-28T07:52:10.985Z, thread-id=205}
[INFO ] 2021-10-28T07:52:11,219Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:52:11,223Z [Mock network] corda.flow. - Transaction [71660E6DA911E6B7C6BECD41DB547839C6556123E1635F613D5C7129B5DAA7E8] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=d7e873a0-be25-4b0c-a702-e9bea07a703a, invocation_id=deb307f5-2af9-4408-9da1-ba0025a56ef7, invocation_timestamp=2021-10-28T07:52:10.985Z, origin=O=UK Mint, L=London, C=GB, session_id=deb307f5-2af9-4408-9da1-ba0025a56ef7, session_timestamp=2021-10-28T07:52:10.985Z, thread-id=205}
[INFO ] 2021-10-28T07:52:11,268Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=70055b75-2230-475f-8e2b-a3a0c17e60c3, invocation_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, invocation_timestamp=2021-10-28T07:52:10.779Z, origin=Only For Testing, session_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, session_timestamp=2021-10-28T07:52:10.779Z, thread-id=205, tx_id=71660E6DA911E6B7C6BECD41DB547839C6556123E1635F613D5C7129B5DAA7E8}
[INFO ] 2021-10-28T07:52:11,269Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=70055b75-2230-475f-8e2b-a3a0c17e60c3, invocation_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, invocation_timestamp=2021-10-28T07:52:10.779Z, origin=Only For Testing, session_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, session_timestamp=2021-10-28T07:52:10.779Z, thread-id=205, tx_id=71660E6DA911E6B7C6BECD41DB547839C6556123E1635F613D5C7129B5DAA7E8}
[INFO ] 2021-10-28T07:52:11,281Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=70055b75-2230-475f-8e2b-a3a0c17e60c3, invocation_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, invocation_timestamp=2021-10-28T07:52:10.779Z, origin=Only For Testing, session_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, session_timestamp=2021-10-28T07:52:10.779Z, thread-id=205, tx_id=71660E6DA911E6B7C6BECD41DB547839C6556123E1635F613D5C7129B5DAA7E8}
[INFO ] 2021-10-28T07:52:11,281Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=70055b75-2230-475f-8e2b-a3a0c17e60c3, invocation_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, invocation_timestamp=2021-10-28T07:52:10.779Z, origin=Only For Testing, session_id=d415c0a3-5ab5-4bf3-b733-83b4b7648025, session_timestamp=2021-10-28T07:52:10.779Z, thread-id=205, tx_id=71660E6DA911E6B7C6BECD41DB547839C6556123E1635F613D5C7129B5DAA7E8}
[INFO ] 2021-10-28T07:52:11,335Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:52:11,365Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:52:11,365Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:52:11,368Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:52:11,381Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:52:11,381Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:52:11,385Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:52:11,403Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:52:11,403Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:52:11,406Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:52:11,422Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:52:11,422Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:06,222Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075259.235-168805D58EC59959/nodes/0/cordapps] {}
[INFO ] 2021-10-28T07:53:06,259Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:53:06,274Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:53:06,787Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:53:08,328Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:08,615Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:53:08,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:53:08,706Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:53:08,711Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ, alias: identity-private-key {}
[INFO ] 2021-10-28T07:53:08,860Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,861Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,862Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,863Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,863Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,864Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,865Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,865Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,865Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,866Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:53:08,868Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:08,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:09,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:52:57.195Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:53:15,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:53:15,686Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:53:15,691Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:53:18,682Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T07:53:19,053Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:53:19,062Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054), owningKey=DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ {}
[INFO ] 2021-10-28T07:53:19,062Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:53:19,216Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054) {}
[INFO ] 2021-10-28T07:53:19,280Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:53:19,312Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:53:19,316Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:53:19,349Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054), owningKey=DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ {}
[INFO ] 2021-10-28T07:53:19,349Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:19,509Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:53:19,526Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:53:19,538Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075259.235-168805D58EC59959/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:53:19,611Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:53:19,710Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:53:19,712Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T07:53:20,330Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054) {}
[INFO ] 2021-10-28T07:53:20,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054), owningKey=DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ {}
[INFO ] 2021-10-28T07:53:20,346Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:20,348Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054), owningKey=DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ {}
[INFO ] 2021-10-28T07:53:20,348Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:20,370Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075259.235-168805D58EC59959/nodes/1/cordapps] {}
[INFO ] 2021-10-28T07:53:20,371Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:53:20,371Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:53:20,381Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:53:20,447Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:20,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:53:20,450Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:53:20,496Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:53:20,496Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg, alias: identity-private-key {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:53:20,503Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,504Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:20,528Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:52:57.195Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:53:21,394Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:53:21,396Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:21,396Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:21,619Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:21,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:53:21,629Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625), owningKey=DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg {}
[INFO ] 2021-10-28T07:53:21,630Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:21,639Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625) {}
[INFO ] 2021-10-28T07:53:21,653Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:53:21,653Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:53:21,653Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:53:21,661Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625), owningKey=DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg {}
[INFO ] 2021-10-28T07:53:21,661Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:21,705Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:53:21,711Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:53:21,712Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075259.235-168805D58EC59959/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:53:21,712Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:53:21,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:53:21,779Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625) {}
[INFO ] 2021-10-28T07:53:21,782Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054), owningKey=DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ {}
[INFO ] 2021-10-28T07:53:21,782Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:53:21,795Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625), owningKey=DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg {}
[INFO ] 2021-10-28T07:53:21,795Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:21,807Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625), owningKey=DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg {}
[INFO ] 2021-10-28T07:53:21,807Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:21,807Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625), owningKey=DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg {}
[INFO ] 2021-10-28T07:53:21,807Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:21,821Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075259.235-168805D58EC59959/nodes/2/cordapps] {}
[INFO ] 2021-10-28T07:53:21,821Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:53:21,821Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:53:21,830Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:53:21,879Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:21,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:53:21,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:53:21,927Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:53:21,927Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy, alias: identity-private-key {}
[INFO ] 2021-10-28T07:53:21,935Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,935Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,935Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,936Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,936Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,936Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,936Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,936Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,936Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,937Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,937Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,937Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:53:21,937Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,937Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:21,950Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:52:57.195Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:53:22,635Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:53:22,638Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:22,638Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:22,827Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:22,833Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:53:22,839Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833), owningKey=DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy {}
[INFO ] 2021-10-28T07:53:22,839Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:22,851Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833) {}
[INFO ] 2021-10-28T07:53:22,864Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:53:22,864Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:53:22,864Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:53:22,872Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833), owningKey=DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy {}
[INFO ] 2021-10-28T07:53:22,872Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:22,917Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:53:22,923Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:53:22,923Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075259.235-168805D58EC59959/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:53:22,926Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:53:22,933Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:53:22,965Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833) {}
[INFO ] 2021-10-28T07:53:22,970Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054), owningKey=DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ {}
[INFO ] 2021-10-28T07:53:22,970Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:53:23,001Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833), owningKey=DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy {}
[INFO ] 2021-10-28T07:53:23,001Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:23,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625), owningKey=DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg {}
[INFO ] 2021-10-28T07:53:23,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:23,031Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833), owningKey=DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy {}
[INFO ] 2021-10-28T07:53:23,031Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:23,042Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833), owningKey=DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy {}
[INFO ] 2021-10-28T07:53:23,046Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:23,046Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833), owningKey=DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy {}
[INFO ] 2021-10-28T07:53:23,046Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:23,061Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-075259.235-168805D58EC59959/nodes/3/cordapps] {}
[INFO ] 2021-10-28T07:53:23,061Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T07:53:23,061Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T07:53:23,072Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-075259.235-168805D58EC59959/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T07:53:23,115Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:23,116Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T07:53:23,117Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T07:53:23,159Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T07:53:23,159Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc, alias: identity-private-key {}
[INFO ] 2021-10-28T07:53:23,166Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,167Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,168Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,168Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,168Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T07:53:23,168Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,168Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T07:53:23,171Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T07:52:57.195Z
      epoch=1
  } {}
[INFO ] 2021-10-28T07:53:23,813Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T07:53:23,815Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:23,815Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:23,980Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T07:53:23,990Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T07:53:23,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990), owningKey=DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc {}
[INFO ] 2021-10-28T07:53:23,995Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:24,005Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990) {}
[INFO ] 2021-10-28T07:53:24,012Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T07:53:24,012Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T07:53:24,012Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T07:53:24,019Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990), owningKey=DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc {}
[INFO ] 2021-10-28T07:53:24,019Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:24,071Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T07:53:24,075Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T07:53:24,076Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-075259.235-168805D58EC59959/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T07:53:24,076Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T07:53:24,088Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T07:53:24,122Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990) {}
[INFO ] 2021-10-28T07:53:24,126Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635407599054), owningKey=DL9GzoRivEsV2FaPiu8u1Z6YHcpycz3sKDJewQvos5nKJJ {}
[INFO ] 2021-10-28T07:53:24,126Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T07:53:24,143Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990), owningKey=DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc {}
[INFO ] 2021-10-28T07:53:24,143Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:24,161Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635407601625), owningKey=DL9HGjioXSdfUCy4Rb7AdkkH2cU1ZkGnK7BG6dGTxvMXvg {}
[INFO ] 2021-10-28T07:53:24,161Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:24,177Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990), owningKey=DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc {}
[INFO ] 2021-10-28T07:53:24,177Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:24,190Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635407602833), owningKey=DL5MAdv2vTDFyTo6jtq8SJV7QarrNXrfLvA1orPL45Egyy {}
[INFO ] 2021-10-28T07:53:24,190Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:24,200Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990), owningKey=DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc {}
[INFO ] 2021-10-28T07:53:24,200Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T07:53:24,211Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990), owningKey=DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc {}
[INFO ] 2021-10-28T07:53:24,211Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:24,211Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635407603990), owningKey=DLBf99tjQRzbbNqpCFN5kv5EBt7wWLcxAQTiwyiyZ6YrJc {}
[INFO ] 2021-10-28T07:53:24,211Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T07:53:25,287Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77f04f5a-f750-4bc9-a7c8-7280ce1ed86d, invocation_id=2c53a4bb-b59c-495b-b97d-036a7b633301, invocation_timestamp=2021-10-28T07:53:24.248Z, origin=Only For Testing, session_id=2c53a4bb-b59c-495b-b97d-036a7b633301, session_timestamp=2021-10-28T07:53:24.248Z, thread-id=205, tx_id=3231A14639141EAAE1A40DCA6057999CE2EA8760A5445CA6E5E01ADC76DF71CC}
[INFO ] 2021-10-28T07:53:25,287Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77f04f5a-f750-4bc9-a7c8-7280ce1ed86d, invocation_id=2c53a4bb-b59c-495b-b97d-036a7b633301, invocation_timestamp=2021-10-28T07:53:24.248Z, origin=Only For Testing, session_id=2c53a4bb-b59c-495b-b97d-036a7b633301, session_timestamp=2021-10-28T07:53:24.248Z, thread-id=205, tx_id=3231A14639141EAAE1A40DCA6057999CE2EA8760A5445CA6E5E01ADC76DF71CC}
[INFO ] 2021-10-28T07:53:25,404Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77f04f5a-f750-4bc9-a7c8-7280ce1ed86d, invocation_id=2c53a4bb-b59c-495b-b97d-036a7b633301, invocation_timestamp=2021-10-28T07:53:24.248Z, origin=Only For Testing, session_id=2c53a4bb-b59c-495b-b97d-036a7b633301, session_timestamp=2021-10-28T07:53:24.248Z, thread-id=205, tx_id=3231A14639141EAAE1A40DCA6057999CE2EA8760A5445CA6E5E01ADC76DF71CC}
[INFO ] 2021-10-28T07:53:25,405Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77f04f5a-f750-4bc9-a7c8-7280ce1ed86d, invocation_id=2c53a4bb-b59c-495b-b97d-036a7b633301, invocation_timestamp=2021-10-28T07:53:24.248Z, origin=Only For Testing, session_id=2c53a4bb-b59c-495b-b97d-036a7b633301, session_timestamp=2021-10-28T07:53:24.248Z, thread-id=205, tx_id=3231A14639141EAAE1A40DCA6057999CE2EA8760A5445CA6E5E01ADC76DF71CC}
[INFO ] 2021-10-28T07:53:25,834Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=fafd6cf4-6963-4876-9eeb-f95ab4c1c496, invocation_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, invocation_timestamp=2021-10-28T07:53:25.521Z, origin=Only For Testing, session_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, session_timestamp=2021-10-28T07:53:25.521Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:25,940Z [Mock network] corda.flow. - Received a notarisation request for Tx [AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=ff32c52f-d056-42f8-aa4b-60b60470cd39, invocation_id=dbcee115-d7e0-40b3-9ff5-6d21c5909257, invocation_timestamp=2021-10-28T07:53:25.902Z, origin=O=UK Mint, L=London, C=GB, session_id=dbcee115-d7e0-40b3-9ff5-6d21c5909257, session_timestamp=2021-10-28T07:53:25.902Z, thread-id=205}
[INFO ] 2021-10-28T07:53:26,649Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:53:26,670Z [Mock network] corda.flow. - Transaction [AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=ff32c52f-d056-42f8-aa4b-60b60470cd39, invocation_id=dbcee115-d7e0-40b3-9ff5-6d21c5909257, invocation_timestamp=2021-10-28T07:53:25.902Z, origin=O=UK Mint, L=London, C=GB, session_id=dbcee115-d7e0-40b3-9ff5-6d21c5909257, session_timestamp=2021-10-28T07:53:25.902Z, thread-id=205}
[INFO ] 2021-10-28T07:53:26,706Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=fafd6cf4-6963-4876-9eeb-f95ab4c1c496, invocation_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, invocation_timestamp=2021-10-28T07:53:25.521Z, origin=Only For Testing, session_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, session_timestamp=2021-10-28T07:53:25.521Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,708Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=fafd6cf4-6963-4876-9eeb-f95ab4c1c496, invocation_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, invocation_timestamp=2021-10-28T07:53:25.521Z, origin=Only For Testing, session_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, session_timestamp=2021-10-28T07:53:25.521Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,722Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=fafd6cf4-6963-4876-9eeb-f95ab4c1c496, invocation_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, invocation_timestamp=2021-10-28T07:53:25.521Z, origin=Only For Testing, session_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, session_timestamp=2021-10-28T07:53:25.521Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,763Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=a5263a18-20bb-4c54-b109-0ea0eeb6d374, invocation_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, invocation_timestamp=2021-10-28T07:53:26.062Z, origin=O=UK Mint, L=London, C=GB, session_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, session_timestamp=2021-10-28T07:53:26.062Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,937Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=a5263a18-20bb-4c54-b109-0ea0eeb6d374, invocation_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, invocation_timestamp=2021-10-28T07:53:26.062Z, origin=O=UK Mint, L=London, C=GB, session_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, session_timestamp=2021-10-28T07:53:26.062Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,955Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=a5263a18-20bb-4c54-b109-0ea0eeb6d374, invocation_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, invocation_timestamp=2021-10-28T07:53:26.062Z, origin=O=UK Mint, L=London, C=GB, session_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, session_timestamp=2021-10-28T07:53:26.062Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,969Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=a5263a18-20bb-4c54-b109-0ea0eeb6d374, invocation_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, invocation_timestamp=2021-10-28T07:53:26.062Z, origin=O=UK Mint, L=London, C=GB, session_id=2a9eb230-93f0-4491-ac7e-9b9f279a9c80, session_timestamp=2021-10-28T07:53:26.062Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,989Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=fafd6cf4-6963-4876-9eeb-f95ab4c1c496, invocation_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, invocation_timestamp=2021-10-28T07:53:25.521Z, origin=Only For Testing, session_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, session_timestamp=2021-10-28T07:53:25.521Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:26,989Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=fafd6cf4-6963-4876-9eeb-f95ab4c1c496, invocation_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, invocation_timestamp=2021-10-28T07:53:25.521Z, origin=Only For Testing, session_id=a339c577-d4ab-42c5-a4e2-7275f28ed041, session_timestamp=2021-10-28T07:53:25.521Z, thread-id=205, tx_id=AF52AC2745333234209415B7E10E3E051F6CD79C279E5BFD8DB5BB6660B4151C}
[INFO ] 2021-10-28T07:53:27,094Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=741fcdc5-8232-402c-b674-066e585cec21, invocation_id=7fa93424-0c07-412a-901c-3ddc89a9def2, invocation_timestamp=2021-10-28T07:53:27.004Z, origin=Only For Testing, session_id=7fa93424-0c07-412a-901c-3ddc89a9def2, session_timestamp=2021-10-28T07:53:27.004Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,120Z [Mock network] corda.flow. - Received a notarisation request for Tx [CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=be156a3d-f091-4f7f-95b4-74fc13077e34, invocation_id=16471050-4a22-4c09-a83c-901b80963825, invocation_timestamp=2021-10-28T07:53:27.106Z, origin=O=Abbey, L=London, C=GB, session_id=16471050-4a22-4c09-a83c-901b80963825, session_timestamp=2021-10-28T07:53:27.106Z, thread-id=205}
[INFO ] 2021-10-28T07:53:27,317Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:53:27,324Z [Mock network] corda.flow. - Transaction [CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=be156a3d-f091-4f7f-95b4-74fc13077e34, invocation_id=16471050-4a22-4c09-a83c-901b80963825, invocation_timestamp=2021-10-28T07:53:27.106Z, origin=O=Abbey, L=London, C=GB, session_id=16471050-4a22-4c09-a83c-901b80963825, session_timestamp=2021-10-28T07:53:27.106Z, thread-id=205}
[INFO ] 2021-10-28T07:53:27,388Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=741fcdc5-8232-402c-b674-066e585cec21, invocation_id=7fa93424-0c07-412a-901c-3ddc89a9def2, invocation_timestamp=2021-10-28T07:53:27.004Z, origin=Only For Testing, session_id=7fa93424-0c07-412a-901c-3ddc89a9def2, session_timestamp=2021-10-28T07:53:27.004Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,390Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=741fcdc5-8232-402c-b674-066e585cec21, invocation_id=7fa93424-0c07-412a-901c-3ddc89a9def2, invocation_timestamp=2021-10-28T07:53:27.004Z, origin=Only For Testing, session_id=7fa93424-0c07-412a-901c-3ddc89a9def2, session_timestamp=2021-10-28T07:53:27.004Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,397Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=741fcdc5-8232-402c-b674-066e585cec21, invocation_id=7fa93424-0c07-412a-901c-3ddc89a9def2, invocation_timestamp=2021-10-28T07:53:27.004Z, origin=Only For Testing, session_id=7fa93424-0c07-412a-901c-3ddc89a9def2, session_timestamp=2021-10-28T07:53:27.004Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,420Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=147ac284-6d08-4800-a92a-a6b5b3f8e644, invocation_id=9497a9cb-2876-41c0-8b65-5565d861cc84, invocation_timestamp=2021-10-28T07:53:27.135Z, origin=O=Abbey, L=London, C=GB, session_id=9497a9cb-2876-41c0-8b65-5565d861cc84, session_timestamp=2021-10-28T07:53:27.135Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,609Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=147ac284-6d08-4800-a92a-a6b5b3f8e644, invocation_id=9497a9cb-2876-41c0-8b65-5565d861cc84, invocation_timestamp=2021-10-28T07:53:27.135Z, origin=O=Abbey, L=London, C=GB, session_id=9497a9cb-2876-41c0-8b65-5565d861cc84, session_timestamp=2021-10-28T07:53:27.135Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,619Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=147ac284-6d08-4800-a92a-a6b5b3f8e644, invocation_id=9497a9cb-2876-41c0-8b65-5565d861cc84, invocation_timestamp=2021-10-28T07:53:27.135Z, origin=O=Abbey, L=London, C=GB, session_id=9497a9cb-2876-41c0-8b65-5565d861cc84, session_timestamp=2021-10-28T07:53:27.135Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,917Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=147ac284-6d08-4800-a92a-a6b5b3f8e644, invocation_id=9497a9cb-2876-41c0-8b65-5565d861cc84, invocation_timestamp=2021-10-28T07:53:27.135Z, origin=O=Abbey, L=London, C=GB, session_id=9497a9cb-2876-41c0-8b65-5565d861cc84, session_timestamp=2021-10-28T07:53:27.135Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,932Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=741fcdc5-8232-402c-b674-066e585cec21, invocation_id=7fa93424-0c07-412a-901c-3ddc89a9def2, invocation_timestamp=2021-10-28T07:53:27.004Z, origin=Only For Testing, session_id=7fa93424-0c07-412a-901c-3ddc89a9def2, session_timestamp=2021-10-28T07:53:27.004Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:27,932Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=741fcdc5-8232-402c-b674-066e585cec21, invocation_id=7fa93424-0c07-412a-901c-3ddc89a9def2, invocation_timestamp=2021-10-28T07:53:27.004Z, origin=Only For Testing, session_id=7fa93424-0c07-412a-901c-3ddc89a9def2, session_timestamp=2021-10-28T07:53:27.004Z, thread-id=205, tx_id=CDE7C199D97E2F29E4269B4DFFCE9244DA72DFF9885161AD5C8F5CD4898AF14D}
[INFO ] 2021-10-28T07:53:28,011Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b6791050-95d8-4db4-aac1-00dce561ae5d, invocation_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, invocation_timestamp=2021-10-28T07:53:27.940Z, origin=Only For Testing, session_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, session_timestamp=2021-10-28T07:53:27.940Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,032Z [Mock network] corda.flow. - Received a notarisation request for Tx [3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=1e4cadd0-da15-4e8a-b349-d6ffad24e35d, invocation_id=620d025a-5118-4fd0-9c8a-ddcc9e6de291, invocation_timestamp=2021-10-28T07:53:28.021Z, origin=O=HSBC, L=London, C=GB, session_id=620d025a-5118-4fd0-9c8a-ddcc9e6de291, session_timestamp=2021-10-28T07:53:28.021Z, thread-id=205}
[INFO ] 2021-10-28T07:53:28,103Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:53:28,107Z [Mock network] corda.flow. - Transaction [3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=1e4cadd0-da15-4e8a-b349-d6ffad24e35d, invocation_id=620d025a-5118-4fd0-9c8a-ddcc9e6de291, invocation_timestamp=2021-10-28T07:53:28.021Z, origin=O=HSBC, L=London, C=GB, session_id=620d025a-5118-4fd0-9c8a-ddcc9e6de291, session_timestamp=2021-10-28T07:53:28.021Z, thread-id=205}
[INFO ] 2021-10-28T07:53:28,121Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b6791050-95d8-4db4-aac1-00dce561ae5d, invocation_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, invocation_timestamp=2021-10-28T07:53:27.940Z, origin=Only For Testing, session_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, session_timestamp=2021-10-28T07:53:27.940Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,122Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b6791050-95d8-4db4-aac1-00dce561ae5d, invocation_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, invocation_timestamp=2021-10-28T07:53:27.940Z, origin=Only For Testing, session_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, session_timestamp=2021-10-28T07:53:27.940Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,128Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b6791050-95d8-4db4-aac1-00dce561ae5d, invocation_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, invocation_timestamp=2021-10-28T07:53:27.940Z, origin=Only For Testing, session_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, session_timestamp=2021-10-28T07:53:27.940Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,149Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=0fe9a3b3-9bfe-4eea-9e0b-1058ccabe41b, invocation_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, invocation_timestamp=2021-10-28T07:53:28.039Z, origin=O=HSBC, L=London, C=GB, session_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, session_timestamp=2021-10-28T07:53:28.039Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,160Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=0fe9a3b3-9bfe-4eea-9e0b-1058ccabe41b, invocation_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, invocation_timestamp=2021-10-28T07:53:28.039Z, origin=O=HSBC, L=London, C=GB, session_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, session_timestamp=2021-10-28T07:53:28.039Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,168Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=0fe9a3b3-9bfe-4eea-9e0b-1058ccabe41b, invocation_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, invocation_timestamp=2021-10-28T07:53:28.039Z, origin=O=HSBC, L=London, C=GB, session_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, session_timestamp=2021-10-28T07:53:28.039Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,177Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=0fe9a3b3-9bfe-4eea-9e0b-1058ccabe41b, invocation_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, invocation_timestamp=2021-10-28T07:53:28.039Z, origin=O=HSBC, L=London, C=GB, session_id=3a5a7de0-946a-4470-9b60-2132e2e3e2f1, session_timestamp=2021-10-28T07:53:28.039Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,191Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b6791050-95d8-4db4-aac1-00dce561ae5d, invocation_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, invocation_timestamp=2021-10-28T07:53:27.940Z, origin=Only For Testing, session_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, session_timestamp=2021-10-28T07:53:27.940Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,191Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b6791050-95d8-4db4-aac1-00dce561ae5d, invocation_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, invocation_timestamp=2021-10-28T07:53:27.940Z, origin=Only For Testing, session_id=3f68c9e3-cb3b-4c81-aeaa-b23d145f9fe0, session_timestamp=2021-10-28T07:53:27.940Z, thread-id=205, tx_id=3F1116DF970571F43C03F19CE2A2D4212887DAE1C06C094713CF77B05012B00C}
[INFO ] 2021-10-28T07:53:28,253Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0884317c-a08d-48dd-b06a-4918a4f7d1e5, invocation_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, invocation_timestamp=2021-10-28T07:53:28.198Z, origin=Only For Testing, session_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, session_timestamp=2021-10-28T07:53:28.198Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,268Z [Mock network] corda.flow. - Received a notarisation request for Tx [F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=13c98067-da31-43d3-a4c0-dfa9e593efc1, invocation_id=4eeb73b5-1c9c-4eb9-8ced-ca96b4d10ce8, invocation_timestamp=2021-10-28T07:53:28.261Z, origin=O=Abbey, L=London, C=GB, session_id=4eeb73b5-1c9c-4eb9-8ced-ca96b4d10ce8, session_timestamp=2021-10-28T07:53:28.261Z, thread-id=205}
[INFO ] 2021-10-28T07:53:28,511Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:53:28,517Z [Mock network] corda.flow. - Transaction [F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=13c98067-da31-43d3-a4c0-dfa9e593efc1, invocation_id=4eeb73b5-1c9c-4eb9-8ced-ca96b4d10ce8, invocation_timestamp=2021-10-28T07:53:28.261Z, origin=O=Abbey, L=London, C=GB, session_id=4eeb73b5-1c9c-4eb9-8ced-ca96b4d10ce8, session_timestamp=2021-10-28T07:53:28.261Z, thread-id=205}
[INFO ] 2021-10-28T07:53:28,551Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0884317c-a08d-48dd-b06a-4918a4f7d1e5, invocation_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, invocation_timestamp=2021-10-28T07:53:28.198Z, origin=Only For Testing, session_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, session_timestamp=2021-10-28T07:53:28.198Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,552Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0884317c-a08d-48dd-b06a-4918a4f7d1e5, invocation_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, invocation_timestamp=2021-10-28T07:53:28.198Z, origin=Only For Testing, session_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, session_timestamp=2021-10-28T07:53:28.198Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,558Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0884317c-a08d-48dd-b06a-4918a4f7d1e5, invocation_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, invocation_timestamp=2021-10-28T07:53:28.198Z, origin=Only For Testing, session_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, session_timestamp=2021-10-28T07:53:28.198Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,577Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=4c3f4059-4ab5-42ef-9450-dbd7aa2d2c57, invocation_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, invocation_timestamp=2021-10-28T07:53:28.275Z, origin=O=Abbey, L=London, C=GB, session_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, session_timestamp=2021-10-28T07:53:28.275Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,661Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=4c3f4059-4ab5-42ef-9450-dbd7aa2d2c57, invocation_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, invocation_timestamp=2021-10-28T07:53:28.275Z, origin=O=Abbey, L=London, C=GB, session_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, session_timestamp=2021-10-28T07:53:28.275Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,667Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=4c3f4059-4ab5-42ef-9450-dbd7aa2d2c57, invocation_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, invocation_timestamp=2021-10-28T07:53:28.275Z, origin=O=Abbey, L=London, C=GB, session_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, session_timestamp=2021-10-28T07:53:28.275Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,673Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=4c3f4059-4ab5-42ef-9450-dbd7aa2d2c57, invocation_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, invocation_timestamp=2021-10-28T07:53:28.275Z, origin=O=Abbey, L=London, C=GB, session_id=dd34973e-f8c2-4d12-a16b-dbf25281fdee, session_timestamp=2021-10-28T07:53:28.275Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,681Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0884317c-a08d-48dd-b06a-4918a4f7d1e5, invocation_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, invocation_timestamp=2021-10-28T07:53:28.198Z, origin=Only For Testing, session_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, session_timestamp=2021-10-28T07:53:28.198Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,682Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0884317c-a08d-48dd-b06a-4918a4f7d1e5, invocation_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, invocation_timestamp=2021-10-28T07:53:28.198Z, origin=Only For Testing, session_id=52d94eba-e3d1-43ad-a5a8-73ecc8aafc43, session_timestamp=2021-10-28T07:53:28.198Z, thread-id=205, tx_id=F9286CC3E46B648EAF7DE1EEF6EE9C5E3159C5D2D981405BD0EB9B0EC33C6199}
[INFO ] 2021-10-28T07:53:28,885Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=d5142b84-0c18-4a3b-8639-9ef3bbf5d3f4, invocation_id=d1ddd076-437b-412e-adfd-0ce57ba86942, invocation_timestamp=2021-10-28T07:53:28.689Z, origin=Only For Testing, session_id=d1ddd076-437b-412e-adfd-0ce57ba86942, session_timestamp=2021-10-28T07:53:28.689Z, thread-id=205, tx_id=3D2874DB451CAAC7722C5FC2AD737FC26C1ED490407DD317B0163F30245E4D3E}
[INFO ] 2021-10-28T07:53:28,903Z [Mock network] corda.flow. - Received a notarisation request for Tx [3D2874DB451CAAC7722C5FC2AD737FC26C1ED490407DD317B0163F30245E4D3E] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=2b92ae92-c515-4dd3-949b-daf2cd901595, invocation_id=db190df3-8fd1-4406-8d31-856178a10c80, invocation_timestamp=2021-10-28T07:53:28.894Z, origin=O=UK Mint, L=London, C=GB, session_id=db190df3-8fd1-4406-8d31-856178a10c80, session_timestamp=2021-10-28T07:53:28.894Z, thread-id=205}
[INFO ] 2021-10-28T07:53:29,129Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T07:53:29,135Z [Mock network] corda.flow. - Transaction [3D2874DB451CAAC7722C5FC2AD737FC26C1ED490407DD317B0163F30245E4D3E] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=2b92ae92-c515-4dd3-949b-daf2cd901595, invocation_id=db190df3-8fd1-4406-8d31-856178a10c80, invocation_timestamp=2021-10-28T07:53:28.894Z, origin=O=UK Mint, L=London, C=GB, session_id=db190df3-8fd1-4406-8d31-856178a10c80, session_timestamp=2021-10-28T07:53:28.894Z, thread-id=205}
[INFO ] 2021-10-28T07:53:29,184Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=d5142b84-0c18-4a3b-8639-9ef3bbf5d3f4, invocation_id=d1ddd076-437b-412e-adfd-0ce57ba86942, invocation_timestamp=2021-10-28T07:53:28.689Z, origin=Only For Testing, session_id=d1ddd076-437b-412e-adfd-0ce57ba86942, session_timestamp=2021-10-28T07:53:28.689Z, thread-id=205, tx_id=3D2874DB451CAAC7722C5FC2AD737FC26C1ED490407DD317B0163F30245E4D3E}
[INFO ] 2021-10-28T07:53:29,185Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=d5142b84-0c18-4a3b-8639-9ef3bbf5d3f4, invocation_id=d1ddd076-437b-412e-adfd-0ce57ba86942, invocation_timestamp=2021-10-28T07:53:28.689Z, origin=Only For Testing, session_id=d1ddd076-437b-412e-adfd-0ce57ba86942, session_timestamp=2021-10-28T07:53:28.689Z, thread-id=205, tx_id=3D2874DB451CAAC7722C5FC2AD737FC26C1ED490407DD317B0163F30245E4D3E}
[INFO ] 2021-10-28T07:53:29,194Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=d5142b84-0c18-4a3b-8639-9ef3bbf5d3f4, invocation_id=d1ddd076-437b-412e-adfd-0ce57ba86942, invocation_timestamp=2021-10-28T07:53:28.689Z, origin=Only For Testing, session_id=d1ddd076-437b-412e-adfd-0ce57ba86942, session_timestamp=2021-10-28T07:53:28.689Z, thread-id=205, tx_id=3D2874DB451CAAC7722C5FC2AD737FC26C1ED490407DD317B0163F30245E4D3E}
[INFO ] 2021-10-28T07:53:29,195Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=d5142b84-0c18-4a3b-8639-9ef3bbf5d3f4, invocation_id=d1ddd076-437b-412e-adfd-0ce57ba86942, invocation_timestamp=2021-10-28T07:53:28.689Z, origin=Only For Testing, session_id=d1ddd076-437b-412e-adfd-0ce57ba86942, session_timestamp=2021-10-28T07:53:28.689Z, thread-id=205, tx_id=3D2874DB451CAAC7722C5FC2AD737FC26C1ED490407DD317B0163F30245E4D3E}
[INFO ] 2021-10-28T07:53:29,256Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T07:53:29,287Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:53:29,287Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:29,290Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T07:53:29,303Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:53:29,303Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:29,304Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T07:53:29,314Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:53:29,314Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T07:53:29,315Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T07:53:29,325Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T07:53:29,325Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:29,069Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/0/cordapps] {}
[INFO ] 2021-10-28T08:01:29,095Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:01:29,107Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:01:29,570Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:01:30,919Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:31,207Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:01:31,318Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:01:31,345Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:01:31,349Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh, alias: identity-private-key {}
[INFO ] 2021-10-28T08:01:31,531Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,532Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,532Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,533Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,534Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,535Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,535Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,535Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,538Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:01:31,538Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,576Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:31,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:01:20.356Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:01:38,670Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:01:38,750Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:01:38,760Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:01:41,599Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:01:41,909Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:01:41,920Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909), owningKey=DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh {}
[INFO ] 2021-10-28T08:01:41,921Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:01:42,084Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909) {}
[INFO ] 2021-10-28T08:01:42,140Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:01:42,181Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:01:42,196Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:01:42,216Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909), owningKey=DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh {}
[INFO ] 2021-10-28T08:01:42,216Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:42,362Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:01:42,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:01:42,409Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:01:42,496Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:01:42,589Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:01:42,589Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T08:01:43,223Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909) {}
[INFO ] 2021-10-28T08:01:43,232Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909), owningKey=DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh {}
[INFO ] 2021-10-28T08:01:43,234Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:43,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909), owningKey=DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh {}
[INFO ] 2021-10-28T08:01:43,241Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:43,264Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/1/cordapps] {}
[INFO ] 2021-10-28T08:01:43,273Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:01:43,282Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:01:43,323Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:01:43,399Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:43,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:01:43,401Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:01:43,442Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:01:43,443Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii, alias: identity-private-key {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,450Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,451Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,451Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,451Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,451Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:01:43,451Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,451Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:43,455Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:01:20.356Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:01:44,171Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:01:44,173Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:44,173Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:44,342Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:44,350Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:01:44,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350), owningKey=DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii {}
[INFO ] 2021-10-28T08:01:44,355Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:44,370Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350) {}
[INFO ] 2021-10-28T08:01:44,382Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:01:44,383Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:01:44,383Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:01:44,392Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350), owningKey=DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii {}
[INFO ] 2021-10-28T08:01:44,392Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:44,437Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:01:44,441Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:01:44,442Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:01:44,442Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:01:44,453Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:01:44,499Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350) {}
[INFO ] 2021-10-28T08:01:44,501Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909), owningKey=DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh {}
[INFO ] 2021-10-28T08:01:44,501Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:01:44,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350), owningKey=DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii {}
[INFO ] 2021-10-28T08:01:44,516Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:44,527Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350), owningKey=DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii {}
[INFO ] 2021-10-28T08:01:44,527Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:44,528Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350), owningKey=DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii {}
[INFO ] 2021-10-28T08:01:44,528Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:44,541Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/2/cordapps] {}
[INFO ] 2021-10-28T08:01:44,541Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:01:44,541Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:01:44,553Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:01:44,619Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:44,620Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:01:44,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:01:44,661Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:01:44,661Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf, alias: identity-private-key {}
[INFO ] 2021-10-28T08:01:44,670Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,670Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,670Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,670Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,670Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:01:44,671Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,672Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:44,678Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:01:20.356Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:01:45,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:01:45,300Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:45,300Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:45,506Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:45,511Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:01:45,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511), owningKey=DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf {}
[INFO ] 2021-10-28T08:01:45,516Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:45,524Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511) {}
[INFO ] 2021-10-28T08:01:45,533Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:01:45,533Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:01:45,533Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:01:45,542Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511), owningKey=DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf {}
[INFO ] 2021-10-28T08:01:45,542Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:45,586Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:01:45,589Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:01:45,590Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:01:45,590Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:01:45,597Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:01:45,621Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511) {}
[INFO ] 2021-10-28T08:01:45,624Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909), owningKey=DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh {}
[INFO ] 2021-10-28T08:01:45,624Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:01:45,636Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511), owningKey=DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf {}
[INFO ] 2021-10-28T08:01:45,636Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:45,650Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350), owningKey=DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii {}
[INFO ] 2021-10-28T08:01:45,650Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:45,662Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511), owningKey=DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf {}
[INFO ] 2021-10-28T08:01:45,662Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:45,671Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511), owningKey=DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf {}
[INFO ] 2021-10-28T08:01:45,671Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:45,671Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511), owningKey=DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf {}
[INFO ] 2021-10-28T08:01:45,671Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:45,682Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/3/cordapps] {}
[INFO ] 2021-10-28T08:01:45,682Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:01:45,682Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:01:45,691Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:01:45,727Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:45,728Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:01:45,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:01:45,765Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:01:45,765Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC, alias: identity-private-key {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:01:45,773Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,774Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:01:45,778Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:01:20.356Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:01:46,490Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:01:46,492Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:46,492Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:46,645Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:01:46,651Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:01:46,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651), owningKey=DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC {}
[INFO ] 2021-10-28T08:01:46,658Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:46,665Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651) {}
[INFO ] 2021-10-28T08:01:46,672Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:01:46,673Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:01:46,673Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:01:46,680Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651), owningKey=DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC {}
[INFO ] 2021-10-28T08:01:46,680Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:46,731Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:01:46,738Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:01:46,739Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080122.695-3D23E9919140FD5D/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:01:46,743Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:01:46,749Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:01:46,786Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651) {}
[INFO ] 2021-10-28T08:01:46,794Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408101909), owningKey=DLBPmoxFgX2PV4Q9bAbmPpCZSKMup4onDozPA6VpPdUUoh {}
[INFO ] 2021-10-28T08:01:46,794Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:01:46,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651), owningKey=DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC {}
[INFO ] 2021-10-28T08:01:46,806Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:46,819Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408104350), owningKey=DLHXwuBJfqssCbx2196RHA6gsAF1tuSYJ61zpVcbF94Zii {}
[INFO ] 2021-10-28T08:01:46,819Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:46,830Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651), owningKey=DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC {}
[INFO ] 2021-10-28T08:01:46,831Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:46,843Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408105511), owningKey=DL7Ed514ev5kqRVqAb4d6pHHwP3jA78n89paHU9DVpbYEf {}
[INFO ] 2021-10-28T08:01:46,843Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:46,854Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651), owningKey=DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC {}
[INFO ] 2021-10-28T08:01:46,854Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:01:46,872Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651), owningKey=DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC {}
[INFO ] 2021-10-28T08:01:46,872Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:46,872Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408106651), owningKey=DLDtRrMQmKxNLEQFRtVYjSuHgEFhjv64zNcw2WPUL2jUqC {}
[INFO ] 2021-10-28T08:01:46,872Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:01:47,999Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e856c9d-e6ac-4ed8-872d-15d42e9fddfe, invocation_id=477966ea-c3d4-4d42-8afb-b4494821b620, invocation_timestamp=2021-10-28T08:01:46.910Z, origin=Only For Testing, session_id=477966ea-c3d4-4d42-8afb-b4494821b620, session_timestamp=2021-10-28T08:01:46.910Z, thread-id=206, tx_id=881652F6007E0B7FEA3DA8077FB96753CAE9E50CA78E6B7EFD4C5B8576C27749}
[INFO ] 2021-10-28T08:01:47,999Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e856c9d-e6ac-4ed8-872d-15d42e9fddfe, invocation_id=477966ea-c3d4-4d42-8afb-b4494821b620, invocation_timestamp=2021-10-28T08:01:46.910Z, origin=Only For Testing, session_id=477966ea-c3d4-4d42-8afb-b4494821b620, session_timestamp=2021-10-28T08:01:46.910Z, thread-id=206, tx_id=881652F6007E0B7FEA3DA8077FB96753CAE9E50CA78E6B7EFD4C5B8576C27749}
[INFO ] 2021-10-28T08:01:48,159Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e856c9d-e6ac-4ed8-872d-15d42e9fddfe, invocation_id=477966ea-c3d4-4d42-8afb-b4494821b620, invocation_timestamp=2021-10-28T08:01:46.910Z, origin=Only For Testing, session_id=477966ea-c3d4-4d42-8afb-b4494821b620, session_timestamp=2021-10-28T08:01:46.910Z, thread-id=206, tx_id=881652F6007E0B7FEA3DA8077FB96753CAE9E50CA78E6B7EFD4C5B8576C27749}
[INFO ] 2021-10-28T08:01:48,159Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e856c9d-e6ac-4ed8-872d-15d42e9fddfe, invocation_id=477966ea-c3d4-4d42-8afb-b4494821b620, invocation_timestamp=2021-10-28T08:01:46.910Z, origin=Only For Testing, session_id=477966ea-c3d4-4d42-8afb-b4494821b620, session_timestamp=2021-10-28T08:01:46.910Z, thread-id=206, tx_id=881652F6007E0B7FEA3DA8077FB96753CAE9E50CA78E6B7EFD4C5B8576C27749}
[INFO ] 2021-10-28T08:01:48,597Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=525b7383-c458-4557-8447-e52386e8004b, invocation_id=ff160f8a-10dd-4897-9a45-8362050aae75, invocation_timestamp=2021-10-28T08:01:48.286Z, origin=Only For Testing, session_id=ff160f8a-10dd-4897-9a45-8362050aae75, session_timestamp=2021-10-28T08:01:48.286Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:48,694Z [Mock network] corda.flow. - Received a notarisation request for Tx [E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=79f55728-48c9-484d-aafb-3545733784bf, invocation_id=4a16175f-98a2-41e7-b61b-2fa1773893c3, invocation_timestamp=2021-10-28T08:01:48.660Z, origin=O=UK Mint, L=London, C=GB, session_id=4a16175f-98a2-41e7-b61b-2fa1773893c3, session_timestamp=2021-10-28T08:01:48.660Z, thread-id=206}
[INFO ] 2021-10-28T08:01:49,155Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:01:49,180Z [Mock network] corda.flow. - Transaction [E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=79f55728-48c9-484d-aafb-3545733784bf, invocation_id=4a16175f-98a2-41e7-b61b-2fa1773893c3, invocation_timestamp=2021-10-28T08:01:48.660Z, origin=O=UK Mint, L=London, C=GB, session_id=4a16175f-98a2-41e7-b61b-2fa1773893c3, session_timestamp=2021-10-28T08:01:48.660Z, thread-id=206}
[INFO ] 2021-10-28T08:01:49,211Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=525b7383-c458-4557-8447-e52386e8004b, invocation_id=ff160f8a-10dd-4897-9a45-8362050aae75, invocation_timestamp=2021-10-28T08:01:48.286Z, origin=Only For Testing, session_id=ff160f8a-10dd-4897-9a45-8362050aae75, session_timestamp=2021-10-28T08:01:48.286Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,242Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=525b7383-c458-4557-8447-e52386e8004b, invocation_id=ff160f8a-10dd-4897-9a45-8362050aae75, invocation_timestamp=2021-10-28T08:01:48.286Z, origin=Only For Testing, session_id=ff160f8a-10dd-4897-9a45-8362050aae75, session_timestamp=2021-10-28T08:01:48.286Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,255Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=525b7383-c458-4557-8447-e52386e8004b, invocation_id=ff160f8a-10dd-4897-9a45-8362050aae75, invocation_timestamp=2021-10-28T08:01:48.286Z, origin=Only For Testing, session_id=ff160f8a-10dd-4897-9a45-8362050aae75, session_timestamp=2021-10-28T08:01:48.286Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,292Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=0308ec54-a513-48d9-87f6-19ad401d03b0, invocation_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, invocation_timestamp=2021-10-28T08:01:48.767Z, origin=O=UK Mint, L=London, C=GB, session_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, session_timestamp=2021-10-28T08:01:48.767Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,485Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=0308ec54-a513-48d9-87f6-19ad401d03b0, invocation_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, invocation_timestamp=2021-10-28T08:01:48.767Z, origin=O=UK Mint, L=London, C=GB, session_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, session_timestamp=2021-10-28T08:01:48.767Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,500Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=0308ec54-a513-48d9-87f6-19ad401d03b0, invocation_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, invocation_timestamp=2021-10-28T08:01:48.767Z, origin=O=UK Mint, L=London, C=GB, session_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, session_timestamp=2021-10-28T08:01:48.767Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,523Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=0308ec54-a513-48d9-87f6-19ad401d03b0, invocation_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, invocation_timestamp=2021-10-28T08:01:48.767Z, origin=O=UK Mint, L=London, C=GB, session_id=6f07e7e0-af7d-4cc7-82f6-734f14d179cc, session_timestamp=2021-10-28T08:01:48.767Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,543Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=525b7383-c458-4557-8447-e52386e8004b, invocation_id=ff160f8a-10dd-4897-9a45-8362050aae75, invocation_timestamp=2021-10-28T08:01:48.286Z, origin=Only For Testing, session_id=ff160f8a-10dd-4897-9a45-8362050aae75, session_timestamp=2021-10-28T08:01:48.286Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,543Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=525b7383-c458-4557-8447-e52386e8004b, invocation_id=ff160f8a-10dd-4897-9a45-8362050aae75, invocation_timestamp=2021-10-28T08:01:48.286Z, origin=Only For Testing, session_id=ff160f8a-10dd-4897-9a45-8362050aae75, session_timestamp=2021-10-28T08:01:48.286Z, thread-id=206, tx_id=E483735B5F68353AA91921BEA547CCA396601854E14D296892E5C68CA0E36BC8}
[INFO ] 2021-10-28T08:01:49,652Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=03b03aaf-3119-450b-a6aa-45b6a11f600f, invocation_id=740c7047-e427-464d-b665-b777304e40fc, invocation_timestamp=2021-10-28T08:01:49.564Z, origin=Only For Testing, session_id=740c7047-e427-464d-b665-b777304e40fc, session_timestamp=2021-10-28T08:01:49.564Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:49,678Z [Mock network] corda.flow. - Received a notarisation request for Tx [B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=e46732fc-86fb-42a0-976b-f88b946eca98, invocation_id=f29dedf3-6fbf-480e-962e-b6b593075bda, invocation_timestamp=2021-10-28T08:01:49.665Z, origin=O=Abbey, L=London, C=GB, session_id=f29dedf3-6fbf-480e-962e-b6b593075bda, session_timestamp=2021-10-28T08:01:49.665Z, thread-id=206}
[INFO ] 2021-10-28T08:01:49,788Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:01:49,793Z [Mock network] corda.flow. - Transaction [B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=e46732fc-86fb-42a0-976b-f88b946eca98, invocation_id=f29dedf3-6fbf-480e-962e-b6b593075bda, invocation_timestamp=2021-10-28T08:01:49.665Z, origin=O=Abbey, L=London, C=GB, session_id=f29dedf3-6fbf-480e-962e-b6b593075bda, session_timestamp=2021-10-28T08:01:49.665Z, thread-id=206}
[INFO ] 2021-10-28T08:01:49,826Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=03b03aaf-3119-450b-a6aa-45b6a11f600f, invocation_id=740c7047-e427-464d-b665-b777304e40fc, invocation_timestamp=2021-10-28T08:01:49.564Z, origin=Only For Testing, session_id=740c7047-e427-464d-b665-b777304e40fc, session_timestamp=2021-10-28T08:01:49.564Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:49,827Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=03b03aaf-3119-450b-a6aa-45b6a11f600f, invocation_id=740c7047-e427-464d-b665-b777304e40fc, invocation_timestamp=2021-10-28T08:01:49.564Z, origin=Only For Testing, session_id=740c7047-e427-464d-b665-b777304e40fc, session_timestamp=2021-10-28T08:01:49.564Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:49,835Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=03b03aaf-3119-450b-a6aa-45b6a11f600f, invocation_id=740c7047-e427-464d-b665-b777304e40fc, invocation_timestamp=2021-10-28T08:01:49.564Z, origin=Only For Testing, session_id=740c7047-e427-464d-b665-b777304e40fc, session_timestamp=2021-10-28T08:01:49.564Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:49,875Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=ce98109b-eac8-4bbf-ae60-1ea63c03a344, invocation_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, invocation_timestamp=2021-10-28T08:01:49.692Z, origin=O=Abbey, L=London, C=GB, session_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, session_timestamp=2021-10-28T08:01:49.692Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:50,035Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=ce98109b-eac8-4bbf-ae60-1ea63c03a344, invocation_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, invocation_timestamp=2021-10-28T08:01:49.692Z, origin=O=Abbey, L=London, C=GB, session_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, session_timestamp=2021-10-28T08:01:49.692Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:50,042Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=ce98109b-eac8-4bbf-ae60-1ea63c03a344, invocation_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, invocation_timestamp=2021-10-28T08:01:49.692Z, origin=O=Abbey, L=London, C=GB, session_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, session_timestamp=2021-10-28T08:01:49.692Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:50,054Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=ce98109b-eac8-4bbf-ae60-1ea63c03a344, invocation_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, invocation_timestamp=2021-10-28T08:01:49.692Z, origin=O=Abbey, L=London, C=GB, session_id=97fe6541-2332-4c62-b4ae-1e1981942cc3, session_timestamp=2021-10-28T08:01:49.692Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:50,076Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=03b03aaf-3119-450b-a6aa-45b6a11f600f, invocation_id=740c7047-e427-464d-b665-b777304e40fc, invocation_timestamp=2021-10-28T08:01:49.564Z, origin=Only For Testing, session_id=740c7047-e427-464d-b665-b777304e40fc, session_timestamp=2021-10-28T08:01:49.564Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:50,076Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=03b03aaf-3119-450b-a6aa-45b6a11f600f, invocation_id=740c7047-e427-464d-b665-b777304e40fc, invocation_timestamp=2021-10-28T08:01:49.564Z, origin=Only For Testing, session_id=740c7047-e427-464d-b665-b777304e40fc, session_timestamp=2021-10-28T08:01:49.564Z, thread-id=206, tx_id=B6FFF933C18B0408AC463B634626707E3CCC814E71718C3C4D08DD587CE27439}
[INFO ] 2021-10-28T08:01:50,180Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fe403b4d-8db8-4965-96a2-f0297514a002, invocation_id=a98abf61-fda5-49ad-977d-55b16d42bed3, invocation_timestamp=2021-10-28T08:01:50.092Z, origin=Only For Testing, session_id=a98abf61-fda5-49ad-977d-55b16d42bed3, session_timestamp=2021-10-28T08:01:50.092Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,204Z [Mock network] corda.flow. - Received a notarisation request for Tx [64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=b7c98baa-2ac1-46ee-ba7a-bdbae197e4c8, invocation_id=34436435-1ef4-492d-b7f5-1d5cdde03fe2, invocation_timestamp=2021-10-28T08:01:50.192Z, origin=O=HSBC, L=London, C=GB, session_id=34436435-1ef4-492d-b7f5-1d5cdde03fe2, session_timestamp=2021-10-28T08:01:50.192Z, thread-id=206}
[INFO ] 2021-10-28T08:01:50,402Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:01:50,409Z [Mock network] corda.flow. - Transaction [64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=b7c98baa-2ac1-46ee-ba7a-bdbae197e4c8, invocation_id=34436435-1ef4-492d-b7f5-1d5cdde03fe2, invocation_timestamp=2021-10-28T08:01:50.192Z, origin=O=HSBC, L=London, C=GB, session_id=34436435-1ef4-492d-b7f5-1d5cdde03fe2, session_timestamp=2021-10-28T08:01:50.192Z, thread-id=206}
[INFO ] 2021-10-28T08:01:50,444Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fe403b4d-8db8-4965-96a2-f0297514a002, invocation_id=a98abf61-fda5-49ad-977d-55b16d42bed3, invocation_timestamp=2021-10-28T08:01:50.092Z, origin=Only For Testing, session_id=a98abf61-fda5-49ad-977d-55b16d42bed3, session_timestamp=2021-10-28T08:01:50.092Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,445Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fe403b4d-8db8-4965-96a2-f0297514a002, invocation_id=a98abf61-fda5-49ad-977d-55b16d42bed3, invocation_timestamp=2021-10-28T08:01:50.092Z, origin=Only For Testing, session_id=a98abf61-fda5-49ad-977d-55b16d42bed3, session_timestamp=2021-10-28T08:01:50.092Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,451Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fe403b4d-8db8-4965-96a2-f0297514a002, invocation_id=a98abf61-fda5-49ad-977d-55b16d42bed3, invocation_timestamp=2021-10-28T08:01:50.092Z, origin=Only For Testing, session_id=a98abf61-fda5-49ad-977d-55b16d42bed3, session_timestamp=2021-10-28T08:01:50.092Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,469Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=4d083318-c4e0-45b6-b189-e1be856138a6, invocation_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, invocation_timestamp=2021-10-28T08:01:50.211Z, origin=O=HSBC, L=London, C=GB, session_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, session_timestamp=2021-10-28T08:01:50.211Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,477Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=4d083318-c4e0-45b6-b189-e1be856138a6, invocation_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, invocation_timestamp=2021-10-28T08:01:50.211Z, origin=O=HSBC, L=London, C=GB, session_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, session_timestamp=2021-10-28T08:01:50.211Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,485Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=4d083318-c4e0-45b6-b189-e1be856138a6, invocation_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, invocation_timestamp=2021-10-28T08:01:50.211Z, origin=O=HSBC, L=London, C=GB, session_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, session_timestamp=2021-10-28T08:01:50.211Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,491Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=4d083318-c4e0-45b6-b189-e1be856138a6, invocation_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, invocation_timestamp=2021-10-28T08:01:50.211Z, origin=O=HSBC, L=London, C=GB, session_id=8ff932bb-22c2-4a2e-8d71-bd62308e7277, session_timestamp=2021-10-28T08:01:50.211Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,502Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fe403b4d-8db8-4965-96a2-f0297514a002, invocation_id=a98abf61-fda5-49ad-977d-55b16d42bed3, invocation_timestamp=2021-10-28T08:01:50.092Z, origin=Only For Testing, session_id=a98abf61-fda5-49ad-977d-55b16d42bed3, session_timestamp=2021-10-28T08:01:50.092Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,502Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=fe403b4d-8db8-4965-96a2-f0297514a002, invocation_id=a98abf61-fda5-49ad-977d-55b16d42bed3, invocation_timestamp=2021-10-28T08:01:50.092Z, origin=Only For Testing, session_id=a98abf61-fda5-49ad-977d-55b16d42bed3, session_timestamp=2021-10-28T08:01:50.092Z, thread-id=206, tx_id=64383E1E06D6C791802B40C71F609829BD7DBB08664AD4055C67E4B9E14BCE25}
[INFO ] 2021-10-28T08:01:50,557Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=3df1fa0c-005a-436e-bf4f-866cb9067429, invocation_id=96e432ce-b182-411c-8600-500d8b81cc5b, invocation_timestamp=2021-10-28T08:01:50.512Z, origin=Only For Testing, session_id=96e432ce-b182-411c-8600-500d8b81cc5b, session_timestamp=2021-10-28T08:01:50.512Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,571Z [Mock network] corda.flow. - Received a notarisation request for Tx [FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=24c111d8-fc47-459b-8d1f-53388370cb7b, invocation_id=548d70e8-6afc-45b4-bb18-4afc8ac05cac, invocation_timestamp=2021-10-28T08:01:50.566Z, origin=O=Abbey, L=London, C=GB, session_id=548d70e8-6afc-45b4-bb18-4afc8ac05cac, session_timestamp=2021-10-28T08:01:50.566Z, thread-id=206}
[INFO ] 2021-10-28T08:01:50,816Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:01:50,821Z [Mock network] corda.flow. - Transaction [FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=24c111d8-fc47-459b-8d1f-53388370cb7b, invocation_id=548d70e8-6afc-45b4-bb18-4afc8ac05cac, invocation_timestamp=2021-10-28T08:01:50.566Z, origin=O=Abbey, L=London, C=GB, session_id=548d70e8-6afc-45b4-bb18-4afc8ac05cac, session_timestamp=2021-10-28T08:01:50.566Z, thread-id=206}
[INFO ] 2021-10-28T08:01:50,845Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=3df1fa0c-005a-436e-bf4f-866cb9067429, invocation_id=96e432ce-b182-411c-8600-500d8b81cc5b, invocation_timestamp=2021-10-28T08:01:50.512Z, origin=Only For Testing, session_id=96e432ce-b182-411c-8600-500d8b81cc5b, session_timestamp=2021-10-28T08:01:50.512Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,846Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=3df1fa0c-005a-436e-bf4f-866cb9067429, invocation_id=96e432ce-b182-411c-8600-500d8b81cc5b, invocation_timestamp=2021-10-28T08:01:50.512Z, origin=Only For Testing, session_id=96e432ce-b182-411c-8600-500d8b81cc5b, session_timestamp=2021-10-28T08:01:50.512Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,852Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=3df1fa0c-005a-436e-bf4f-866cb9067429, invocation_id=96e432ce-b182-411c-8600-500d8b81cc5b, invocation_timestamp=2021-10-28T08:01:50.512Z, origin=Only For Testing, session_id=96e432ce-b182-411c-8600-500d8b81cc5b, session_timestamp=2021-10-28T08:01:50.512Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,881Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=4fe49e92-93ed-4d8b-9e64-e369339fd9a1, invocation_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, invocation_timestamp=2021-10-28T08:01:50.579Z, origin=O=Abbey, L=London, C=GB, session_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, session_timestamp=2021-10-28T08:01:50.579Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,975Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=4fe49e92-93ed-4d8b-9e64-e369339fd9a1, invocation_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, invocation_timestamp=2021-10-28T08:01:50.579Z, origin=O=Abbey, L=London, C=GB, session_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, session_timestamp=2021-10-28T08:01:50.579Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,981Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=4fe49e92-93ed-4d8b-9e64-e369339fd9a1, invocation_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, invocation_timestamp=2021-10-28T08:01:50.579Z, origin=O=Abbey, L=London, C=GB, session_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, session_timestamp=2021-10-28T08:01:50.579Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,986Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=4fe49e92-93ed-4d8b-9e64-e369339fd9a1, invocation_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, invocation_timestamp=2021-10-28T08:01:50.579Z, origin=O=Abbey, L=London, C=GB, session_id=5e182b50-b9e5-4cb1-9545-b125e23c646f, session_timestamp=2021-10-28T08:01:50.579Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,994Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=3df1fa0c-005a-436e-bf4f-866cb9067429, invocation_id=96e432ce-b182-411c-8600-500d8b81cc5b, invocation_timestamp=2021-10-28T08:01:50.512Z, origin=Only For Testing, session_id=96e432ce-b182-411c-8600-500d8b81cc5b, session_timestamp=2021-10-28T08:01:50.512Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:50,994Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=3df1fa0c-005a-436e-bf4f-866cb9067429, invocation_id=96e432ce-b182-411c-8600-500d8b81cc5b, invocation_timestamp=2021-10-28T08:01:50.512Z, origin=Only For Testing, session_id=96e432ce-b182-411c-8600-500d8b81cc5b, session_timestamp=2021-10-28T08:01:50.512Z, thread-id=206, tx_id=FE62CC03AE13C63309EAB3528D1131D7881061D92C7B103F5254DE3D06194232}
[INFO ] 2021-10-28T08:01:51,182Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=0d9f4ecf-3b53-4ee4-a072-bc21c5b6407b, invocation_id=11ca3ba6-b365-408d-ab78-76031ea1d447, invocation_timestamp=2021-10-28T08:01:51.005Z, origin=Only For Testing, session_id=11ca3ba6-b365-408d-ab78-76031ea1d447, session_timestamp=2021-10-28T08:01:51.005Z, thread-id=206, tx_id=96E0B784B46A0D6A2C9C77F2C0156066E47CA0460D227072DE99A7B8BFB534AB}
[INFO ] 2021-10-28T08:01:51,197Z [Mock network] corda.flow. - Received a notarisation request for Tx [96E0B784B46A0D6A2C9C77F2C0156066E47CA0460D227072DE99A7B8BFB534AB] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=85930829-3d64-4cba-9fc4-f15c3f927102, invocation_id=1f901492-8339-447b-9b1b-4757e8fafe71, invocation_timestamp=2021-10-28T08:01:51.190Z, origin=O=UK Mint, L=London, C=GB, session_id=1f901492-8339-447b-9b1b-4757e8fafe71, session_timestamp=2021-10-28T08:01:51.190Z, thread-id=206}
[INFO ] 2021-10-28T08:01:51,432Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:01:51,436Z [Mock network] corda.flow. - Transaction [96E0B784B46A0D6A2C9C77F2C0156066E47CA0460D227072DE99A7B8BFB534AB] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=85930829-3d64-4cba-9fc4-f15c3f927102, invocation_id=1f901492-8339-447b-9b1b-4757e8fafe71, invocation_timestamp=2021-10-28T08:01:51.190Z, origin=O=UK Mint, L=London, C=GB, session_id=1f901492-8339-447b-9b1b-4757e8fafe71, session_timestamp=2021-10-28T08:01:51.190Z, thread-id=206}
[INFO ] 2021-10-28T08:01:51,480Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=0d9f4ecf-3b53-4ee4-a072-bc21c5b6407b, invocation_id=11ca3ba6-b365-408d-ab78-76031ea1d447, invocation_timestamp=2021-10-28T08:01:51.005Z, origin=Only For Testing, session_id=11ca3ba6-b365-408d-ab78-76031ea1d447, session_timestamp=2021-10-28T08:01:51.005Z, thread-id=206, tx_id=96E0B784B46A0D6A2C9C77F2C0156066E47CA0460D227072DE99A7B8BFB534AB}
[INFO ] 2021-10-28T08:01:51,481Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=0d9f4ecf-3b53-4ee4-a072-bc21c5b6407b, invocation_id=11ca3ba6-b365-408d-ab78-76031ea1d447, invocation_timestamp=2021-10-28T08:01:51.005Z, origin=Only For Testing, session_id=11ca3ba6-b365-408d-ab78-76031ea1d447, session_timestamp=2021-10-28T08:01:51.005Z, thread-id=206, tx_id=96E0B784B46A0D6A2C9C77F2C0156066E47CA0460D227072DE99A7B8BFB534AB}
[INFO ] 2021-10-28T08:01:51,489Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=0d9f4ecf-3b53-4ee4-a072-bc21c5b6407b, invocation_id=11ca3ba6-b365-408d-ab78-76031ea1d447, invocation_timestamp=2021-10-28T08:01:51.005Z, origin=Only For Testing, session_id=11ca3ba6-b365-408d-ab78-76031ea1d447, session_timestamp=2021-10-28T08:01:51.005Z, thread-id=206, tx_id=96E0B784B46A0D6A2C9C77F2C0156066E47CA0460D227072DE99A7B8BFB534AB}
[INFO ] 2021-10-28T08:01:51,490Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=0d9f4ecf-3b53-4ee4-a072-bc21c5b6407b, invocation_id=11ca3ba6-b365-408d-ab78-76031ea1d447, invocation_timestamp=2021-10-28T08:01:51.005Z, origin=Only For Testing, session_id=11ca3ba6-b365-408d-ab78-76031ea1d447, session_timestamp=2021-10-28T08:01:51.005Z, thread-id=206, tx_id=96E0B784B46A0D6A2C9C77F2C0156066E47CA0460D227072DE99A7B8BFB534AB}
[INFO ] 2021-10-28T08:01:51,519Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T08:01:51,548Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:01:51,548Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:51,551Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T08:01:51,568Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:01:51,568Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:51,570Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T08:01:51,585Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:01:51,585Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:01:51,586Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T08:01:51,600Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:01:51,600Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:11,712Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/0/cordapps] {}
[INFO ] 2021-10-28T08:08:11,735Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:08:11,748Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:08:12,190Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:08:13,665Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:13,968Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:08:14,045Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:08:14,065Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:08:14,073Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh, alias: identity-private-key {}
[INFO ] 2021-10-28T08:08:14,231Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,231Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,232Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,232Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,232Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,235Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,235Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,236Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,239Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,240Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:08:14,241Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,300Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:14,390Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:08:02.500Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:08:21,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:08:21,088Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:08:21,094Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:08:23,938Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:08:24,237Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:08:24,248Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237), owningKey=DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh {}
[INFO ] 2021-10-28T08:08:24,248Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:08:24,401Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237) {}
[INFO ] 2021-10-28T08:08:24,458Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:08:24,485Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:08:24,487Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:08:24,554Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237), owningKey=DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh {}
[INFO ] 2021-10-28T08:08:24,554Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:24,666Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:08:24,684Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:08:24,697Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:08:24,793Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:08:24,903Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:08:24,906Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T08:08:25,528Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237) {}
[INFO ] 2021-10-28T08:08:25,539Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237), owningKey=DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh {}
[INFO ] 2021-10-28T08:08:25,539Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:25,539Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237), owningKey=DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh {}
[INFO ] 2021-10-28T08:08:25,539Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:25,558Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/1/cordapps] {}
[INFO ] 2021-10-28T08:08:25,558Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:08:25,576Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:08:25,590Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:08:25,651Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:25,654Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:08:25,655Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:08:25,699Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:08:25,699Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu, alias: identity-private-key {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,707Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,711Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:08:25,711Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,711Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:25,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:08:02.500Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:08:26,515Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:08:26,516Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:26,516Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:26,706Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:26,712Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:08:26,716Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712), owningKey=DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu {}
[INFO ] 2021-10-28T08:08:26,716Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:26,726Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712) {}
[INFO ] 2021-10-28T08:08:26,733Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:08:26,734Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:08:26,734Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:08:26,742Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712), owningKey=DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu {}
[INFO ] 2021-10-28T08:08:26,742Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:26,781Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:08:26,784Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:08:26,784Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:08:26,784Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:08:26,789Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:08:26,812Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712) {}
[INFO ] 2021-10-28T08:08:26,815Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237), owningKey=DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh {}
[INFO ] 2021-10-28T08:08:26,815Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:08:26,832Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712), owningKey=DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu {}
[INFO ] 2021-10-28T08:08:26,832Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:26,845Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712), owningKey=DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu {}
[INFO ] 2021-10-28T08:08:26,845Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:26,846Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712), owningKey=DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu {}
[INFO ] 2021-10-28T08:08:26,846Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:26,856Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/2/cordapps] {}
[INFO ] 2021-10-28T08:08:26,856Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:08:26,856Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:08:26,866Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:08:26,921Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:26,922Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:08:26,923Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:08:26,959Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:08:26,959Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg, alias: identity-private-key {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,966Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,967Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,967Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,967Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:08:26,967Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,967Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:26,971Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:08:02.500Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:08:27,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:08:27,583Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:27,583Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:27,770Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:27,776Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:08:27,779Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776), owningKey=DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg {}
[INFO ] 2021-10-28T08:08:27,779Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:27,787Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776) {}
[INFO ] 2021-10-28T08:08:27,795Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:08:27,795Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:08:27,795Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:08:27,802Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776), owningKey=DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg {}
[INFO ] 2021-10-28T08:08:27,802Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:27,845Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:08:27,849Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:08:27,849Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:08:27,849Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:08:27,860Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:08:27,887Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776) {}
[INFO ] 2021-10-28T08:08:27,890Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237), owningKey=DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh {}
[INFO ] 2021-10-28T08:08:27,890Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:08:27,904Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776), owningKey=DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg {}
[INFO ] 2021-10-28T08:08:27,904Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:27,924Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712), owningKey=DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu {}
[INFO ] 2021-10-28T08:08:27,924Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:27,936Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776), owningKey=DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg {}
[INFO ] 2021-10-28T08:08:27,936Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:28,022Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776), owningKey=DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg {}
[INFO ] 2021-10-28T08:08:28,022Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:28,023Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776), owningKey=DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg {}
[INFO ] 2021-10-28T08:08:28,023Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:28,033Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/3/cordapps] {}
[INFO ] 2021-10-28T08:08:28,034Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:08:28,034Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:08:28,042Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:08:28,099Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:28,099Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:08:28,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:08:28,134Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:08:28,134Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE, alias: identity-private-key {}
[INFO ] 2021-10-28T08:08:28,139Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,140Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,141Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:08:28,141Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,141Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:08:28,149Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:08:02.500Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:08:28,719Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:08:28,720Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:28,720Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:28,856Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:08:28,861Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:08:28,865Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861), owningKey=DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE {}
[INFO ] 2021-10-28T08:08:28,865Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:28,872Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861) {}
[INFO ] 2021-10-28T08:08:28,878Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:08:28,878Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:08:28,878Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:08:28,886Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861), owningKey=DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE {}
[INFO ] 2021-10-28T08:08:28,886Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:28,922Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:08:28,925Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:08:28,925Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080804.739-52E603941E10A4A6/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:08:28,925Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:08:28,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:08:28,950Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861) {}
[INFO ] 2021-10-28T08:08:28,952Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408504237), owningKey=DL5jcFLr9qEQgLhbQJPBKgLayTrom6nFHmAu8BgQMdB6vh {}
[INFO ] 2021-10-28T08:08:28,952Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:08:28,963Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861), owningKey=DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE {}
[INFO ] 2021-10-28T08:08:28,963Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:28,977Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408506712), owningKey=DLAKksckwXVzGZBKCVJgJx539NyPYNT3vqrKJK1cZx1qqu {}
[INFO ] 2021-10-28T08:08:28,977Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:28,999Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861), owningKey=DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE {}
[INFO ] 2021-10-28T08:08:28,999Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:29,011Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408507776), owningKey=DL2BfEkQg1ecMnxgEUvjc3UWMo1vg2ZsroDbmQ1PmztYbg {}
[INFO ] 2021-10-28T08:08:29,011Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:29,024Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861), owningKey=DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE {}
[INFO ] 2021-10-28T08:08:29,024Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:08:29,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861), owningKey=DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE {}
[INFO ] 2021-10-28T08:08:29,034Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:29,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408508861), owningKey=DLA6RC7fRQZ4q6USvjfs6JxRFNY5vGZoiM84s77Hrm7peE {}
[INFO ] 2021-10-28T08:08:29,034Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:08:30,129Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=23bf1432-d2cf-4964-98c9-11e199e82627, invocation_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, invocation_timestamp=2021-10-28T08:08:29.090Z, origin=Only For Testing, session_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, session_timestamp=2021-10-28T08:08:29.090Z, thread-id=205, tx_id=D71173A8F1447E9C70B2DC8495F5D350CF3B64880EA0F576E2F56DAB081DF069}
[INFO ] 2021-10-28T08:08:30,129Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=23bf1432-d2cf-4964-98c9-11e199e82627, invocation_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, invocation_timestamp=2021-10-28T08:08:29.090Z, origin=Only For Testing, session_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, session_timestamp=2021-10-28T08:08:29.090Z, thread-id=205, tx_id=D71173A8F1447E9C70B2DC8495F5D350CF3B64880EA0F576E2F56DAB081DF069}
[INFO ] 2021-10-28T08:08:30,310Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=23bf1432-d2cf-4964-98c9-11e199e82627, invocation_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, invocation_timestamp=2021-10-28T08:08:29.090Z, origin=Only For Testing, session_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, session_timestamp=2021-10-28T08:08:29.090Z, thread-id=205, tx_id=D71173A8F1447E9C70B2DC8495F5D350CF3B64880EA0F576E2F56DAB081DF069}
[INFO ] 2021-10-28T08:08:30,311Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=23bf1432-d2cf-4964-98c9-11e199e82627, invocation_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, invocation_timestamp=2021-10-28T08:08:29.090Z, origin=Only For Testing, session_id=3b4ee9d9-11d0-4c47-a909-4c6e29db00e8, session_timestamp=2021-10-28T08:08:29.090Z, thread-id=205, tx_id=D71173A8F1447E9C70B2DC8495F5D350CF3B64880EA0F576E2F56DAB081DF069}
[INFO ] 2021-10-28T08:08:30,768Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6dae9ecc-f06a-4c45-bc4f-46ac90de6e88, invocation_id=22747a4c-73e3-49a1-976f-49c95d9140a1, invocation_timestamp=2021-10-28T08:08:30.449Z, origin=Only For Testing, session_id=22747a4c-73e3-49a1-976f-49c95d9140a1, session_timestamp=2021-10-28T08:08:30.449Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:30,903Z [Mock network] corda.flow. - Received a notarisation request for Tx [ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=4d1d303d-eb88-4422-ad4c-d7f54f61823d, invocation_id=4f72af2e-673b-44dc-ab10-9c4239c6592a, invocation_timestamp=2021-10-28T08:08:30.839Z, origin=O=UK Mint, L=London, C=GB, session_id=4f72af2e-673b-44dc-ab10-9c4239c6592a, session_timestamp=2021-10-28T08:08:30.839Z, thread-id=205}
[INFO ] 2021-10-28T08:08:31,442Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:08:31,465Z [Mock network] corda.flow. - Transaction [ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=4d1d303d-eb88-4422-ad4c-d7f54f61823d, invocation_id=4f72af2e-673b-44dc-ab10-9c4239c6592a, invocation_timestamp=2021-10-28T08:08:30.839Z, origin=O=UK Mint, L=London, C=GB, session_id=4f72af2e-673b-44dc-ab10-9c4239c6592a, session_timestamp=2021-10-28T08:08:30.839Z, thread-id=205}
[INFO ] 2021-10-28T08:08:31,530Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6dae9ecc-f06a-4c45-bc4f-46ac90de6e88, invocation_id=22747a4c-73e3-49a1-976f-49c95d9140a1, invocation_timestamp=2021-10-28T08:08:30.449Z, origin=Only For Testing, session_id=22747a4c-73e3-49a1-976f-49c95d9140a1, session_timestamp=2021-10-28T08:08:30.449Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,536Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6dae9ecc-f06a-4c45-bc4f-46ac90de6e88, invocation_id=22747a4c-73e3-49a1-976f-49c95d9140a1, invocation_timestamp=2021-10-28T08:08:30.449Z, origin=Only For Testing, session_id=22747a4c-73e3-49a1-976f-49c95d9140a1, session_timestamp=2021-10-28T08:08:30.449Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,554Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6dae9ecc-f06a-4c45-bc4f-46ac90de6e88, invocation_id=22747a4c-73e3-49a1-976f-49c95d9140a1, invocation_timestamp=2021-10-28T08:08:30.449Z, origin=Only For Testing, session_id=22747a4c-73e3-49a1-976f-49c95d9140a1, session_timestamp=2021-10-28T08:08:30.449Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,610Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=8581f182-e3c0-4d2c-b87b-b7ca7a1e8d40, invocation_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, invocation_timestamp=2021-10-28T08:08:30.975Z, origin=O=UK Mint, L=London, C=GB, session_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, session_timestamp=2021-10-28T08:08:30.975Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,792Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=8581f182-e3c0-4d2c-b87b-b7ca7a1e8d40, invocation_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, invocation_timestamp=2021-10-28T08:08:30.975Z, origin=O=UK Mint, L=London, C=GB, session_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, session_timestamp=2021-10-28T08:08:30.975Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,804Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=8581f182-e3c0-4d2c-b87b-b7ca7a1e8d40, invocation_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, invocation_timestamp=2021-10-28T08:08:30.975Z, origin=O=UK Mint, L=London, C=GB, session_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, session_timestamp=2021-10-28T08:08:30.975Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,817Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=8581f182-e3c0-4d2c-b87b-b7ca7a1e8d40, invocation_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, invocation_timestamp=2021-10-28T08:08:30.975Z, origin=O=UK Mint, L=London, C=GB, session_id=95c62e98-87ae-43b9-aca9-cb39624c7b44, session_timestamp=2021-10-28T08:08:30.975Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,833Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6dae9ecc-f06a-4c45-bc4f-46ac90de6e88, invocation_id=22747a4c-73e3-49a1-976f-49c95d9140a1, invocation_timestamp=2021-10-28T08:08:30.449Z, origin=Only For Testing, session_id=22747a4c-73e3-49a1-976f-49c95d9140a1, session_timestamp=2021-10-28T08:08:30.449Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,833Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=6dae9ecc-f06a-4c45-bc4f-46ac90de6e88, invocation_id=22747a4c-73e3-49a1-976f-49c95d9140a1, invocation_timestamp=2021-10-28T08:08:30.449Z, origin=Only For Testing, session_id=22747a4c-73e3-49a1-976f-49c95d9140a1, session_timestamp=2021-10-28T08:08:30.449Z, thread-id=205, tx_id=ADE54139F44B6375E99FBAA7D85AEBDEBD045B7B89F173351F9C23518EAA38A4}
[INFO ] 2021-10-28T08:08:31,947Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=4826d754-9109-438f-ba36-0328290dd9f0, invocation_id=a7462ebc-6799-4df1-9e72-e6b767610766, invocation_timestamp=2021-10-28T08:08:31.850Z, origin=Only For Testing, session_id=a7462ebc-6799-4df1-9e72-e6b767610766, session_timestamp=2021-10-28T08:08:31.850Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,015Z [Mock network] corda.flow. - Received a notarisation request for Tx [FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=81f96082-651a-4a6d-adfa-5f9368192527, invocation_id=98145ca3-a943-4387-8c2b-894aec5a7a54, invocation_timestamp=2021-10-28T08:08:31.962Z, origin=O=Abbey, L=London, C=GB, session_id=98145ca3-a943-4387-8c2b-894aec5a7a54, session_timestamp=2021-10-28T08:08:31.962Z, thread-id=205}
[INFO ] 2021-10-28T08:08:32,268Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:08:32,273Z [Mock network] corda.flow. - Transaction [FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=81f96082-651a-4a6d-adfa-5f9368192527, invocation_id=98145ca3-a943-4387-8c2b-894aec5a7a54, invocation_timestamp=2021-10-28T08:08:31.962Z, origin=O=Abbey, L=London, C=GB, session_id=98145ca3-a943-4387-8c2b-894aec5a7a54, session_timestamp=2021-10-28T08:08:31.962Z, thread-id=205}
[INFO ] 2021-10-28T08:08:32,317Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=4826d754-9109-438f-ba36-0328290dd9f0, invocation_id=a7462ebc-6799-4df1-9e72-e6b767610766, invocation_timestamp=2021-10-28T08:08:31.850Z, origin=Only For Testing, session_id=a7462ebc-6799-4df1-9e72-e6b767610766, session_timestamp=2021-10-28T08:08:31.850Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,319Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=4826d754-9109-438f-ba36-0328290dd9f0, invocation_id=a7462ebc-6799-4df1-9e72-e6b767610766, invocation_timestamp=2021-10-28T08:08:31.850Z, origin=Only For Testing, session_id=a7462ebc-6799-4df1-9e72-e6b767610766, session_timestamp=2021-10-28T08:08:31.850Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,327Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=4826d754-9109-438f-ba36-0328290dd9f0, invocation_id=a7462ebc-6799-4df1-9e72-e6b767610766, invocation_timestamp=2021-10-28T08:08:31.850Z, origin=Only For Testing, session_id=a7462ebc-6799-4df1-9e72-e6b767610766, session_timestamp=2021-10-28T08:08:31.850Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,344Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=e9f76f55-a3ed-46e3-a2bf-f70279fc7362, invocation_id=3de09b85-d752-4670-b97e-52aa23df74c7, invocation_timestamp=2021-10-28T08:08:32.037Z, origin=O=Abbey, L=London, C=GB, session_id=3de09b85-d752-4670-b97e-52aa23df74c7, session_timestamp=2021-10-28T08:08:32.037Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,518Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=e9f76f55-a3ed-46e3-a2bf-f70279fc7362, invocation_id=3de09b85-d752-4670-b97e-52aa23df74c7, invocation_timestamp=2021-10-28T08:08:32.037Z, origin=O=Abbey, L=London, C=GB, session_id=3de09b85-d752-4670-b97e-52aa23df74c7, session_timestamp=2021-10-28T08:08:32.037Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,526Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=e9f76f55-a3ed-46e3-a2bf-f70279fc7362, invocation_id=3de09b85-d752-4670-b97e-52aa23df74c7, invocation_timestamp=2021-10-28T08:08:32.037Z, origin=O=Abbey, L=London, C=GB, session_id=3de09b85-d752-4670-b97e-52aa23df74c7, session_timestamp=2021-10-28T08:08:32.037Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,537Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=e9f76f55-a3ed-46e3-a2bf-f70279fc7362, invocation_id=3de09b85-d752-4670-b97e-52aa23df74c7, invocation_timestamp=2021-10-28T08:08:32.037Z, origin=O=Abbey, L=London, C=GB, session_id=3de09b85-d752-4670-b97e-52aa23df74c7, session_timestamp=2021-10-28T08:08:32.037Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,552Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=4826d754-9109-438f-ba36-0328290dd9f0, invocation_id=a7462ebc-6799-4df1-9e72-e6b767610766, invocation_timestamp=2021-10-28T08:08:31.850Z, origin=Only For Testing, session_id=a7462ebc-6799-4df1-9e72-e6b767610766, session_timestamp=2021-10-28T08:08:31.850Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,552Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=4826d754-9109-438f-ba36-0328290dd9f0, invocation_id=a7462ebc-6799-4df1-9e72-e6b767610766, invocation_timestamp=2021-10-28T08:08:31.850Z, origin=Only For Testing, session_id=a7462ebc-6799-4df1-9e72-e6b767610766, session_timestamp=2021-10-28T08:08:31.850Z, thread-id=205, tx_id=FD7AFB612958D8A09EAE6C8A33322AE111629FA60A4FAC3818E6993067BE374D}
[INFO ] 2021-10-28T08:08:32,653Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=60da5ea7-f814-4eb8-8bb6-f75823dc7483, invocation_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, invocation_timestamp=2021-10-28T08:08:32.565Z, origin=Only For Testing, session_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, session_timestamp=2021-10-28T08:08:32.565Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:32,692Z [Mock network] corda.flow. - Received a notarisation request for Tx [11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=7a8d1dca-72cc-4121-ae06-97de9d910e93, invocation_id=63575af0-f9ce-44a9-9563-a9e879857b4b, invocation_timestamp=2021-10-28T08:08:32.668Z, origin=O=HSBC, L=London, C=GB, session_id=63575af0-f9ce-44a9-9563-a9e879857b4b, session_timestamp=2021-10-28T08:08:32.668Z, thread-id=205}
[INFO ] 2021-10-28T08:08:32,880Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:08:32,885Z [Mock network] corda.flow. - Transaction [11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=7a8d1dca-72cc-4121-ae06-97de9d910e93, invocation_id=63575af0-f9ce-44a9-9563-a9e879857b4b, invocation_timestamp=2021-10-28T08:08:32.668Z, origin=O=HSBC, L=London, C=GB, session_id=63575af0-f9ce-44a9-9563-a9e879857b4b, session_timestamp=2021-10-28T08:08:32.668Z, thread-id=205}
[INFO ] 2021-10-28T08:08:32,911Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=60da5ea7-f814-4eb8-8bb6-f75823dc7483, invocation_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, invocation_timestamp=2021-10-28T08:08:32.565Z, origin=Only For Testing, session_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, session_timestamp=2021-10-28T08:08:32.565Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:32,914Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=60da5ea7-f814-4eb8-8bb6-f75823dc7483, invocation_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, invocation_timestamp=2021-10-28T08:08:32.565Z, origin=Only For Testing, session_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, session_timestamp=2021-10-28T08:08:32.565Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:32,924Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=60da5ea7-f814-4eb8-8bb6-f75823dc7483, invocation_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, invocation_timestamp=2021-10-28T08:08:32.565Z, origin=Only For Testing, session_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, session_timestamp=2021-10-28T08:08:32.565Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:32,955Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=335fa5b2-62ac-4471-9133-7946e47e2801, invocation_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, invocation_timestamp=2021-10-28T08:08:32.730Z, origin=O=HSBC, L=London, C=GB, session_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, session_timestamp=2021-10-28T08:08:32.730Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:33,402Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=335fa5b2-62ac-4471-9133-7946e47e2801, invocation_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, invocation_timestamp=2021-10-28T08:08:32.730Z, origin=O=HSBC, L=London, C=GB, session_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, session_timestamp=2021-10-28T08:08:32.730Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:33,409Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=335fa5b2-62ac-4471-9133-7946e47e2801, invocation_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, invocation_timestamp=2021-10-28T08:08:32.730Z, origin=O=HSBC, L=London, C=GB, session_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, session_timestamp=2021-10-28T08:08:32.730Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:33,417Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=335fa5b2-62ac-4471-9133-7946e47e2801, invocation_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, invocation_timestamp=2021-10-28T08:08:32.730Z, origin=O=HSBC, L=London, C=GB, session_id=1a27e99e-32fe-4c15-a79c-91e985dc58ac, session_timestamp=2021-10-28T08:08:32.730Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:33,457Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=60da5ea7-f814-4eb8-8bb6-f75823dc7483, invocation_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, invocation_timestamp=2021-10-28T08:08:32.565Z, origin=Only For Testing, session_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, session_timestamp=2021-10-28T08:08:32.565Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:33,457Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=60da5ea7-f814-4eb8-8bb6-f75823dc7483, invocation_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, invocation_timestamp=2021-10-28T08:08:32.565Z, origin=Only For Testing, session_id=53e8916f-951b-4a3b-b4d2-b79de0360a8f, session_timestamp=2021-10-28T08:08:32.565Z, thread-id=205, tx_id=11D2561D1047623EF91C531D84E775978F3817E7802AEA0FC53C1D88BF8B9CBC}
[INFO ] 2021-10-28T08:08:33,525Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=26c9216e-c134-4c56-b376-9d3bb936ab03, invocation_id=c43ec650-78d4-43ca-90bd-b578dffee13a, invocation_timestamp=2021-10-28T08:08:33.471Z, origin=Only For Testing, session_id=c43ec650-78d4-43ca-90bd-b578dffee13a, session_timestamp=2021-10-28T08:08:33.471Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,540Z [Mock network] corda.flow. - Received a notarisation request for Tx [87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=2edd0b8d-c99c-4dbf-95d1-35b9c0dacbc6, invocation_id=64ae22f0-a040-4f29-8fb9-cf283ccf3b6c, invocation_timestamp=2021-10-28T08:08:33.534Z, origin=O=Abbey, L=London, C=GB, session_id=64ae22f0-a040-4f29-8fb9-cf283ccf3b6c, session_timestamp=2021-10-28T08:08:33.534Z, thread-id=205}
[INFO ] 2021-10-28T08:08:33,701Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:08:33,706Z [Mock network] corda.flow. - Transaction [87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=2edd0b8d-c99c-4dbf-95d1-35b9c0dacbc6, invocation_id=64ae22f0-a040-4f29-8fb9-cf283ccf3b6c, invocation_timestamp=2021-10-28T08:08:33.534Z, origin=O=Abbey, L=London, C=GB, session_id=64ae22f0-a040-4f29-8fb9-cf283ccf3b6c, session_timestamp=2021-10-28T08:08:33.534Z, thread-id=205}
[INFO ] 2021-10-28T08:08:33,725Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=26c9216e-c134-4c56-b376-9d3bb936ab03, invocation_id=c43ec650-78d4-43ca-90bd-b578dffee13a, invocation_timestamp=2021-10-28T08:08:33.471Z, origin=Only For Testing, session_id=c43ec650-78d4-43ca-90bd-b578dffee13a, session_timestamp=2021-10-28T08:08:33.471Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,726Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=26c9216e-c134-4c56-b376-9d3bb936ab03, invocation_id=c43ec650-78d4-43ca-90bd-b578dffee13a, invocation_timestamp=2021-10-28T08:08:33.471Z, origin=Only For Testing, session_id=c43ec650-78d4-43ca-90bd-b578dffee13a, session_timestamp=2021-10-28T08:08:33.471Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,732Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=26c9216e-c134-4c56-b376-9d3bb936ab03, invocation_id=c43ec650-78d4-43ca-90bd-b578dffee13a, invocation_timestamp=2021-10-28T08:08:33.471Z, origin=Only For Testing, session_id=c43ec650-78d4-43ca-90bd-b578dffee13a, session_timestamp=2021-10-28T08:08:33.471Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,752Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=04f4fdf8-ad9a-4550-9a1b-2ae0b134ea66, invocation_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, invocation_timestamp=2021-10-28T08:08:33.547Z, origin=O=Abbey, L=London, C=GB, session_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, session_timestamp=2021-10-28T08:08:33.547Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,850Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=04f4fdf8-ad9a-4550-9a1b-2ae0b134ea66, invocation_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, invocation_timestamp=2021-10-28T08:08:33.547Z, origin=O=Abbey, L=London, C=GB, session_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, session_timestamp=2021-10-28T08:08:33.547Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,854Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=04f4fdf8-ad9a-4550-9a1b-2ae0b134ea66, invocation_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, invocation_timestamp=2021-10-28T08:08:33.547Z, origin=O=Abbey, L=London, C=GB, session_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, session_timestamp=2021-10-28T08:08:33.547Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,861Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=04f4fdf8-ad9a-4550-9a1b-2ae0b134ea66, invocation_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, invocation_timestamp=2021-10-28T08:08:33.547Z, origin=O=Abbey, L=London, C=GB, session_id=e8e803c9-aa43-4af5-b6bd-2884c34918c3, session_timestamp=2021-10-28T08:08:33.547Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,872Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=26c9216e-c134-4c56-b376-9d3bb936ab03, invocation_id=c43ec650-78d4-43ca-90bd-b578dffee13a, invocation_timestamp=2021-10-28T08:08:33.471Z, origin=Only For Testing, session_id=c43ec650-78d4-43ca-90bd-b578dffee13a, session_timestamp=2021-10-28T08:08:33.471Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:33,872Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=26c9216e-c134-4c56-b376-9d3bb936ab03, invocation_id=c43ec650-78d4-43ca-90bd-b578dffee13a, invocation_timestamp=2021-10-28T08:08:33.471Z, origin=Only For Testing, session_id=c43ec650-78d4-43ca-90bd-b578dffee13a, session_timestamp=2021-10-28T08:08:33.471Z, thread-id=205, tx_id=87490C1E250D2060F726C25825126128644A8499D701216117C1F1706889DED9}
[INFO ] 2021-10-28T08:08:34,066Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b1954b92-831e-4b9b-b02c-6f6d59821342, invocation_id=a74e6d22-da80-4b0a-9320-8a17710b8698, invocation_timestamp=2021-10-28T08:08:33.884Z, origin=Only For Testing, session_id=a74e6d22-da80-4b0a-9320-8a17710b8698, session_timestamp=2021-10-28T08:08:33.884Z, thread-id=205, tx_id=AA309326AA54A6501D37654F045376DAC52E187D3CB66017523FF54F7BF90E56}
[INFO ] 2021-10-28T08:08:34,084Z [Mock network] corda.flow. - Received a notarisation request for Tx [AA309326AA54A6501D37654F045376DAC52E187D3CB66017523FF54F7BF90E56] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=5501346f-9d49-46ff-a81d-96c7bce0e1f5, invocation_id=9ea34310-53b7-4d93-9c58-5f9289c5d2ef, invocation_timestamp=2021-10-28T08:08:34.074Z, origin=O=UK Mint, L=London, C=GB, session_id=9ea34310-53b7-4d93-9c58-5f9289c5d2ef, session_timestamp=2021-10-28T08:08:34.074Z, thread-id=205}
[INFO ] 2021-10-28T08:08:34,319Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:08:34,323Z [Mock network] corda.flow. - Transaction [AA309326AA54A6501D37654F045376DAC52E187D3CB66017523FF54F7BF90E56] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=5501346f-9d49-46ff-a81d-96c7bce0e1f5, invocation_id=9ea34310-53b7-4d93-9c58-5f9289c5d2ef, invocation_timestamp=2021-10-28T08:08:34.074Z, origin=O=UK Mint, L=London, C=GB, session_id=9ea34310-53b7-4d93-9c58-5f9289c5d2ef, session_timestamp=2021-10-28T08:08:34.074Z, thread-id=205}
[INFO ] 2021-10-28T08:08:34,367Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b1954b92-831e-4b9b-b02c-6f6d59821342, invocation_id=a74e6d22-da80-4b0a-9320-8a17710b8698, invocation_timestamp=2021-10-28T08:08:33.884Z, origin=Only For Testing, session_id=a74e6d22-da80-4b0a-9320-8a17710b8698, session_timestamp=2021-10-28T08:08:33.884Z, thread-id=205, tx_id=AA309326AA54A6501D37654F045376DAC52E187D3CB66017523FF54F7BF90E56}
[INFO ] 2021-10-28T08:08:34,369Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b1954b92-831e-4b9b-b02c-6f6d59821342, invocation_id=a74e6d22-da80-4b0a-9320-8a17710b8698, invocation_timestamp=2021-10-28T08:08:33.884Z, origin=Only For Testing, session_id=a74e6d22-da80-4b0a-9320-8a17710b8698, session_timestamp=2021-10-28T08:08:33.884Z, thread-id=205, tx_id=AA309326AA54A6501D37654F045376DAC52E187D3CB66017523FF54F7BF90E56}
[INFO ] 2021-10-28T08:08:34,376Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b1954b92-831e-4b9b-b02c-6f6d59821342, invocation_id=a74e6d22-da80-4b0a-9320-8a17710b8698, invocation_timestamp=2021-10-28T08:08:33.884Z, origin=Only For Testing, session_id=a74e6d22-da80-4b0a-9320-8a17710b8698, session_timestamp=2021-10-28T08:08:33.884Z, thread-id=205, tx_id=AA309326AA54A6501D37654F045376DAC52E187D3CB66017523FF54F7BF90E56}
[INFO ] 2021-10-28T08:08:34,376Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b1954b92-831e-4b9b-b02c-6f6d59821342, invocation_id=a74e6d22-da80-4b0a-9320-8a17710b8698, invocation_timestamp=2021-10-28T08:08:33.884Z, origin=Only For Testing, session_id=a74e6d22-da80-4b0a-9320-8a17710b8698, session_timestamp=2021-10-28T08:08:33.884Z, thread-id=205, tx_id=AA309326AA54A6501D37654F045376DAC52E187D3CB66017523FF54F7BF90E56}
[INFO ] 2021-10-28T08:08:34,405Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T08:08:34,437Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:08:34,437Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:34,442Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T08:08:34,468Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:08:34,468Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:34,469Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T08:08:34,502Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:08:34,502Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:08:34,504Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T08:08:34,518Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:08:34,518Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:09:45,713Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/0/cordapps] {}
[INFO ] 2021-10-28T08:09:45,741Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:09:45,753Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:09:46,209Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:09:47,663Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:09:47,966Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:09:48,050Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:09:48,071Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:09:48,076Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v, alias: identity-private-key {}
[INFO ] 2021-10-28T08:09:48,232Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,233Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,234Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,235Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,235Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,236Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,236Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:09:48,238Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,283Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:09:48,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:09:37.146Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:09:56,613Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:09:56,682Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:09:56,688Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:09:59,512Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:09:59,812Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:09:59,819Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812), owningKey=DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v {}
[INFO ] 2021-10-28T08:09:59,819Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:09:59,991Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812) {}
[INFO ] 2021-10-28T08:10:00,044Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:10:00,073Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:10:00,074Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:10:00,122Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812), owningKey=DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v {}
[INFO ] 2021-10-28T08:10:00,123Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:00,282Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:10:00,298Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:10:00,310Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:10:00,416Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:10:00,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:10:00,538Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T08:10:01,177Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812) {}
[INFO ] 2021-10-28T08:10:01,195Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812), owningKey=DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v {}
[INFO ] 2021-10-28T08:10:01,196Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:01,196Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812), owningKey=DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v {}
[INFO ] 2021-10-28T08:10:01,196Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:01,217Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/1/cordapps] {}
[INFO ] 2021-10-28T08:10:01,217Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:10:01,217Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:10:01,256Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:10:01,362Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:10:01,364Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:10:01,368Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:10:01,492Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:10:01,492Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP, alias: identity-private-key {}
[INFO ] 2021-10-28T08:10:01,504Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,504Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,504Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,505Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:10:01,527Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:09:37.146Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:10:02,450Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:10:02,452Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:02,452Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:02,655Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:02,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:10:02,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664), owningKey=DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP {}
[INFO ] 2021-10-28T08:10:02,669Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:02,682Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664) {}
[INFO ] 2021-10-28T08:10:02,690Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:10:02,693Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:10:02,693Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:10:02,699Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664), owningKey=DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP {}
[INFO ] 2021-10-28T08:10:02,699Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:02,763Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:10:02,776Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:10:02,779Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:10:02,780Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:10:02,804Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:10:02,833Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664) {}
[INFO ] 2021-10-28T08:10:02,838Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812), owningKey=DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v {}
[INFO ] 2021-10-28T08:10:02,838Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:10:02,854Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664), owningKey=DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP {}
[INFO ] 2021-10-28T08:10:02,854Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:02,867Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664), owningKey=DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP {}
[INFO ] 2021-10-28T08:10:02,867Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:02,867Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664), owningKey=DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP {}
[INFO ] 2021-10-28T08:10:02,867Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:02,884Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/2/cordapps] {}
[INFO ] 2021-10-28T08:10:02,885Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:10:02,885Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:10:02,895Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:10:02,937Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:10:02,939Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:10:02,941Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:10:02,980Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:10:02,980Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu, alias: identity-private-key {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,990Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,991Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,991Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,991Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,991Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:10:02,991Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,991Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:10:02,996Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:09:37.146Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:10:03,768Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:10:03,772Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:03,772Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:03,993Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:03,999Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:10:04,004Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999), owningKey=DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu {}
[INFO ] 2021-10-28T08:10:04,004Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:04,014Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999) {}
[INFO ] 2021-10-28T08:10:04,022Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:10:04,022Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:10:04,022Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:10:04,029Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999), owningKey=DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu {}
[INFO ] 2021-10-28T08:10:04,029Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:04,069Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:10:04,072Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:10:04,072Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:10:04,072Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:10:04,079Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:10:04,107Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999) {}
[INFO ] 2021-10-28T08:10:04,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812), owningKey=DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v {}
[INFO ] 2021-10-28T08:10:04,112Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:10:04,128Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999), owningKey=DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu {}
[INFO ] 2021-10-28T08:10:04,128Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:04,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664), owningKey=DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP {}
[INFO ] 2021-10-28T08:10:04,142Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:04,155Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999), owningKey=DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu {}
[INFO ] 2021-10-28T08:10:04,155Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:04,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999), owningKey=DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu {}
[INFO ] 2021-10-28T08:10:04,165Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:04,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999), owningKey=DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu {}
[INFO ] 2021-10-28T08:10:04,165Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:04,175Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/3/cordapps] {}
[INFO ] 2021-10-28T08:10:04,175Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:10:04,175Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:10:04,199Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:10:04,274Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:10:04,276Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:10:04,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:10:04,324Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:10:04,324Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ, alias: identity-private-key {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,332Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:10:04,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:09:37.146Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:10:04,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:10:04,958Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:04,959Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:05,203Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:10:05,209Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:10:05,216Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209), owningKey=DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ {}
[INFO ] 2021-10-28T08:10:05,216Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:05,224Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209) {}
[INFO ] 2021-10-28T08:10:05,244Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:10:05,245Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:10:05,246Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:10:05,253Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209), owningKey=DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ {}
[INFO ] 2021-10-28T08:10:05,253Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:05,297Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:10:05,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:10:05,301Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-080939.088-D700D39BCF68EB5D/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:10:05,301Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:10:05,315Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:10:05,338Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209) {}
[INFO ] 2021-10-28T08:10:05,342Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635408599812), owningKey=DL2vMTSvDmsnxZzqKC9LpiGfzDJPECgmYbeTk2yLFfp22v {}
[INFO ] 2021-10-28T08:10:05,342Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:10:05,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209), owningKey=DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ {}
[INFO ] 2021-10-28T08:10:05,355Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:05,369Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635408602664), owningKey=DLFa7sHew68v3mVzNvYuf49YJEFkeQg9G95mdLvegGorEP {}
[INFO ] 2021-10-28T08:10:05,369Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:05,381Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209), owningKey=DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ {}
[INFO ] 2021-10-28T08:10:05,381Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:05,393Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635408603999), owningKey=DL2pWSSaUXy642bxxJQAgnTfvf5S9YXCZeJWRcpkBY5icu {}
[INFO ] 2021-10-28T08:10:05,393Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:05,404Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209), owningKey=DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ {}
[INFO ] 2021-10-28T08:10:05,404Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:10:05,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209), owningKey=DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ {}
[INFO ] 2021-10-28T08:10:05,415Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:05,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635408605209), owningKey=DLJE8vZNZQBtkPp1oTjtHNgiNXv4ayhbD9Ka1igVCQo7HZ {}
[INFO ] 2021-10-28T08:10:05,415Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:10:06,572Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=015e352f-721c-4769-ac34-de7b22764835, invocation_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, invocation_timestamp=2021-10-28T08:10:05.465Z, origin=Only For Testing, session_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, session_timestamp=2021-10-28T08:10:05.465Z, thread-id=206, tx_id=AC008ED6F388B50E9FDC56A8953C4C4D2B69902DA814E6BEB77056066F932A42}
[INFO ] 2021-10-28T08:10:06,572Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=015e352f-721c-4769-ac34-de7b22764835, invocation_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, invocation_timestamp=2021-10-28T08:10:05.465Z, origin=Only For Testing, session_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, session_timestamp=2021-10-28T08:10:05.465Z, thread-id=206, tx_id=AC008ED6F388B50E9FDC56A8953C4C4D2B69902DA814E6BEB77056066F932A42}
[INFO ] 2021-10-28T08:10:06,705Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=015e352f-721c-4769-ac34-de7b22764835, invocation_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, invocation_timestamp=2021-10-28T08:10:05.465Z, origin=Only For Testing, session_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, session_timestamp=2021-10-28T08:10:05.465Z, thread-id=206, tx_id=AC008ED6F388B50E9FDC56A8953C4C4D2B69902DA814E6BEB77056066F932A42}
[INFO ] 2021-10-28T08:10:06,705Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=015e352f-721c-4769-ac34-de7b22764835, invocation_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, invocation_timestamp=2021-10-28T08:10:05.465Z, origin=Only For Testing, session_id=0065eeba-741b-4523-8227-9c5e38d0b8b6, session_timestamp=2021-10-28T08:10:05.465Z, thread-id=206, tx_id=AC008ED6F388B50E9FDC56A8953C4C4D2B69902DA814E6BEB77056066F932A42}
[INFO ] 2021-10-28T08:10:07,199Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=abcb53dd-ee31-4aa2-9270-76c43f184837, invocation_id=d9aec564-3578-463e-a609-3102ae44b734, invocation_timestamp=2021-10-28T08:10:06.879Z, origin=Only For Testing, session_id=d9aec564-3578-463e-a609-3102ae44b734, session_timestamp=2021-10-28T08:10:06.879Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:07,295Z [Mock network] corda.flow. - Received a notarisation request for Tx [21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=50771a5c-e907-4e40-b171-57408bc84d3c, invocation_id=57079a96-71f4-4e56-826f-f1f8ee0f4d81, invocation_timestamp=2021-10-28T08:10:07.261Z, origin=O=UK Mint, L=London, C=GB, session_id=57079a96-71f4-4e56-826f-f1f8ee0f4d81, session_timestamp=2021-10-28T08:10:07.261Z, thread-id=206}
[INFO ] 2021-10-28T08:10:07,716Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:10:07,734Z [Mock network] corda.flow. - Transaction [21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=50771a5c-e907-4e40-b171-57408bc84d3c, invocation_id=57079a96-71f4-4e56-826f-f1f8ee0f4d81, invocation_timestamp=2021-10-28T08:10:07.261Z, origin=O=UK Mint, L=London, C=GB, session_id=57079a96-71f4-4e56-826f-f1f8ee0f4d81, session_timestamp=2021-10-28T08:10:07.261Z, thread-id=206}
[INFO ] 2021-10-28T08:10:07,792Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=abcb53dd-ee31-4aa2-9270-76c43f184837, invocation_id=d9aec564-3578-463e-a609-3102ae44b734, invocation_timestamp=2021-10-28T08:10:06.879Z, origin=Only For Testing, session_id=d9aec564-3578-463e-a609-3102ae44b734, session_timestamp=2021-10-28T08:10:06.879Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:07,794Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=abcb53dd-ee31-4aa2-9270-76c43f184837, invocation_id=d9aec564-3578-463e-a609-3102ae44b734, invocation_timestamp=2021-10-28T08:10:06.879Z, origin=Only For Testing, session_id=d9aec564-3578-463e-a609-3102ae44b734, session_timestamp=2021-10-28T08:10:06.879Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:07,810Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=abcb53dd-ee31-4aa2-9270-76c43f184837, invocation_id=d9aec564-3578-463e-a609-3102ae44b734, invocation_timestamp=2021-10-28T08:10:06.879Z, origin=Only For Testing, session_id=d9aec564-3578-463e-a609-3102ae44b734, session_timestamp=2021-10-28T08:10:06.879Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:07,847Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=ccf0ff20-baff-43fb-a9a4-649da0dd8a61, invocation_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, invocation_timestamp=2021-10-28T08:10:07.369Z, origin=O=UK Mint, L=London, C=GB, session_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, session_timestamp=2021-10-28T08:10:07.369Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:07,996Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=ccf0ff20-baff-43fb-a9a4-649da0dd8a61, invocation_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, invocation_timestamp=2021-10-28T08:10:07.369Z, origin=O=UK Mint, L=London, C=GB, session_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, session_timestamp=2021-10-28T08:10:07.369Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:08,010Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=ccf0ff20-baff-43fb-a9a4-649da0dd8a61, invocation_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, invocation_timestamp=2021-10-28T08:10:07.369Z, origin=O=UK Mint, L=London, C=GB, session_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, session_timestamp=2021-10-28T08:10:07.369Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:08,030Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=ccf0ff20-baff-43fb-a9a4-649da0dd8a61, invocation_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, invocation_timestamp=2021-10-28T08:10:07.369Z, origin=O=UK Mint, L=London, C=GB, session_id=2ccade64-0db4-47f7-bdce-d4897c5e4dbb, session_timestamp=2021-10-28T08:10:07.369Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:08,051Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=abcb53dd-ee31-4aa2-9270-76c43f184837, invocation_id=d9aec564-3578-463e-a609-3102ae44b734, invocation_timestamp=2021-10-28T08:10:06.879Z, origin=Only For Testing, session_id=d9aec564-3578-463e-a609-3102ae44b734, session_timestamp=2021-10-28T08:10:06.879Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:08,051Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=abcb53dd-ee31-4aa2-9270-76c43f184837, invocation_id=d9aec564-3578-463e-a609-3102ae44b734, invocation_timestamp=2021-10-28T08:10:06.879Z, origin=Only For Testing, session_id=d9aec564-3578-463e-a609-3102ae44b734, session_timestamp=2021-10-28T08:10:06.879Z, thread-id=206, tx_id=21EB89D63C24041C01EDC35542740798A6E1861F98EAB35407E2033E0BEA5CEC}
[INFO ] 2021-10-28T08:10:08,163Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae0c53fd-28eb-42a1-9158-a45f006fdc9a, invocation_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, invocation_timestamp=2021-10-28T08:10:08.072Z, origin=Only For Testing, session_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, session_timestamp=2021-10-28T08:10:08.072Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,185Z [Mock network] corda.flow. - Received a notarisation request for Tx [49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=5e466d8d-e5dd-46e2-a0d8-53a3234a4641, invocation_id=310bf19e-0a9e-4c42-ae1e-767295dbb78a, invocation_timestamp=2021-10-28T08:10:08.174Z, origin=O=Abbey, L=London, C=GB, session_id=310bf19e-0a9e-4c42-ae1e-767295dbb78a, session_timestamp=2021-10-28T08:10:08.174Z, thread-id=206}
[INFO ] 2021-10-28T08:10:08,342Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:10:08,350Z [Mock network] corda.flow. - Transaction [49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=5e466d8d-e5dd-46e2-a0d8-53a3234a4641, invocation_id=310bf19e-0a9e-4c42-ae1e-767295dbb78a, invocation_timestamp=2021-10-28T08:10:08.174Z, origin=O=Abbey, L=London, C=GB, session_id=310bf19e-0a9e-4c42-ae1e-767295dbb78a, session_timestamp=2021-10-28T08:10:08.174Z, thread-id=206}
[INFO ] 2021-10-28T08:10:08,404Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae0c53fd-28eb-42a1-9158-a45f006fdc9a, invocation_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, invocation_timestamp=2021-10-28T08:10:08.072Z, origin=Only For Testing, session_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, session_timestamp=2021-10-28T08:10:08.072Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,407Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae0c53fd-28eb-42a1-9158-a45f006fdc9a, invocation_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, invocation_timestamp=2021-10-28T08:10:08.072Z, origin=Only For Testing, session_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, session_timestamp=2021-10-28T08:10:08.072Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,416Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae0c53fd-28eb-42a1-9158-a45f006fdc9a, invocation_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, invocation_timestamp=2021-10-28T08:10:08.072Z, origin=Only For Testing, session_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, session_timestamp=2021-10-28T08:10:08.072Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,444Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=49478e40-5b0c-44bf-8246-e887de4ac226, invocation_id=860683d4-de8d-44d7-a436-b3204f337b3e, invocation_timestamp=2021-10-28T08:10:08.198Z, origin=O=Abbey, L=London, C=GB, session_id=860683d4-de8d-44d7-a436-b3204f337b3e, session_timestamp=2021-10-28T08:10:08.198Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,625Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=49478e40-5b0c-44bf-8246-e887de4ac226, invocation_id=860683d4-de8d-44d7-a436-b3204f337b3e, invocation_timestamp=2021-10-28T08:10:08.198Z, origin=O=Abbey, L=London, C=GB, session_id=860683d4-de8d-44d7-a436-b3204f337b3e, session_timestamp=2021-10-28T08:10:08.198Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,638Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=49478e40-5b0c-44bf-8246-e887de4ac226, invocation_id=860683d4-de8d-44d7-a436-b3204f337b3e, invocation_timestamp=2021-10-28T08:10:08.198Z, origin=O=Abbey, L=London, C=GB, session_id=860683d4-de8d-44d7-a436-b3204f337b3e, session_timestamp=2021-10-28T08:10:08.198Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,656Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=49478e40-5b0c-44bf-8246-e887de4ac226, invocation_id=860683d4-de8d-44d7-a436-b3204f337b3e, invocation_timestamp=2021-10-28T08:10:08.198Z, origin=O=Abbey, L=London, C=GB, session_id=860683d4-de8d-44d7-a436-b3204f337b3e, session_timestamp=2021-10-28T08:10:08.198Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,672Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae0c53fd-28eb-42a1-9158-a45f006fdc9a, invocation_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, invocation_timestamp=2021-10-28T08:10:08.072Z, origin=Only For Testing, session_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, session_timestamp=2021-10-28T08:10:08.072Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,673Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ae0c53fd-28eb-42a1-9158-a45f006fdc9a, invocation_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, invocation_timestamp=2021-10-28T08:10:08.072Z, origin=Only For Testing, session_id=e0cf4565-5a23-4a21-a2f1-38e644d99c10, session_timestamp=2021-10-28T08:10:08.072Z, thread-id=206, tx_id=49DAB12C543417E777994754B7F4B029F78235D219E29B7A2BDED6345AB61B15}
[INFO ] 2021-10-28T08:10:08,800Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=af1ea9ef-6bbc-4424-b9d5-9aed41e107b3, invocation_id=5dc4004e-6488-4448-9459-4712562865bf, invocation_timestamp=2021-10-28T08:10:08.696Z, origin=Only For Testing, session_id=5dc4004e-6488-4448-9459-4712562865bf, session_timestamp=2021-10-28T08:10:08.696Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:08,825Z [Mock network] corda.flow. - Received a notarisation request for Tx [9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=3cd59ff3-1910-4848-9c51-091d1bb25b0d, invocation_id=24a6b66d-c2b7-44a9-8f01-7757ca91509d, invocation_timestamp=2021-10-28T08:10:08.813Z, origin=O=HSBC, L=London, C=GB, session_id=24a6b66d-c2b7-44a9-8f01-7757ca91509d, session_timestamp=2021-10-28T08:10:08.813Z, thread-id=206}
[INFO ] 2021-10-28T08:10:08,962Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:10:08,969Z [Mock network] corda.flow. - Transaction [9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=3cd59ff3-1910-4848-9c51-091d1bb25b0d, invocation_id=24a6b66d-c2b7-44a9-8f01-7757ca91509d, invocation_timestamp=2021-10-28T08:10:08.813Z, origin=O=HSBC, L=London, C=GB, session_id=24a6b66d-c2b7-44a9-8f01-7757ca91509d, session_timestamp=2021-10-28T08:10:08.813Z, thread-id=206}
[INFO ] 2021-10-28T08:10:09,027Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=af1ea9ef-6bbc-4424-b9d5-9aed41e107b3, invocation_id=5dc4004e-6488-4448-9459-4712562865bf, invocation_timestamp=2021-10-28T08:10:08.696Z, origin=Only For Testing, session_id=5dc4004e-6488-4448-9459-4712562865bf, session_timestamp=2021-10-28T08:10:08.696Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,028Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=af1ea9ef-6bbc-4424-b9d5-9aed41e107b3, invocation_id=5dc4004e-6488-4448-9459-4712562865bf, invocation_timestamp=2021-10-28T08:10:08.696Z, origin=Only For Testing, session_id=5dc4004e-6488-4448-9459-4712562865bf, session_timestamp=2021-10-28T08:10:08.696Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,037Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=af1ea9ef-6bbc-4424-b9d5-9aed41e107b3, invocation_id=5dc4004e-6488-4448-9459-4712562865bf, invocation_timestamp=2021-10-28T08:10:08.696Z, origin=Only For Testing, session_id=5dc4004e-6488-4448-9459-4712562865bf, session_timestamp=2021-10-28T08:10:08.696Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,059Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=bad4b25d-dbf4-42be-9a63-2808ed457040, invocation_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, invocation_timestamp=2021-10-28T08:10:08.832Z, origin=O=HSBC, L=London, C=GB, session_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, session_timestamp=2021-10-28T08:10:08.832Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,067Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=bad4b25d-dbf4-42be-9a63-2808ed457040, invocation_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, invocation_timestamp=2021-10-28T08:10:08.832Z, origin=O=HSBC, L=London, C=GB, session_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, session_timestamp=2021-10-28T08:10:08.832Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,073Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=bad4b25d-dbf4-42be-9a63-2808ed457040, invocation_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, invocation_timestamp=2021-10-28T08:10:08.832Z, origin=O=HSBC, L=London, C=GB, session_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, session_timestamp=2021-10-28T08:10:08.832Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,083Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=bad4b25d-dbf4-42be-9a63-2808ed457040, invocation_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, invocation_timestamp=2021-10-28T08:10:08.832Z, origin=O=HSBC, L=London, C=GB, session_id=d8779d2e-1f7c-45c8-8592-de54fabd1323, session_timestamp=2021-10-28T08:10:08.832Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,093Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=af1ea9ef-6bbc-4424-b9d5-9aed41e107b3, invocation_id=5dc4004e-6488-4448-9459-4712562865bf, invocation_timestamp=2021-10-28T08:10:08.696Z, origin=Only For Testing, session_id=5dc4004e-6488-4448-9459-4712562865bf, session_timestamp=2021-10-28T08:10:08.696Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,094Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=af1ea9ef-6bbc-4424-b9d5-9aed41e107b3, invocation_id=5dc4004e-6488-4448-9459-4712562865bf, invocation_timestamp=2021-10-28T08:10:08.696Z, origin=Only For Testing, session_id=5dc4004e-6488-4448-9459-4712562865bf, session_timestamp=2021-10-28T08:10:08.696Z, thread-id=206, tx_id=9C1BA991F383BD3D4BB55C9B4D00CF0CB9B0E6B64016B11CF8526536682274B6}
[INFO ] 2021-10-28T08:10:09,147Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fb4a65df-3bd7-4347-8ded-2bdb39661771, invocation_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, invocation_timestamp=2021-10-28T08:10:09.105Z, origin=Only For Testing, session_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, session_timestamp=2021-10-28T08:10:09.105Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,161Z [Mock network] corda.flow. - Received a notarisation request for Tx [3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=ddfccc53-26fd-434b-bbe9-1138ccfe27be, invocation_id=963d7153-9a98-4995-80e5-60d6728e6f26, invocation_timestamp=2021-10-28T08:10:09.153Z, origin=O=Abbey, L=London, C=GB, session_id=963d7153-9a98-4995-80e5-60d6728e6f26, session_timestamp=2021-10-28T08:10:09.153Z, thread-id=206}
[INFO ] 2021-10-28T08:10:09,375Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:10:09,379Z [Mock network] corda.flow. - Transaction [3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=ddfccc53-26fd-434b-bbe9-1138ccfe27be, invocation_id=963d7153-9a98-4995-80e5-60d6728e6f26, invocation_timestamp=2021-10-28T08:10:09.153Z, origin=O=Abbey, L=London, C=GB, session_id=963d7153-9a98-4995-80e5-60d6728e6f26, session_timestamp=2021-10-28T08:10:09.153Z, thread-id=206}
[INFO ] 2021-10-28T08:10:09,396Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fb4a65df-3bd7-4347-8ded-2bdb39661771, invocation_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, invocation_timestamp=2021-10-28T08:10:09.105Z, origin=Only For Testing, session_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, session_timestamp=2021-10-28T08:10:09.105Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,397Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fb4a65df-3bd7-4347-8ded-2bdb39661771, invocation_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, invocation_timestamp=2021-10-28T08:10:09.105Z, origin=Only For Testing, session_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, session_timestamp=2021-10-28T08:10:09.105Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,404Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fb4a65df-3bd7-4347-8ded-2bdb39661771, invocation_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, invocation_timestamp=2021-10-28T08:10:09.105Z, origin=Only For Testing, session_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, session_timestamp=2021-10-28T08:10:09.105Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,425Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=0bc258c7-9f9b-4056-ba27-2eb5b052425a, invocation_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, invocation_timestamp=2021-10-28T08:10:09.170Z, origin=O=Abbey, L=London, C=GB, session_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, session_timestamp=2021-10-28T08:10:09.170Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,556Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=0bc258c7-9f9b-4056-ba27-2eb5b052425a, invocation_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, invocation_timestamp=2021-10-28T08:10:09.170Z, origin=O=Abbey, L=London, C=GB, session_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, session_timestamp=2021-10-28T08:10:09.170Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,564Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=0bc258c7-9f9b-4056-ba27-2eb5b052425a, invocation_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, invocation_timestamp=2021-10-28T08:10:09.170Z, origin=O=Abbey, L=London, C=GB, session_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, session_timestamp=2021-10-28T08:10:09.170Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,574Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=0bc258c7-9f9b-4056-ba27-2eb5b052425a, invocation_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, invocation_timestamp=2021-10-28T08:10:09.170Z, origin=O=Abbey, L=London, C=GB, session_id=c6731251-0acb-4fd1-bcd8-f1eab3d98ebc, session_timestamp=2021-10-28T08:10:09.170Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,587Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fb4a65df-3bd7-4347-8ded-2bdb39661771, invocation_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, invocation_timestamp=2021-10-28T08:10:09.105Z, origin=Only For Testing, session_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, session_timestamp=2021-10-28T08:10:09.105Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,587Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fb4a65df-3bd7-4347-8ded-2bdb39661771, invocation_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, invocation_timestamp=2021-10-28T08:10:09.105Z, origin=Only For Testing, session_id=54c6a3ff-57ef-41c8-9048-6f09ea998965, session_timestamp=2021-10-28T08:10:09.105Z, thread-id=206, tx_id=3566B433E60FC4EC1BB1B054A48C52C85CAEEA239DE0F7B6693DC3061E6A9F69}
[INFO ] 2021-10-28T08:10:09,776Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b33d3ba0-d112-43d8-a878-d9bbb7f767ae, invocation_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, invocation_timestamp=2021-10-28T08:10:09.599Z, origin=Only For Testing, session_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, session_timestamp=2021-10-28T08:10:09.599Z, thread-id=206, tx_id=E39080E04AD89C2AFA15B2A1B79A2088214978602195426602B66774D5CB72AA}
[INFO ] 2021-10-28T08:10:09,799Z [Mock network] corda.flow. - Received a notarisation request for Tx [E39080E04AD89C2AFA15B2A1B79A2088214978602195426602B66774D5CB72AA] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=997c6c5b-86da-4e78-a982-7beb48f24b19, invocation_id=ae6b505f-1f6b-47e9-a374-cc5144de8c52, invocation_timestamp=2021-10-28T08:10:09.787Z, origin=O=UK Mint, L=London, C=GB, session_id=ae6b505f-1f6b-47e9-a374-cc5144de8c52, session_timestamp=2021-10-28T08:10:09.787Z, thread-id=206}
[INFO ] 2021-10-28T08:10:09,990Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:10:09,993Z [Mock network] corda.flow. - Transaction [E39080E04AD89C2AFA15B2A1B79A2088214978602195426602B66774D5CB72AA] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=997c6c5b-86da-4e78-a982-7beb48f24b19, invocation_id=ae6b505f-1f6b-47e9-a374-cc5144de8c52, invocation_timestamp=2021-10-28T08:10:09.787Z, origin=O=UK Mint, L=London, C=GB, session_id=ae6b505f-1f6b-47e9-a374-cc5144de8c52, session_timestamp=2021-10-28T08:10:09.787Z, thread-id=206}
[INFO ] 2021-10-28T08:10:10,041Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b33d3ba0-d112-43d8-a878-d9bbb7f767ae, invocation_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, invocation_timestamp=2021-10-28T08:10:09.599Z, origin=Only For Testing, session_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, session_timestamp=2021-10-28T08:10:09.599Z, thread-id=206, tx_id=E39080E04AD89C2AFA15B2A1B79A2088214978602195426602B66774D5CB72AA}
[INFO ] 2021-10-28T08:10:10,042Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b33d3ba0-d112-43d8-a878-d9bbb7f767ae, invocation_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, invocation_timestamp=2021-10-28T08:10:09.599Z, origin=Only For Testing, session_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, session_timestamp=2021-10-28T08:10:09.599Z, thread-id=206, tx_id=E39080E04AD89C2AFA15B2A1B79A2088214978602195426602B66774D5CB72AA}
[INFO ] 2021-10-28T08:10:10,051Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b33d3ba0-d112-43d8-a878-d9bbb7f767ae, invocation_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, invocation_timestamp=2021-10-28T08:10:09.599Z, origin=Only For Testing, session_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, session_timestamp=2021-10-28T08:10:09.599Z, thread-id=206, tx_id=E39080E04AD89C2AFA15B2A1B79A2088214978602195426602B66774D5CB72AA}
[INFO ] 2021-10-28T08:10:10,051Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=b33d3ba0-d112-43d8-a878-d9bbb7f767ae, invocation_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, invocation_timestamp=2021-10-28T08:10:09.599Z, origin=Only For Testing, session_id=ec2a5e10-1891-4ff2-a788-49a05afb48cd, session_timestamp=2021-10-28T08:10:09.599Z, thread-id=206, tx_id=E39080E04AD89C2AFA15B2A1B79A2088214978602195426602B66774D5CB72AA}
[INFO ] 2021-10-28T08:10:10,082Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T08:10:10,129Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:10:10,129Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:10:10,132Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T08:10:10,145Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:10:10,145Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:10:10,146Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T08:10:10,155Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:10:10,155Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:10:10,156Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T08:10:10,168Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:10:10,168Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:18:53,309Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/0/cordapps] {}
[INFO ] 2021-10-28T08:18:53,341Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:18:53,359Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:18:53,887Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:18:57,097Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:18:57,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:18:57,660Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:18:57,775Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:18:57,782Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx, alias: identity-private-key {}
[INFO ] 2021-10-28T08:18:58,014Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,015Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,016Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,016Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,019Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,020Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:18:58,021Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,162Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:18:58,269Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:18:40.645Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:19:06,245Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:19:06,469Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:19:06,474Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:19:10,193Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:19:10,594Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:19:10,607Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594), owningKey=DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx {}
[INFO ] 2021-10-28T08:19:10,607Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:19:10,823Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594) {}
[INFO ] 2021-10-28T08:19:10,895Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:19:10,986Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594), owningKey=DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx {}
[INFO ] 2021-10-28T08:19:10,986Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:10,989Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:19:10,993Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:19:11,177Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:19:11,204Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:19:11,223Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:19:11,343Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:19:11,472Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:19:11,472Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T08:19:12,237Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594) {}
[INFO ] 2021-10-28T08:19:12,249Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594), owningKey=DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx {}
[INFO ] 2021-10-28T08:19:12,251Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:12,254Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594), owningKey=DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx {}
[INFO ] 2021-10-28T08:19:12,255Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:12,281Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/1/cordapps] {}
[INFO ] 2021-10-28T08:19:12,283Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:19:12,284Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:19:12,319Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:19:12,386Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:19:12,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:19:12,389Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:19:12,427Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:19:12,427Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn, alias: identity-private-key {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,435Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:19:12,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,436Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:19:12,442Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:18:40.645Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:19:13,370Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:19:13,375Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:13,375Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:13,549Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:13,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:19:13,562Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556), owningKey=DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn {}
[INFO ] 2021-10-28T08:19:13,562Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:13,582Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556) {}
[INFO ] 2021-10-28T08:19:13,597Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:19:13,597Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:19:13,597Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:19:13,606Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556), owningKey=DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn {}
[INFO ] 2021-10-28T08:19:13,606Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:13,661Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:19:13,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:19:13,664Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:19:13,664Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:19:13,687Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:19:13,720Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556) {}
[INFO ] 2021-10-28T08:19:13,727Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594), owningKey=DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx {}
[INFO ] 2021-10-28T08:19:13,727Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:19:13,741Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556), owningKey=DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn {}
[INFO ] 2021-10-28T08:19:13,741Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:13,752Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556), owningKey=DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn {}
[INFO ] 2021-10-28T08:19:13,752Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:13,752Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556), owningKey=DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn {}
[INFO ] 2021-10-28T08:19:13,752Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:13,767Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/2/cordapps] {}
[INFO ] 2021-10-28T08:19:13,768Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:19:13,768Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:19:13,779Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:19:13,820Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:19:13,822Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:19:13,824Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:19:13,865Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:19:13,865Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE, alias: identity-private-key {}
[INFO ] 2021-10-28T08:19:13,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,873Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,877Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,877Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,878Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,878Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,878Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:19:13,878Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,879Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:19:13,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:18:40.645Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:19:14,865Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:19:14,877Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:14,877Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:15,048Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:15,054Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:19:15,057Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054), owningKey=DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE {}
[INFO ] 2021-10-28T08:19:15,057Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:15,068Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054) {}
[INFO ] 2021-10-28T08:19:15,075Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:19:15,078Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:19:15,078Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:19:15,087Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054), owningKey=DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE {}
[INFO ] 2021-10-28T08:19:15,087Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:15,165Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:19:15,187Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:19:15,189Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:19:15,191Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:19:15,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:19:15,230Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054) {}
[INFO ] 2021-10-28T08:19:15,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594), owningKey=DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx {}
[INFO ] 2021-10-28T08:19:15,236Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:19:15,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054), owningKey=DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE {}
[INFO ] 2021-10-28T08:19:15,256Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:15,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556), owningKey=DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn {}
[INFO ] 2021-10-28T08:19:15,280Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:15,296Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054), owningKey=DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE {}
[INFO ] 2021-10-28T08:19:15,296Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:15,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054), owningKey=DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE {}
[INFO ] 2021-10-28T08:19:15,307Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:15,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054), owningKey=DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE {}
[INFO ] 2021-10-28T08:19:15,307Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:15,318Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/3/cordapps] {}
[INFO ] 2021-10-28T08:19:15,318Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:19:15,318Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:19:15,326Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:19:15,366Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:19:15,367Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:19:15,368Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:19:15,411Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:19:15,411Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3, alias: identity-private-key {}
[INFO ] 2021-10-28T08:19:15,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:19:15,422Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,422Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:19:15,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:18:40.645Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:19:16,121Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:19:16,122Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:16,122Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:16,316Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:19:16,321Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:19:16,325Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321), owningKey=DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3 {}
[INFO ] 2021-10-28T08:19:16,325Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:16,336Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321) {}
[INFO ] 2021-10-28T08:19:16,350Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:19:16,351Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:19:16,351Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:19:16,357Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321), owningKey=DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3 {}
[INFO ] 2021-10-28T08:19:16,357Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:16,448Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:19:16,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:19:16,457Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-081844.082-1BBD43E6CBCD3E8C/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:19:16,462Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:19:16,475Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:19:16,512Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321) {}
[INFO ] 2021-10-28T08:19:16,521Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635409150594), owningKey=DLDMhXHgDTvCeCcJHCkHC4rT8CW9RRxxuKLWBhCqYZ4qhx {}
[INFO ] 2021-10-28T08:19:16,521Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:19:16,536Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321), owningKey=DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3 {}
[INFO ] 2021-10-28T08:19:16,536Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:16,561Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635409153556), owningKey=DLCiMeohJeHC6kZB9Phc37kQ4ZfDctRTbtXSDHzHBRs8Wn {}
[INFO ] 2021-10-28T08:19:16,561Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:16,570Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321), owningKey=DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3 {}
[INFO ] 2021-10-28T08:19:16,570Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:16,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635409155054), owningKey=DLFb1K9ahdmwJTovYsYcQRSies4hAXMcYQxcWfAeDHcsFE {}
[INFO ] 2021-10-28T08:19:16,581Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:16,601Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321), owningKey=DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3 {}
[INFO ] 2021-10-28T08:19:16,601Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:19:16,612Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321), owningKey=DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3 {}
[INFO ] 2021-10-28T08:19:16,612Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:16,612Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635409156321), owningKey=DLEYxg6oN1ksyA2Gbdg29haV1tYJein8nDbK7sYEEZA9A3 {}
[INFO ] 2021-10-28T08:19:16,612Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:19:17,885Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=530c2112-7d89-4716-986a-15594c316392, invocation_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, invocation_timestamp=2021-10-28T08:19:16.664Z, origin=Only For Testing, session_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, session_timestamp=2021-10-28T08:19:16.664Z, thread-id=206, tx_id=0FE96976E44B3A858B188DE55F9931326A68AB8356272230ECE8E85A89EF7312}
[INFO ] 2021-10-28T08:19:17,885Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=530c2112-7d89-4716-986a-15594c316392, invocation_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, invocation_timestamp=2021-10-28T08:19:16.664Z, origin=Only For Testing, session_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, session_timestamp=2021-10-28T08:19:16.664Z, thread-id=206, tx_id=0FE96976E44B3A858B188DE55F9931326A68AB8356272230ECE8E85A89EF7312}
[INFO ] 2021-10-28T08:19:18,037Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=530c2112-7d89-4716-986a-15594c316392, invocation_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, invocation_timestamp=2021-10-28T08:19:16.664Z, origin=Only For Testing, session_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, session_timestamp=2021-10-28T08:19:16.664Z, thread-id=206, tx_id=0FE96976E44B3A858B188DE55F9931326A68AB8356272230ECE8E85A89EF7312}
[INFO ] 2021-10-28T08:19:18,037Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=530c2112-7d89-4716-986a-15594c316392, invocation_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, invocation_timestamp=2021-10-28T08:19:16.664Z, origin=Only For Testing, session_id=6aac2b21-ba63-4c41-b00e-2f1a9f15a171, session_timestamp=2021-10-28T08:19:16.664Z, thread-id=206, tx_id=0FE96976E44B3A858B188DE55F9931326A68AB8356272230ECE8E85A89EF7312}
[INFO ] 2021-10-28T08:19:18,551Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=09e8a012-4583-4bee-964e-b4709bb916e6, invocation_id=c2359838-86c8-4af1-9af8-586b32691a66, invocation_timestamp=2021-10-28T08:19:18.177Z, origin=Only For Testing, session_id=c2359838-86c8-4af1-9af8-586b32691a66, session_timestamp=2021-10-28T08:19:18.177Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:18,663Z [Mock network] corda.flow. - Received a notarisation request for Tx [1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=1d0da9d6-23d0-4172-9ff2-6e424b8e6802, invocation_id=26fc2231-2db2-4193-bf21-a252e9a0a825, invocation_timestamp=2021-10-28T08:19:18.629Z, origin=O=UK Mint, L=London, C=GB, session_id=26fc2231-2db2-4193-bf21-a252e9a0a825, session_timestamp=2021-10-28T08:19:18.629Z, thread-id=206}
[INFO ] 2021-10-28T08:19:19,227Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:19:19,254Z [Mock network] corda.flow. - Transaction [1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=1d0da9d6-23d0-4172-9ff2-6e424b8e6802, invocation_id=26fc2231-2db2-4193-bf21-a252e9a0a825, invocation_timestamp=2021-10-28T08:19:18.629Z, origin=O=UK Mint, L=London, C=GB, session_id=26fc2231-2db2-4193-bf21-a252e9a0a825, session_timestamp=2021-10-28T08:19:18.629Z, thread-id=206}
[INFO ] 2021-10-28T08:19:19,290Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=09e8a012-4583-4bee-964e-b4709bb916e6, invocation_id=c2359838-86c8-4af1-9af8-586b32691a66, invocation_timestamp=2021-10-28T08:19:18.177Z, origin=Only For Testing, session_id=c2359838-86c8-4af1-9af8-586b32691a66, session_timestamp=2021-10-28T08:19:18.177Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,294Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=09e8a012-4583-4bee-964e-b4709bb916e6, invocation_id=c2359838-86c8-4af1-9af8-586b32691a66, invocation_timestamp=2021-10-28T08:19:18.177Z, origin=Only For Testing, session_id=c2359838-86c8-4af1-9af8-586b32691a66, session_timestamp=2021-10-28T08:19:18.177Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,309Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=09e8a012-4583-4bee-964e-b4709bb916e6, invocation_id=c2359838-86c8-4af1-9af8-586b32691a66, invocation_timestamp=2021-10-28T08:19:18.177Z, origin=Only For Testing, session_id=c2359838-86c8-4af1-9af8-586b32691a66, session_timestamp=2021-10-28T08:19:18.177Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,371Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=2098e865-b489-446d-803f-8c84a01eef9b, invocation_id=346a5906-6c69-481b-a620-eae0bf4c660c, invocation_timestamp=2021-10-28T08:19:18.745Z, origin=O=UK Mint, L=London, C=GB, session_id=346a5906-6c69-481b-a620-eae0bf4c660c, session_timestamp=2021-10-28T08:19:18.745Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,623Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=2098e865-b489-446d-803f-8c84a01eef9b, invocation_id=346a5906-6c69-481b-a620-eae0bf4c660c, invocation_timestamp=2021-10-28T08:19:18.745Z, origin=O=UK Mint, L=London, C=GB, session_id=346a5906-6c69-481b-a620-eae0bf4c660c, session_timestamp=2021-10-28T08:19:18.745Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,634Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=2098e865-b489-446d-803f-8c84a01eef9b, invocation_id=346a5906-6c69-481b-a620-eae0bf4c660c, invocation_timestamp=2021-10-28T08:19:18.745Z, origin=O=UK Mint, L=London, C=GB, session_id=346a5906-6c69-481b-a620-eae0bf4c660c, session_timestamp=2021-10-28T08:19:18.745Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,648Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=2098e865-b489-446d-803f-8c84a01eef9b, invocation_id=346a5906-6c69-481b-a620-eae0bf4c660c, invocation_timestamp=2021-10-28T08:19:18.745Z, origin=O=UK Mint, L=London, C=GB, session_id=346a5906-6c69-481b-a620-eae0bf4c660c, session_timestamp=2021-10-28T08:19:18.745Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,670Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=09e8a012-4583-4bee-964e-b4709bb916e6, invocation_id=c2359838-86c8-4af1-9af8-586b32691a66, invocation_timestamp=2021-10-28T08:19:18.177Z, origin=Only For Testing, session_id=c2359838-86c8-4af1-9af8-586b32691a66, session_timestamp=2021-10-28T08:19:18.177Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,670Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=09e8a012-4583-4bee-964e-b4709bb916e6, invocation_id=c2359838-86c8-4af1-9af8-586b32691a66, invocation_timestamp=2021-10-28T08:19:18.177Z, origin=Only For Testing, session_id=c2359838-86c8-4af1-9af8-586b32691a66, session_timestamp=2021-10-28T08:19:18.177Z, thread-id=206, tx_id=1E99FD5291A98F2AB3F4A7B42F936AAB9486B734709562D2189312B0795241DD}
[INFO ] 2021-10-28T08:19:19,757Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c2b79da7-454a-4e1b-9c89-e0136deda8a3, invocation_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, invocation_timestamp=2021-10-28T08:19:19.684Z, origin=Only For Testing, session_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, session_timestamp=2021-10-28T08:19:19.684Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:19,784Z [Mock network] corda.flow. - Received a notarisation request for Tx [BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=e3701aef-6523-49d9-826f-6c5873888998, invocation_id=6fa829df-0276-460b-bc7a-6815c10790d0, invocation_timestamp=2021-10-28T08:19:19.769Z, origin=O=Abbey, L=London, C=GB, session_id=6fa829df-0276-460b-bc7a-6815c10790d0, session_timestamp=2021-10-28T08:19:19.769Z, thread-id=206}
[INFO ] 2021-10-28T08:19:20,061Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:19:20,067Z [Mock network] corda.flow. - Transaction [BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=e3701aef-6523-49d9-826f-6c5873888998, invocation_id=6fa829df-0276-460b-bc7a-6815c10790d0, invocation_timestamp=2021-10-28T08:19:19.769Z, origin=O=Abbey, L=London, C=GB, session_id=6fa829df-0276-460b-bc7a-6815c10790d0, session_timestamp=2021-10-28T08:19:19.769Z, thread-id=206}
[INFO ] 2021-10-28T08:19:20,108Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c2b79da7-454a-4e1b-9c89-e0136deda8a3, invocation_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, invocation_timestamp=2021-10-28T08:19:19.684Z, origin=Only For Testing, session_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, session_timestamp=2021-10-28T08:19:19.684Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,109Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c2b79da7-454a-4e1b-9c89-e0136deda8a3, invocation_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, invocation_timestamp=2021-10-28T08:19:19.684Z, origin=Only For Testing, session_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, session_timestamp=2021-10-28T08:19:19.684Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,117Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c2b79da7-454a-4e1b-9c89-e0136deda8a3, invocation_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, invocation_timestamp=2021-10-28T08:19:19.684Z, origin=Only For Testing, session_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, session_timestamp=2021-10-28T08:19:19.684Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,154Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=06764f2c-652b-4606-a149-677235a9dabd, invocation_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, invocation_timestamp=2021-10-28T08:19:19.798Z, origin=O=Abbey, L=London, C=GB, session_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, session_timestamp=2021-10-28T08:19:19.798Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,326Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=06764f2c-652b-4606-a149-677235a9dabd, invocation_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, invocation_timestamp=2021-10-28T08:19:19.798Z, origin=O=Abbey, L=London, C=GB, session_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, session_timestamp=2021-10-28T08:19:19.798Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,333Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=06764f2c-652b-4606-a149-677235a9dabd, invocation_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, invocation_timestamp=2021-10-28T08:19:19.798Z, origin=O=Abbey, L=London, C=GB, session_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, session_timestamp=2021-10-28T08:19:19.798Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,344Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=06764f2c-652b-4606-a149-677235a9dabd, invocation_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, invocation_timestamp=2021-10-28T08:19:19.798Z, origin=O=Abbey, L=London, C=GB, session_id=cbd2a10c-1fdc-4b07-ad71-f549b8a9c427, session_timestamp=2021-10-28T08:19:19.798Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,357Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c2b79da7-454a-4e1b-9c89-e0136deda8a3, invocation_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, invocation_timestamp=2021-10-28T08:19:19.684Z, origin=Only For Testing, session_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, session_timestamp=2021-10-28T08:19:19.684Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,357Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c2b79da7-454a-4e1b-9c89-e0136deda8a3, invocation_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, invocation_timestamp=2021-10-28T08:19:19.684Z, origin=Only For Testing, session_id=d514a1ba-a7a8-4083-9e0a-3da7420ceb4c, session_timestamp=2021-10-28T08:19:19.684Z, thread-id=206, tx_id=BB59EF64CDE52DE09D6A13E03E7B4133F4F2D24CAD95AB800CC25A09B7B560C8}
[INFO ] 2021-10-28T08:19:20,471Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=57fd49a8-3170-46ff-9c45-912352af9a93, invocation_id=952408ac-549f-47c0-a050-d1c27515abe9, invocation_timestamp=2021-10-28T08:19:20.371Z, origin=Only For Testing, session_id=952408ac-549f-47c0-a050-d1c27515abe9, session_timestamp=2021-10-28T08:19:20.371Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,497Z [Mock network] corda.flow. - Received a notarisation request for Tx [72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=becb2ae9-928e-43b5-a559-c4cb3fee73d1, invocation_id=0a3905af-f343-4825-95cd-300842018550, invocation_timestamp=2021-10-28T08:19:20.484Z, origin=O=HSBC, L=London, C=GB, session_id=0a3905af-f343-4825-95cd-300842018550, session_timestamp=2021-10-28T08:19:20.484Z, thread-id=206}
[INFO ] 2021-10-28T08:19:20,681Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:19:20,688Z [Mock network] corda.flow. - Transaction [72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=becb2ae9-928e-43b5-a559-c4cb3fee73d1, invocation_id=0a3905af-f343-4825-95cd-300842018550, invocation_timestamp=2021-10-28T08:19:20.484Z, origin=O=HSBC, L=London, C=GB, session_id=0a3905af-f343-4825-95cd-300842018550, session_timestamp=2021-10-28T08:19:20.484Z, thread-id=206}
[INFO ] 2021-10-28T08:19:20,758Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=57fd49a8-3170-46ff-9c45-912352af9a93, invocation_id=952408ac-549f-47c0-a050-d1c27515abe9, invocation_timestamp=2021-10-28T08:19:20.371Z, origin=Only For Testing, session_id=952408ac-549f-47c0-a050-d1c27515abe9, session_timestamp=2021-10-28T08:19:20.371Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,761Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=57fd49a8-3170-46ff-9c45-912352af9a93, invocation_id=952408ac-549f-47c0-a050-d1c27515abe9, invocation_timestamp=2021-10-28T08:19:20.371Z, origin=Only For Testing, session_id=952408ac-549f-47c0-a050-d1c27515abe9, session_timestamp=2021-10-28T08:19:20.371Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,771Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=57fd49a8-3170-46ff-9c45-912352af9a93, invocation_id=952408ac-549f-47c0-a050-d1c27515abe9, invocation_timestamp=2021-10-28T08:19:20.371Z, origin=Only For Testing, session_id=952408ac-549f-47c0-a050-d1c27515abe9, session_timestamp=2021-10-28T08:19:20.371Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,793Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=2e93a1f8-b1bd-4a9c-9c10-8295a4098cde, invocation_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, invocation_timestamp=2021-10-28T08:19:20.504Z, origin=O=HSBC, L=London, C=GB, session_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, session_timestamp=2021-10-28T08:19:20.504Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,804Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=2e93a1f8-b1bd-4a9c-9c10-8295a4098cde, invocation_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, invocation_timestamp=2021-10-28T08:19:20.504Z, origin=O=HSBC, L=London, C=GB, session_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, session_timestamp=2021-10-28T08:19:20.504Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,812Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=2e93a1f8-b1bd-4a9c-9c10-8295a4098cde, invocation_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, invocation_timestamp=2021-10-28T08:19:20.504Z, origin=O=HSBC, L=London, C=GB, session_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, session_timestamp=2021-10-28T08:19:20.504Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,822Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=2e93a1f8-b1bd-4a9c-9c10-8295a4098cde, invocation_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, invocation_timestamp=2021-10-28T08:19:20.504Z, origin=O=HSBC, L=London, C=GB, session_id=a8816ece-0aa1-4d8f-a5c4-e4701dd8643b, session_timestamp=2021-10-28T08:19:20.504Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,838Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=57fd49a8-3170-46ff-9c45-912352af9a93, invocation_id=952408ac-549f-47c0-a050-d1c27515abe9, invocation_timestamp=2021-10-28T08:19:20.371Z, origin=Only For Testing, session_id=952408ac-549f-47c0-a050-d1c27515abe9, session_timestamp=2021-10-28T08:19:20.371Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,838Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=57fd49a8-3170-46ff-9c45-912352af9a93, invocation_id=952408ac-549f-47c0-a050-d1c27515abe9, invocation_timestamp=2021-10-28T08:19:20.371Z, origin=Only For Testing, session_id=952408ac-549f-47c0-a050-d1c27515abe9, session_timestamp=2021-10-28T08:19:20.371Z, thread-id=206, tx_id=72464C670710716082F5C0276EB96577CBDD0A682797606EDB63C1E294931855}
[INFO ] 2021-10-28T08:19:20,911Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fcbf0063-5ff7-494a-9a9d-dc72a3d363e3, invocation_id=d25096c2-7223-4fda-a3f2-0a088c554b39, invocation_timestamp=2021-10-28T08:19:20.854Z, origin=Only For Testing, session_id=d25096c2-7223-4fda-a3f2-0a088c554b39, session_timestamp=2021-10-28T08:19:20.854Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:20,938Z [Mock network] corda.flow. - Received a notarisation request for Tx [F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=6911c1a0-9de8-4bc1-ae8d-a672a3c50d52, invocation_id=f053398d-9fec-477d-a027-dea7bba455b0, invocation_timestamp=2021-10-28T08:19:20.920Z, origin=O=Abbey, L=London, C=GB, session_id=f053398d-9fec-477d-a027-dea7bba455b0, session_timestamp=2021-10-28T08:19:20.920Z, thread-id=206}
[INFO ] 2021-10-28T08:19:21,093Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:19:21,097Z [Mock network] corda.flow. - Transaction [F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=6911c1a0-9de8-4bc1-ae8d-a672a3c50d52, invocation_id=f053398d-9fec-477d-a027-dea7bba455b0, invocation_timestamp=2021-10-28T08:19:20.920Z, origin=O=Abbey, L=London, C=GB, session_id=f053398d-9fec-477d-a027-dea7bba455b0, session_timestamp=2021-10-28T08:19:20.920Z, thread-id=206}
[INFO ] 2021-10-28T08:19:21,132Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fcbf0063-5ff7-494a-9a9d-dc72a3d363e3, invocation_id=d25096c2-7223-4fda-a3f2-0a088c554b39, invocation_timestamp=2021-10-28T08:19:20.854Z, origin=Only For Testing, session_id=d25096c2-7223-4fda-a3f2-0a088c554b39, session_timestamp=2021-10-28T08:19:20.854Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,133Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fcbf0063-5ff7-494a-9a9d-dc72a3d363e3, invocation_id=d25096c2-7223-4fda-a3f2-0a088c554b39, invocation_timestamp=2021-10-28T08:19:20.854Z, origin=Only For Testing, session_id=d25096c2-7223-4fda-a3f2-0a088c554b39, session_timestamp=2021-10-28T08:19:20.854Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,138Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fcbf0063-5ff7-494a-9a9d-dc72a3d363e3, invocation_id=d25096c2-7223-4fda-a3f2-0a088c554b39, invocation_timestamp=2021-10-28T08:19:20.854Z, origin=Only For Testing, session_id=d25096c2-7223-4fda-a3f2-0a088c554b39, session_timestamp=2021-10-28T08:19:20.854Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,161Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=07efc3d9-59b5-41d9-b6db-aad7d2e2b447, invocation_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, invocation_timestamp=2021-10-28T08:19:20.946Z, origin=O=Abbey, L=London, C=GB, session_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, session_timestamp=2021-10-28T08:19:20.946Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,289Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=07efc3d9-59b5-41d9-b6db-aad7d2e2b447, invocation_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, invocation_timestamp=2021-10-28T08:19:20.946Z, origin=O=Abbey, L=London, C=GB, session_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, session_timestamp=2021-10-28T08:19:20.946Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,296Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=07efc3d9-59b5-41d9-b6db-aad7d2e2b447, invocation_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, invocation_timestamp=2021-10-28T08:19:20.946Z, origin=O=Abbey, L=London, C=GB, session_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, session_timestamp=2021-10-28T08:19:20.946Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,303Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=07efc3d9-59b5-41d9-b6db-aad7d2e2b447, invocation_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, invocation_timestamp=2021-10-28T08:19:20.946Z, origin=O=Abbey, L=London, C=GB, session_id=90cafa57-320e-4a62-a3f2-c3cef6a98938, session_timestamp=2021-10-28T08:19:20.946Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,310Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fcbf0063-5ff7-494a-9a9d-dc72a3d363e3, invocation_id=d25096c2-7223-4fda-a3f2-0a088c554b39, invocation_timestamp=2021-10-28T08:19:20.854Z, origin=Only For Testing, session_id=d25096c2-7223-4fda-a3f2-0a088c554b39, session_timestamp=2021-10-28T08:19:20.854Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,310Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fcbf0063-5ff7-494a-9a9d-dc72a3d363e3, invocation_id=d25096c2-7223-4fda-a3f2-0a088c554b39, invocation_timestamp=2021-10-28T08:19:20.854Z, origin=Only For Testing, session_id=d25096c2-7223-4fda-a3f2-0a088c554b39, session_timestamp=2021-10-28T08:19:20.854Z, thread-id=206, tx_id=F904B4AD1E7DABE1091A759D7C47A3D1E94AD63DB1C7CE693F36B5856531A6EE}
[INFO ] 2021-10-28T08:19:21,570Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=06ab4bcc-965b-42c2-9dff-3c5c83426e04, invocation_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, invocation_timestamp=2021-10-28T08:19:21.321Z, origin=Only For Testing, session_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, session_timestamp=2021-10-28T08:19:21.321Z, thread-id=206, tx_id=E799FA403B1C43B82D088AF7AEAC42B8DC21EEDB959117E06930B3ED99590EF2}
[INFO ] 2021-10-28T08:19:21,585Z [Mock network] corda.flow. - Received a notarisation request for Tx [E799FA403B1C43B82D088AF7AEAC42B8DC21EEDB959117E06930B3ED99590EF2] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=994a65ed-b92f-452c-b707-ea3f2b254168, invocation_id=6601d92a-93ac-4a50-860c-18e01e2a88cf, invocation_timestamp=2021-10-28T08:19:21.578Z, origin=O=UK Mint, L=London, C=GB, session_id=6601d92a-93ac-4a50-860c-18e01e2a88cf, session_timestamp=2021-10-28T08:19:21.578Z, thread-id=206}
[INFO ] 2021-10-28T08:19:21,919Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:19:21,922Z [Mock network] corda.flow. - Transaction [E799FA403B1C43B82D088AF7AEAC42B8DC21EEDB959117E06930B3ED99590EF2] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=994a65ed-b92f-452c-b707-ea3f2b254168, invocation_id=6601d92a-93ac-4a50-860c-18e01e2a88cf, invocation_timestamp=2021-10-28T08:19:21.578Z, origin=O=UK Mint, L=London, C=GB, session_id=6601d92a-93ac-4a50-860c-18e01e2a88cf, session_timestamp=2021-10-28T08:19:21.578Z, thread-id=206}
[INFO ] 2021-10-28T08:19:21,975Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=06ab4bcc-965b-42c2-9dff-3c5c83426e04, invocation_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, invocation_timestamp=2021-10-28T08:19:21.321Z, origin=Only For Testing, session_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, session_timestamp=2021-10-28T08:19:21.321Z, thread-id=206, tx_id=E799FA403B1C43B82D088AF7AEAC42B8DC21EEDB959117E06930B3ED99590EF2}
[INFO ] 2021-10-28T08:19:21,976Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=06ab4bcc-965b-42c2-9dff-3c5c83426e04, invocation_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, invocation_timestamp=2021-10-28T08:19:21.321Z, origin=Only For Testing, session_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, session_timestamp=2021-10-28T08:19:21.321Z, thread-id=206, tx_id=E799FA403B1C43B82D088AF7AEAC42B8DC21EEDB959117E06930B3ED99590EF2}
[INFO ] 2021-10-28T08:19:21,983Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=06ab4bcc-965b-42c2-9dff-3c5c83426e04, invocation_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, invocation_timestamp=2021-10-28T08:19:21.321Z, origin=Only For Testing, session_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, session_timestamp=2021-10-28T08:19:21.321Z, thread-id=206, tx_id=E799FA403B1C43B82D088AF7AEAC42B8DC21EEDB959117E06930B3ED99590EF2}
[INFO ] 2021-10-28T08:19:21,983Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=06ab4bcc-965b-42c2-9dff-3c5c83426e04, invocation_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, invocation_timestamp=2021-10-28T08:19:21.321Z, origin=Only For Testing, session_id=4f9aae13-7c53-4d4c-827b-0174e1746f1a, session_timestamp=2021-10-28T08:19:21.321Z, thread-id=206, tx_id=E799FA403B1C43B82D088AF7AEAC42B8DC21EEDB959117E06930B3ED99590EF2}
[INFO ] 2021-10-28T08:19:22,013Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T08:19:22,038Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:19:22,038Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:19:22,041Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T08:19:22,061Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:19:22,061Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:19:22,062Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T08:19:22,086Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:19:22,086Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:19:22,087Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T08:19:22,107Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:19:22,107Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:43:52,097Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/0/cordapps] {}
[INFO ] 2021-10-28T08:43:52,176Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:43:52,228Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:43:52,931Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:43:55,098Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:43:55,685Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:43:55,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:43:55,831Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:43:55,843Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP, alias: identity-private-key {}
[INFO ] 2021-10-28T08:43:56,035Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,036Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,036Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,046Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,051Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,056Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,056Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,067Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,067Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,067Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,068Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,071Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:43:56,073Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,150Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:43:56,349Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:43:39.944Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:44:05,127Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:44:05,261Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:44:05,269Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:44:11,941Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T08:44:12,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:44:12,488Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474), owningKey=DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP {}
[INFO ] 2021-10-28T08:44:12,488Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:44:12,799Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474) {}
[INFO ] 2021-10-28T08:44:12,903Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:44:12,948Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:44:12,952Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:44:12,984Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474), owningKey=DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP {}
[INFO ] 2021-10-28T08:44:12,984Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:13,185Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:44:13,209Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:44:13,221Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:44:13,418Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:44:13,557Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:44:13,558Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T08:44:14,455Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474) {}
[INFO ] 2021-10-28T08:44:14,474Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474), owningKey=DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP {}
[INFO ] 2021-10-28T08:44:14,476Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:14,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474), owningKey=DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP {}
[INFO ] 2021-10-28T08:44:14,507Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:14,533Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/1/cordapps] {}
[INFO ] 2021-10-28T08:44:14,545Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:44:14,548Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:44:14,561Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:44:14,642Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:44:14,643Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:44:14,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:44:14,691Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:44:14,691Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz, alias: identity-private-key {}
[INFO ] 2021-10-28T08:44:14,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,702Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,716Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,721Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,724Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,724Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,724Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:44:14,725Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,725Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:44:14,737Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:43:39.944Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:44:16,037Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:44:16,075Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:16,075Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:16,385Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:16,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:44:16,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392), owningKey=DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz {}
[INFO ] 2021-10-28T08:44:16,397Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:16,408Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392) {}
[INFO ] 2021-10-28T08:44:16,416Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:44:16,416Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:44:16,416Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:44:16,424Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392), owningKey=DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz {}
[INFO ] 2021-10-28T08:44:16,424Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:16,468Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:44:16,473Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:44:16,473Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:44:16,474Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:44:16,510Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:44:16,543Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392) {}
[INFO ] 2021-10-28T08:44:16,550Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474), owningKey=DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP {}
[INFO ] 2021-10-28T08:44:16,550Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:44:16,590Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392), owningKey=DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz {}
[INFO ] 2021-10-28T08:44:16,590Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:16,615Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392), owningKey=DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz {}
[INFO ] 2021-10-28T08:44:16,615Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:16,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392), owningKey=DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz {}
[INFO ] 2021-10-28T08:44:16,616Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:16,641Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/2/cordapps] {}
[INFO ] 2021-10-28T08:44:16,641Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:44:16,641Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:44:16,655Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:44:16,699Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:44:16,705Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:44:16,707Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:44:16,787Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:44:16,789Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu, alias: identity-private-key {}
[INFO ] 2021-10-28T08:44:16,797Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,797Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,797Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,797Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,797Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,797Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,798Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,798Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,798Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,799Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,799Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,800Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:44:16,800Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,800Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:44:16,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:43:39.944Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:44:17,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:44:17,803Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:17,803Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:18,049Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:18,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:44:18,064Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058), owningKey=DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu {}
[INFO ] 2021-10-28T08:44:18,064Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:18,081Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058) {}
[INFO ] 2021-10-28T08:44:18,097Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:44:18,106Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:44:18,106Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:44:18,113Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058), owningKey=DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu {}
[INFO ] 2021-10-28T08:44:18,113Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:18,159Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:44:18,163Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:44:18,164Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:44:18,164Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:44:18,170Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:44:18,200Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058) {}
[INFO ] 2021-10-28T08:44:18,202Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474), owningKey=DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP {}
[INFO ] 2021-10-28T08:44:18,202Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:44:18,220Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058), owningKey=DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu {}
[INFO ] 2021-10-28T08:44:18,220Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:18,244Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392), owningKey=DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz {}
[INFO ] 2021-10-28T08:44:18,244Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:18,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058), owningKey=DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu {}
[INFO ] 2021-10-28T08:44:18,262Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:18,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058), owningKey=DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu {}
[INFO ] 2021-10-28T08:44:18,280Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:18,281Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058), owningKey=DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu {}
[INFO ] 2021-10-28T08:44:18,281Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:18,304Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/3/cordapps] {}
[INFO ] 2021-10-28T08:44:18,304Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T08:44:18,304Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T08:44:18,316Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/samples-java/Tokens/fungiblehousetoken/workflows/build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T08:44:18,370Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:44:18,371Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T08:44:18,373Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T08:44:18,412Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T08:44:18,412Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8, alias: identity-private-key {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,420Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T08:44:18,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,421Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T08:44:18,429Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T08:43:39.944Z
      epoch=1
  } {}
[INFO ] 2021-10-28T08:44:19,281Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T08:44:19,283Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:19,283Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:19,521Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T08:44:19,563Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T08:44:19,583Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563), owningKey=DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8 {}
[INFO ] 2021-10-28T08:44:19,583Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:19,604Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563) {}
[INFO ] 2021-10-28T08:44:19,621Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T08:44:19,623Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T08:44:19,623Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T08:44:19,629Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563), owningKey=DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8 {}
[INFO ] 2021-10-28T08:44:19,629Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:19,691Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T08:44:19,699Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T08:44:19,701Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-084342.686-015A4A369DF980C1/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T08:44:19,701Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T08:44:19,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T08:44:19,775Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563) {}
[INFO ] 2021-10-28T08:44:19,777Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635410652474), owningKey=DL9Rq6afC2yEjQqL7v6dQkom8DaSGfFBQCjQzFXFZ47roP {}
[INFO ] 2021-10-28T08:44:19,777Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T08:44:19,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563), owningKey=DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8 {}
[INFO ] 2021-10-28T08:44:19,798Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:19,859Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635410656392), owningKey=DL4bqHPakAeETEymioCrHvU8d6rAx2Ph65YfTp6gigFrdz {}
[INFO ] 2021-10-28T08:44:19,859Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:19,877Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563), owningKey=DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8 {}
[INFO ] 2021-10-28T08:44:19,877Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:19,891Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635410658058), owningKey=DL9rXh5X3Xy5QBCYmg6y9UDiPh1B778XiVderLj1sw4qTu {}
[INFO ] 2021-10-28T08:44:19,891Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:19,905Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563), owningKey=DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8 {}
[INFO ] 2021-10-28T08:44:19,905Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T08:44:19,926Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563), owningKey=DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8 {}
[INFO ] 2021-10-28T08:44:19,926Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:19,926Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635410659563), owningKey=DL8jDtsxRoJS2QBGu7wFPhEniUsMScq4cgLJdmysgFDxg8 {}
[INFO ] 2021-10-28T08:44:19,926Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T08:44:21,143Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9c4f1bf1-4d1d-4329-837e-12410f61f331, invocation_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, invocation_timestamp=2021-10-28T08:44:20.007Z, origin=Only For Testing, session_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, session_timestamp=2021-10-28T08:44:20.007Z, thread-id=206, tx_id=BDFE368D7EB1610698D25BEB26C8BDE2666D3F3C1FF9AE506EFDBA7B1B8D6FD2}
[INFO ] 2021-10-28T08:44:21,143Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9c4f1bf1-4d1d-4329-837e-12410f61f331, invocation_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, invocation_timestamp=2021-10-28T08:44:20.007Z, origin=Only For Testing, session_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, session_timestamp=2021-10-28T08:44:20.007Z, thread-id=206, tx_id=BDFE368D7EB1610698D25BEB26C8BDE2666D3F3C1FF9AE506EFDBA7B1B8D6FD2}
[INFO ] 2021-10-28T08:44:21,321Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9c4f1bf1-4d1d-4329-837e-12410f61f331, invocation_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, invocation_timestamp=2021-10-28T08:44:20.007Z, origin=Only For Testing, session_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, session_timestamp=2021-10-28T08:44:20.007Z, thread-id=206, tx_id=BDFE368D7EB1610698D25BEB26C8BDE2666D3F3C1FF9AE506EFDBA7B1B8D6FD2}
[INFO ] 2021-10-28T08:44:21,321Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9c4f1bf1-4d1d-4329-837e-12410f61f331, invocation_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, invocation_timestamp=2021-10-28T08:44:20.007Z, origin=Only For Testing, session_id=4ebfb108-8efb-4d4f-b0b1-d072e843959a, session_timestamp=2021-10-28T08:44:20.007Z, thread-id=206, tx_id=BDFE368D7EB1610698D25BEB26C8BDE2666D3F3C1FF9AE506EFDBA7B1B8D6FD2}
[INFO ] 2021-10-28T08:44:21,902Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=215ceb14-08e8-40da-af3c-944f5face56b, invocation_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, invocation_timestamp=2021-10-28T08:44:21.508Z, origin=Only For Testing, session_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, session_timestamp=2021-10-28T08:44:21.508Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,005Z [Mock network] corda.flow. - Received a notarisation request for Tx [1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=512f0b29-d265-47a4-a6cf-18509b364663, invocation_id=84ab4c4b-3923-4098-b614-96cf7b22c97d, invocation_timestamp=2021-10-28T08:44:21.971Z, origin=O=UK Mint, L=London, C=GB, session_id=84ab4c4b-3923-4098-b614-96cf7b22c97d, session_timestamp=2021-10-28T08:44:21.971Z, thread-id=206}
[INFO ] 2021-10-28T08:44:22,522Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:44:22,541Z [Mock network] corda.flow. - Transaction [1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=512f0b29-d265-47a4-a6cf-18509b364663, invocation_id=84ab4c4b-3923-4098-b614-96cf7b22c97d, invocation_timestamp=2021-10-28T08:44:21.971Z, origin=O=UK Mint, L=London, C=GB, session_id=84ab4c4b-3923-4098-b614-96cf7b22c97d, session_timestamp=2021-10-28T08:44:21.971Z, thread-id=206}
[INFO ] 2021-10-28T08:44:22,632Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=215ceb14-08e8-40da-af3c-944f5face56b, invocation_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, invocation_timestamp=2021-10-28T08:44:21.508Z, origin=Only For Testing, session_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, session_timestamp=2021-10-28T08:44:21.508Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,634Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=215ceb14-08e8-40da-af3c-944f5face56b, invocation_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, invocation_timestamp=2021-10-28T08:44:21.508Z, origin=Only For Testing, session_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, session_timestamp=2021-10-28T08:44:21.508Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,651Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=215ceb14-08e8-40da-af3c-944f5face56b, invocation_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, invocation_timestamp=2021-10-28T08:44:21.508Z, origin=Only For Testing, session_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, session_timestamp=2021-10-28T08:44:21.508Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,686Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=c03ba764-0415-4bfe-a0e3-497518d25671, invocation_id=9bca8dad-ecbd-4316-8399-95d876249028, invocation_timestamp=2021-10-28T08:44:22.083Z, origin=O=UK Mint, L=London, C=GB, session_id=9bca8dad-ecbd-4316-8399-95d876249028, session_timestamp=2021-10-28T08:44:22.083Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,815Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=c03ba764-0415-4bfe-a0e3-497518d25671, invocation_id=9bca8dad-ecbd-4316-8399-95d876249028, invocation_timestamp=2021-10-28T08:44:22.083Z, origin=O=UK Mint, L=London, C=GB, session_id=9bca8dad-ecbd-4316-8399-95d876249028, session_timestamp=2021-10-28T08:44:22.083Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,827Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=c03ba764-0415-4bfe-a0e3-497518d25671, invocation_id=9bca8dad-ecbd-4316-8399-95d876249028, invocation_timestamp=2021-10-28T08:44:22.083Z, origin=O=UK Mint, L=London, C=GB, session_id=9bca8dad-ecbd-4316-8399-95d876249028, session_timestamp=2021-10-28T08:44:22.083Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,845Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=c03ba764-0415-4bfe-a0e3-497518d25671, invocation_id=9bca8dad-ecbd-4316-8399-95d876249028, invocation_timestamp=2021-10-28T08:44:22.083Z, origin=O=UK Mint, L=London, C=GB, session_id=9bca8dad-ecbd-4316-8399-95d876249028, session_timestamp=2021-10-28T08:44:22.083Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,865Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=215ceb14-08e8-40da-af3c-944f5face56b, invocation_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, invocation_timestamp=2021-10-28T08:44:21.508Z, origin=Only For Testing, session_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, session_timestamp=2021-10-28T08:44:21.508Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:22,865Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=215ceb14-08e8-40da-af3c-944f5face56b, invocation_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, invocation_timestamp=2021-10-28T08:44:21.508Z, origin=Only For Testing, session_id=d66ad4d9-ffda-4c20-bfd0-ef78e39f949a, session_timestamp=2021-10-28T08:44:21.508Z, thread-id=206, tx_id=1E968ADA39D5FC049B0FAFD4AB46602D9891EDF072EF14FC31BD3929AC2439FC}
[INFO ] 2021-10-28T08:44:23,003Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=181bc9c2-ba7a-40d6-8a84-6f2310245ea7, invocation_id=95333d74-d881-4802-ac58-92712da114e6, invocation_timestamp=2021-10-28T08:44:22.888Z, origin=Only For Testing, session_id=95333d74-d881-4802-ac58-92712da114e6, session_timestamp=2021-10-28T08:44:22.888Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,030Z [Mock network] corda.flow. - Received a notarisation request for Tx [DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=8e416652-2772-433b-b57d-08cf01052d19, invocation_id=d92f1867-9d22-40b1-be8f-a6b1afe41c40, invocation_timestamp=2021-10-28T08:44:23.016Z, origin=O=Abbey, L=London, C=GB, session_id=d92f1867-9d22-40b1-be8f-a6b1afe41c40, session_timestamp=2021-10-28T08:44:23.016Z, thread-id=206}
[INFO ] 2021-10-28T08:44:23,146Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:44:23,151Z [Mock network] corda.flow. - Transaction [DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=8e416652-2772-433b-b57d-08cf01052d19, invocation_id=d92f1867-9d22-40b1-be8f-a6b1afe41c40, invocation_timestamp=2021-10-28T08:44:23.016Z, origin=O=Abbey, L=London, C=GB, session_id=d92f1867-9d22-40b1-be8f-a6b1afe41c40, session_timestamp=2021-10-28T08:44:23.016Z, thread-id=206}
[INFO ] 2021-10-28T08:44:23,198Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=181bc9c2-ba7a-40d6-8a84-6f2310245ea7, invocation_id=95333d74-d881-4802-ac58-92712da114e6, invocation_timestamp=2021-10-28T08:44:22.888Z, origin=Only For Testing, session_id=95333d74-d881-4802-ac58-92712da114e6, session_timestamp=2021-10-28T08:44:22.888Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,200Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=181bc9c2-ba7a-40d6-8a84-6f2310245ea7, invocation_id=95333d74-d881-4802-ac58-92712da114e6, invocation_timestamp=2021-10-28T08:44:22.888Z, origin=Only For Testing, session_id=95333d74-d881-4802-ac58-92712da114e6, session_timestamp=2021-10-28T08:44:22.888Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,213Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=181bc9c2-ba7a-40d6-8a84-6f2310245ea7, invocation_id=95333d74-d881-4802-ac58-92712da114e6, invocation_timestamp=2021-10-28T08:44:22.888Z, origin=Only For Testing, session_id=95333d74-d881-4802-ac58-92712da114e6, session_timestamp=2021-10-28T08:44:22.888Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,263Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=de434729-3561-465b-8ebb-ef0ccec6bb78, invocation_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, invocation_timestamp=2021-10-28T08:44:23.052Z, origin=O=Abbey, L=London, C=GB, session_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, session_timestamp=2021-10-28T08:44:23.052Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,450Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=de434729-3561-465b-8ebb-ef0ccec6bb78, invocation_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, invocation_timestamp=2021-10-28T08:44:23.052Z, origin=O=Abbey, L=London, C=GB, session_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, session_timestamp=2021-10-28T08:44:23.052Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,463Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=de434729-3561-465b-8ebb-ef0ccec6bb78, invocation_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, invocation_timestamp=2021-10-28T08:44:23.052Z, origin=O=Abbey, L=London, C=GB, session_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, session_timestamp=2021-10-28T08:44:23.052Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,476Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=de434729-3561-465b-8ebb-ef0ccec6bb78, invocation_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, invocation_timestamp=2021-10-28T08:44:23.052Z, origin=O=Abbey, L=London, C=GB, session_id=0cb8dec8-1999-4091-bd5e-35c125ef3bdf, session_timestamp=2021-10-28T08:44:23.052Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,503Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=181bc9c2-ba7a-40d6-8a84-6f2310245ea7, invocation_id=95333d74-d881-4802-ac58-92712da114e6, invocation_timestamp=2021-10-28T08:44:22.888Z, origin=Only For Testing, session_id=95333d74-d881-4802-ac58-92712da114e6, session_timestamp=2021-10-28T08:44:22.888Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,503Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=181bc9c2-ba7a-40d6-8a84-6f2310245ea7, invocation_id=95333d74-d881-4802-ac58-92712da114e6, invocation_timestamp=2021-10-28T08:44:22.888Z, origin=Only For Testing, session_id=95333d74-d881-4802-ac58-92712da114e6, session_timestamp=2021-10-28T08:44:22.888Z, thread-id=206, tx_id=DFAEF3C5491708A35EAEB987066012A3B99EC4BD4139B5F1D4F3E1C2E2ECFF0D}
[INFO ] 2021-10-28T08:44:23,612Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=831fb744-2ec8-4acf-8c90-3c3b6c3bc7e3, invocation_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, invocation_timestamp=2021-10-28T08:44:23.535Z, origin=Only For Testing, session_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, session_timestamp=2021-10-28T08:44:23.535Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,634Z [Mock network] corda.flow. - Received a notarisation request for Tx [7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=49be4fed-bb6d-4683-802f-01e5f62ca46a, invocation_id=617b76ae-9d6e-4067-a461-8215a3d0461e, invocation_timestamp=2021-10-28T08:44:23.622Z, origin=O=HSBC, L=London, C=GB, session_id=617b76ae-9d6e-4067-a461-8215a3d0461e, session_timestamp=2021-10-28T08:44:23.622Z, thread-id=206}
[INFO ] 2021-10-28T08:44:23,759Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:44:23,766Z [Mock network] corda.flow. - Transaction [7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=49be4fed-bb6d-4683-802f-01e5f62ca46a, invocation_id=617b76ae-9d6e-4067-a461-8215a3d0461e, invocation_timestamp=2021-10-28T08:44:23.622Z, origin=O=HSBC, L=London, C=GB, session_id=617b76ae-9d6e-4067-a461-8215a3d0461e, session_timestamp=2021-10-28T08:44:23.622Z, thread-id=206}
[INFO ] 2021-10-28T08:44:23,818Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=831fb744-2ec8-4acf-8c90-3c3b6c3bc7e3, invocation_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, invocation_timestamp=2021-10-28T08:44:23.535Z, origin=Only For Testing, session_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, session_timestamp=2021-10-28T08:44:23.535Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,819Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=831fb744-2ec8-4acf-8c90-3c3b6c3bc7e3, invocation_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, invocation_timestamp=2021-10-28T08:44:23.535Z, origin=Only For Testing, session_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, session_timestamp=2021-10-28T08:44:23.535Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,830Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=831fb744-2ec8-4acf-8c90-3c3b6c3bc7e3, invocation_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, invocation_timestamp=2021-10-28T08:44:23.535Z, origin=Only For Testing, session_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, session_timestamp=2021-10-28T08:44:23.535Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,887Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=5b08a4e1-ada3-45e2-a1fe-abf3251ec538, invocation_id=75620559-5050-4261-8905-f7a9e09d9c0b, invocation_timestamp=2021-10-28T08:44:23.643Z, origin=O=HSBC, L=London, C=GB, session_id=75620559-5050-4261-8905-f7a9e09d9c0b, session_timestamp=2021-10-28T08:44:23.643Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,896Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=5b08a4e1-ada3-45e2-a1fe-abf3251ec538, invocation_id=75620559-5050-4261-8905-f7a9e09d9c0b, invocation_timestamp=2021-10-28T08:44:23.643Z, origin=O=HSBC, L=London, C=GB, session_id=75620559-5050-4261-8905-f7a9e09d9c0b, session_timestamp=2021-10-28T08:44:23.643Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,903Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=5b08a4e1-ada3-45e2-a1fe-abf3251ec538, invocation_id=75620559-5050-4261-8905-f7a9e09d9c0b, invocation_timestamp=2021-10-28T08:44:23.643Z, origin=O=HSBC, L=London, C=GB, session_id=75620559-5050-4261-8905-f7a9e09d9c0b, session_timestamp=2021-10-28T08:44:23.643Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,909Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=5b08a4e1-ada3-45e2-a1fe-abf3251ec538, invocation_id=75620559-5050-4261-8905-f7a9e09d9c0b, invocation_timestamp=2021-10-28T08:44:23.643Z, origin=O=HSBC, L=London, C=GB, session_id=75620559-5050-4261-8905-f7a9e09d9c0b, session_timestamp=2021-10-28T08:44:23.643Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,919Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=831fb744-2ec8-4acf-8c90-3c3b6c3bc7e3, invocation_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, invocation_timestamp=2021-10-28T08:44:23.535Z, origin=Only For Testing, session_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, session_timestamp=2021-10-28T08:44:23.535Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,919Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=831fb744-2ec8-4acf-8c90-3c3b6c3bc7e3, invocation_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, invocation_timestamp=2021-10-28T08:44:23.535Z, origin=Only For Testing, session_id=496ab747-5ef8-4d5d-a6e8-787620d5ddbd, session_timestamp=2021-10-28T08:44:23.535Z, thread-id=206, tx_id=7EC023E48D546915E13975A80EB7625699C7F123CDB2DDD0D93D24B6F5036C4E}
[INFO ] 2021-10-28T08:44:23,970Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c19d9577-92e1-4479-9fcc-965cb6313d0f, invocation_id=08410611-1030-4a8c-b64d-e4b01a2d6913, invocation_timestamp=2021-10-28T08:44:23.930Z, origin=Only For Testing, session_id=08410611-1030-4a8c-b64d-e4b01a2d6913, session_timestamp=2021-10-28T08:44:23.930Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:23,985Z [Mock network] corda.flow. - Received a notarisation request for Tx [2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=03010495-8a90-409a-9800-c5778ec3ebf5, invocation_id=46fc19ce-f5f1-4e15-8cd5-6a0a925188fa, invocation_timestamp=2021-10-28T08:44:23.979Z, origin=O=Abbey, L=London, C=GB, session_id=46fc19ce-f5f1-4e15-8cd5-6a0a925188fa, session_timestamp=2021-10-28T08:44:23.979Z, thread-id=206}
[INFO ] 2021-10-28T08:44:24,171Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:44:24,177Z [Mock network] corda.flow. - Transaction [2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=03010495-8a90-409a-9800-c5778ec3ebf5, invocation_id=46fc19ce-f5f1-4e15-8cd5-6a0a925188fa, invocation_timestamp=2021-10-28T08:44:23.979Z, origin=O=Abbey, L=London, C=GB, session_id=46fc19ce-f5f1-4e15-8cd5-6a0a925188fa, session_timestamp=2021-10-28T08:44:23.979Z, thread-id=206}
[INFO ] 2021-10-28T08:44:24,197Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c19d9577-92e1-4479-9fcc-965cb6313d0f, invocation_id=08410611-1030-4a8c-b64d-e4b01a2d6913, invocation_timestamp=2021-10-28T08:44:23.930Z, origin=Only For Testing, session_id=08410611-1030-4a8c-b64d-e4b01a2d6913, session_timestamp=2021-10-28T08:44:23.930Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,199Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c19d9577-92e1-4479-9fcc-965cb6313d0f, invocation_id=08410611-1030-4a8c-b64d-e4b01a2d6913, invocation_timestamp=2021-10-28T08:44:23.930Z, origin=Only For Testing, session_id=08410611-1030-4a8c-b64d-e4b01a2d6913, session_timestamp=2021-10-28T08:44:23.930Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,208Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c19d9577-92e1-4479-9fcc-965cb6313d0f, invocation_id=08410611-1030-4a8c-b64d-e4b01a2d6913, invocation_timestamp=2021-10-28T08:44:23.930Z, origin=Only For Testing, session_id=08410611-1030-4a8c-b64d-e4b01a2d6913, session_timestamp=2021-10-28T08:44:23.930Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,230Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=01fe7ee4-2027-4bd4-8e6c-70aa676a7fce, invocation_id=863cce32-10dc-48fa-945b-d30398667cdd, invocation_timestamp=2021-10-28T08:44:23.993Z, origin=O=Abbey, L=London, C=GB, session_id=863cce32-10dc-48fa-945b-d30398667cdd, session_timestamp=2021-10-28T08:44:23.993Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,364Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=01fe7ee4-2027-4bd4-8e6c-70aa676a7fce, invocation_id=863cce32-10dc-48fa-945b-d30398667cdd, invocation_timestamp=2021-10-28T08:44:23.993Z, origin=O=Abbey, L=London, C=GB, session_id=863cce32-10dc-48fa-945b-d30398667cdd, session_timestamp=2021-10-28T08:44:23.993Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,368Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=01fe7ee4-2027-4bd4-8e6c-70aa676a7fce, invocation_id=863cce32-10dc-48fa-945b-d30398667cdd, invocation_timestamp=2021-10-28T08:44:23.993Z, origin=O=Abbey, L=London, C=GB, session_id=863cce32-10dc-48fa-945b-d30398667cdd, session_timestamp=2021-10-28T08:44:23.993Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,379Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=01fe7ee4-2027-4bd4-8e6c-70aa676a7fce, invocation_id=863cce32-10dc-48fa-945b-d30398667cdd, invocation_timestamp=2021-10-28T08:44:23.993Z, origin=O=Abbey, L=London, C=GB, session_id=863cce32-10dc-48fa-945b-d30398667cdd, session_timestamp=2021-10-28T08:44:23.993Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,411Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c19d9577-92e1-4479-9fcc-965cb6313d0f, invocation_id=08410611-1030-4a8c-b64d-e4b01a2d6913, invocation_timestamp=2021-10-28T08:44:23.930Z, origin=Only For Testing, session_id=08410611-1030-4a8c-b64d-e4b01a2d6913, session_timestamp=2021-10-28T08:44:23.930Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,411Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c19d9577-92e1-4479-9fcc-965cb6313d0f, invocation_id=08410611-1030-4a8c-b64d-e4b01a2d6913, invocation_timestamp=2021-10-28T08:44:23.930Z, origin=Only For Testing, session_id=08410611-1030-4a8c-b64d-e4b01a2d6913, session_timestamp=2021-10-28T08:44:23.930Z, thread-id=206, tx_id=2E27EB3D190972F1072AF87BC20200BAFC7B7F6AB5CB0710C818CEDC7E56DEE4}
[INFO ] 2021-10-28T08:44:24,657Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=26b27d0f-0d23-428f-a25d-ed19c449e427, invocation_id=961c8e07-658b-4856-89a7-06ea08901a07, invocation_timestamp=2021-10-28T08:44:24.429Z, origin=Only For Testing, session_id=961c8e07-658b-4856-89a7-06ea08901a07, session_timestamp=2021-10-28T08:44:24.429Z, thread-id=206, tx_id=E90330EDFB1A59026152CD21C11AB68330C6D1E99C7D42C2A12D13C671E6EDDA}
[INFO ] 2021-10-28T08:44:24,673Z [Mock network] corda.flow. - Received a notarisation request for Tx [E90330EDFB1A59026152CD21C11AB68330C6D1E99C7D42C2A12D13C671E6EDDA] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=d71ef8fe-31e8-43fc-8c4d-171f61975604, invocation_id=352493db-91ef-44a0-83d6-148f34b95353, invocation_timestamp=2021-10-28T08:44:24.666Z, origin=O=UK Mint, L=London, C=GB, session_id=352493db-91ef-44a0-83d6-148f34b95353, session_timestamp=2021-10-28T08:44:24.666Z, thread-id=206}
[INFO ] 2021-10-28T08:44:24,807Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T08:44:24,814Z [Mock network] corda.flow. - Transaction [E90330EDFB1A59026152CD21C11AB68330C6D1E99C7D42C2A12D13C671E6EDDA] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=d71ef8fe-31e8-43fc-8c4d-171f61975604, invocation_id=352493db-91ef-44a0-83d6-148f34b95353, invocation_timestamp=2021-10-28T08:44:24.666Z, origin=O=UK Mint, L=London, C=GB, session_id=352493db-91ef-44a0-83d6-148f34b95353, session_timestamp=2021-10-28T08:44:24.666Z, thread-id=206}
[INFO ] 2021-10-28T08:44:24,834Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=26b27d0f-0d23-428f-a25d-ed19c449e427, invocation_id=961c8e07-658b-4856-89a7-06ea08901a07, invocation_timestamp=2021-10-28T08:44:24.429Z, origin=Only For Testing, session_id=961c8e07-658b-4856-89a7-06ea08901a07, session_timestamp=2021-10-28T08:44:24.429Z, thread-id=206, tx_id=E90330EDFB1A59026152CD21C11AB68330C6D1E99C7D42C2A12D13C671E6EDDA}
[INFO ] 2021-10-28T08:44:24,835Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=26b27d0f-0d23-428f-a25d-ed19c449e427, invocation_id=961c8e07-658b-4856-89a7-06ea08901a07, invocation_timestamp=2021-10-28T08:44:24.429Z, origin=Only For Testing, session_id=961c8e07-658b-4856-89a7-06ea08901a07, session_timestamp=2021-10-28T08:44:24.429Z, thread-id=206, tx_id=E90330EDFB1A59026152CD21C11AB68330C6D1E99C7D42C2A12D13C671E6EDDA}
[INFO ] 2021-10-28T08:44:24,842Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=26b27d0f-0d23-428f-a25d-ed19c449e427, invocation_id=961c8e07-658b-4856-89a7-06ea08901a07, invocation_timestamp=2021-10-28T08:44:24.429Z, origin=Only For Testing, session_id=961c8e07-658b-4856-89a7-06ea08901a07, session_timestamp=2021-10-28T08:44:24.429Z, thread-id=206, tx_id=E90330EDFB1A59026152CD21C11AB68330C6D1E99C7D42C2A12D13C671E6EDDA}
[INFO ] 2021-10-28T08:44:24,842Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=26b27d0f-0d23-428f-a25d-ed19c449e427, invocation_id=961c8e07-658b-4856-89a7-06ea08901a07, invocation_timestamp=2021-10-28T08:44:24.429Z, origin=Only For Testing, session_id=961c8e07-658b-4856-89a7-06ea08901a07, session_timestamp=2021-10-28T08:44:24.429Z, thread-id=206, tx_id=E90330EDFB1A59026152CD21C11AB68330C6D1E99C7D42C2A12D13C671E6EDDA}
[INFO ] 2021-10-28T08:44:24,879Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T08:44:24,925Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:44:24,925Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:44:24,929Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T08:44:24,994Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:44:24,994Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:44:24,995Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T08:44:25,111Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:44:25,111Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T08:44:25,113Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T08:44:25,172Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T08:44:25,172Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:15,883Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/0/cordapps] {}
[INFO ] 2021-10-28T09:54:15,909Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:15,927Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:16,401Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:17,990Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:18,333Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:18,408Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:18,427Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:18,431Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:18,592Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,593Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,593Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,595Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,595Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,595Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:18,598Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,631Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:18,712Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:06.236Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:24,673Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:24,774Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:24,781Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:28,055Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:28,366Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:28,376Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366), owningKey=DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw {}
[INFO ] 2021-10-28T09:54:28,377Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:28,536Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366) {}
[INFO ] 2021-10-28T09:54:28,593Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:28,640Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:28,653Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:28,673Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366), owningKey=DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw {}
[INFO ] 2021-10-28T09:54:28,673Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:28,824Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:28,843Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:28,854Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:28,927Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:29,024Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:29,025Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T09:54:29,721Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366) {}
[INFO ] 2021-10-28T09:54:29,732Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366), owningKey=DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw {}
[INFO ] 2021-10-28T09:54:29,733Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:29,736Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366), owningKey=DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw {}
[INFO ] 2021-10-28T09:54:29,738Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:29,752Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/1/cordapps] {}
[INFO ] 2021-10-28T09:54:29,754Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:29,761Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:29,794Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:29,877Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:29,878Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:29,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:29,915Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:29,915Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:29,920Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,920Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,920Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,920Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,920Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,921Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:29,926Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:06.236Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:30,623Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:30,626Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:30,626Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:30,839Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:30,846Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:30,858Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846), owningKey=DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr {}
[INFO ] 2021-10-28T09:54:30,858Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:30,868Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846) {}
[INFO ] 2021-10-28T09:54:30,878Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:30,887Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846), owningKey=DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr {}
[INFO ] 2021-10-28T09:54:30,887Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:30,887Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:30,887Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:30,944Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:30,948Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:30,948Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:30,949Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:30,954Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:30,986Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846) {}
[INFO ] 2021-10-28T09:54:30,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366), owningKey=DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw {}
[INFO ] 2021-10-28T09:54:30,988Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:31,005Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846), owningKey=DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr {}
[INFO ] 2021-10-28T09:54:31,005Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:31,021Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846), owningKey=DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr {}
[INFO ] 2021-10-28T09:54:31,022Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:31,022Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846), owningKey=DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr {}
[INFO ] 2021-10-28T09:54:31,022Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:31,030Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/2/cordapps] {}
[INFO ] 2021-10-28T09:54:31,031Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:31,031Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:31,039Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:31,093Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:31,094Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:31,096Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:31,127Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:31,128Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:31,135Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,135Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,135Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,135Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,136Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:31,141Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:06.236Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:31,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:31,757Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:31,757Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:31,911Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:31,916Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:31,920Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916), owningKey=DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc {}
[INFO ] 2021-10-28T09:54:31,920Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:31,929Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916) {}
[INFO ] 2021-10-28T09:54:31,939Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:31,943Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:31,943Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:31,947Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916), owningKey=DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc {}
[INFO ] 2021-10-28T09:54:31,947Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:31,986Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:31,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:31,989Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:31,990Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:31,996Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:32,018Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916) {}
[INFO ] 2021-10-28T09:54:32,023Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366), owningKey=DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw {}
[INFO ] 2021-10-28T09:54:32,023Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:32,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916), owningKey=DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc {}
[INFO ] 2021-10-28T09:54:32,039Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,057Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846), owningKey=DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr {}
[INFO ] 2021-10-28T09:54:32,057Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,067Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916), owningKey=DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc {}
[INFO ] 2021-10-28T09:54:32,067Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,076Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916), owningKey=DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc {}
[INFO ] 2021-10-28T09:54:32,076Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:32,076Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916), owningKey=DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc {}
[INFO ] 2021-10-28T09:54:32,076Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:32,086Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/3/cordapps] {}
[INFO ] 2021-10-28T09:54:32,087Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:32,087Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:32,095Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:32,135Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:32,135Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:32,136Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:32,167Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:32,167Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:32,175Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,175Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:32,178Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:06.236Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:32,660Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:32,661Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:32,661Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:32,799Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:32,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:32,809Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805), owningKey=DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS {}
[INFO ] 2021-10-28T09:54:32,809Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,815Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805) {}
[INFO ] 2021-10-28T09:54:32,821Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:32,823Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:32,823Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:32,834Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805), owningKey=DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS {}
[INFO ] 2021-10-28T09:54:32,834Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:32,865Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:32,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:32,868Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095408.505-8C763CD810219EFB/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:32,869Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:32,877Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:32,900Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805) {}
[INFO ] 2021-10-28T09:54:32,902Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414868366), owningKey=DL9mqmoc4nBDNpN6pWac812i5yabS5UP9TSvVD6dioB9Bw {}
[INFO ] 2021-10-28T09:54:32,902Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:32,912Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805), owningKey=DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS {}
[INFO ] 2021-10-28T09:54:32,912Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,923Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414870846), owningKey=DL33aZNm85pwHBWfSFasPXoP1WH8Ny7pyNdvVx3NK52bNr {}
[INFO ] 2021-10-28T09:54:32,923Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,934Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805), owningKey=DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS {}
[INFO ] 2021-10-28T09:54:32,934Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,944Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414871916), owningKey=DLDbNvmFpyvGzt2fhCJrxaBvworqc83XCrvN19JaZ9iPWc {}
[INFO ] 2021-10-28T09:54:32,944Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,954Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805), owningKey=DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS {}
[INFO ] 2021-10-28T09:54:32,954Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:32,962Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805), owningKey=DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS {}
[INFO ] 2021-10-28T09:54:32,962Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:32,963Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414872805), owningKey=DLCZv99fyj6bwH1USLuEnVwzb3BQB6hQ49yrwfr2V566AS {}
[INFO ] 2021-10-28T09:54:32,963Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:33,998Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8c9f86b-e395-4617-b20f-6e82dada1a46, invocation_id=95f747e2-c14e-447b-8379-dd2164f56ccd, invocation_timestamp=2021-10-28T09:54:33.016Z, origin=Only For Testing, session_id=95f747e2-c14e-447b-8379-dd2164f56ccd, session_timestamp=2021-10-28T09:54:33.016Z, thread-id=205, tx_id=C2981A706DB60C95413BA221757F1C90AED8AB33EE0C1B932863DB756A0A42DA}
[INFO ] 2021-10-28T09:54:33,998Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8c9f86b-e395-4617-b20f-6e82dada1a46, invocation_id=95f747e2-c14e-447b-8379-dd2164f56ccd, invocation_timestamp=2021-10-28T09:54:33.016Z, origin=Only For Testing, session_id=95f747e2-c14e-447b-8379-dd2164f56ccd, session_timestamp=2021-10-28T09:54:33.016Z, thread-id=205, tx_id=C2981A706DB60C95413BA221757F1C90AED8AB33EE0C1B932863DB756A0A42DA}
[INFO ] 2021-10-28T09:54:34,127Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8c9f86b-e395-4617-b20f-6e82dada1a46, invocation_id=95f747e2-c14e-447b-8379-dd2164f56ccd, invocation_timestamp=2021-10-28T09:54:33.016Z, origin=Only For Testing, session_id=95f747e2-c14e-447b-8379-dd2164f56ccd, session_timestamp=2021-10-28T09:54:33.016Z, thread-id=205, tx_id=C2981A706DB60C95413BA221757F1C90AED8AB33EE0C1B932863DB756A0A42DA}
[INFO ] 2021-10-28T09:54:34,127Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c8c9f86b-e395-4617-b20f-6e82dada1a46, invocation_id=95f747e2-c14e-447b-8379-dd2164f56ccd, invocation_timestamp=2021-10-28T09:54:33.016Z, origin=Only For Testing, session_id=95f747e2-c14e-447b-8379-dd2164f56ccd, session_timestamp=2021-10-28T09:54:33.016Z, thread-id=205, tx_id=C2981A706DB60C95413BA221757F1C90AED8AB33EE0C1B932863DB756A0A42DA}
[INFO ] 2021-10-28T09:54:34,513Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9afbe946-f900-4724-b98f-00b76c68b60e, invocation_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, invocation_timestamp=2021-10-28T09:54:34.249Z, origin=Only For Testing, session_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, session_timestamp=2021-10-28T09:54:34.249Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:34,606Z [Mock network] corda.flow. - Received a notarisation request for Tx [5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771] from [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=d6acee75-0add-4a63-92a4-a109c2d8560e, invocation_id=13279d48-9ed7-4ecd-a41c-870b8934ab75, invocation_timestamp=2021-10-28T09:54:34.577Z, origin=O=UK Mint, L=London, C=GB, session_id=13279d48-9ed7-4ecd-a41c-870b8934ab75, session_timestamp=2021-10-28T09:54:34.577Z, thread-id=205}
[INFO ] 2021-10-28T09:54:34,909Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T09:54:34,926Z [Mock network] corda.flow. - Transaction [5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000003, flow-id=d6acee75-0add-4a63-92a4-a109c2d8560e, invocation_id=13279d48-9ed7-4ecd-a41c-870b8934ab75, invocation_timestamp=2021-10-28T09:54:34.577Z, origin=O=UK Mint, L=London, C=GB, session_id=13279d48-9ed7-4ecd-a41c-870b8934ab75, session_timestamp=2021-10-28T09:54:34.577Z, thread-id=205}
[INFO ] 2021-10-28T09:54:34,963Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9afbe946-f900-4724-b98f-00b76c68b60e, invocation_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, invocation_timestamp=2021-10-28T09:54:34.249Z, origin=Only For Testing, session_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, session_timestamp=2021-10-28T09:54:34.249Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:34,966Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9afbe946-f900-4724-b98f-00b76c68b60e, invocation_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, invocation_timestamp=2021-10-28T09:54:34.249Z, origin=Only For Testing, session_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, session_timestamp=2021-10-28T09:54:34.249Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:34,979Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9afbe946-f900-4724-b98f-00b76c68b60e, invocation_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, invocation_timestamp=2021-10-28T09:54:34.249Z, origin=Only For Testing, session_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, session_timestamp=2021-10-28T09:54:34.249Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:35,021Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000004, flow-id=523322ac-4f99-471a-bf04-a41cb62a7dbc, invocation_id=a2fb0023-4030-422e-93ba-f61ac6440687, invocation_timestamp=2021-10-28T09:54:34.683Z, origin=O=UK Mint, L=London, C=GB, session_id=a2fb0023-4030-422e-93ba-f61ac6440687, session_timestamp=2021-10-28T09:54:34.683Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:35,178Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=523322ac-4f99-471a-bf04-a41cb62a7dbc, invocation_id=a2fb0023-4030-422e-93ba-f61ac6440687, invocation_timestamp=2021-10-28T09:54:34.683Z, origin=O=UK Mint, L=London, C=GB, session_id=a2fb0023-4030-422e-93ba-f61ac6440687, session_timestamp=2021-10-28T09:54:34.683Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:35,191Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=523322ac-4f99-471a-bf04-a41cb62a7dbc, invocation_id=a2fb0023-4030-422e-93ba-f61ac6440687, invocation_timestamp=2021-10-28T09:54:34.683Z, origin=O=UK Mint, L=London, C=GB, session_id=a2fb0023-4030-422e-93ba-f61ac6440687, session_timestamp=2021-10-28T09:54:34.683Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:35,209Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=523322ac-4f99-471a-bf04-a41cb62a7dbc, invocation_id=a2fb0023-4030-422e-93ba-f61ac6440687, invocation_timestamp=2021-10-28T09:54:34.683Z, origin=O=UK Mint, L=London, C=GB, session_id=a2fb0023-4030-422e-93ba-f61ac6440687, session_timestamp=2021-10-28T09:54:34.683Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:35,228Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9afbe946-f900-4724-b98f-00b76c68b60e, invocation_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, invocation_timestamp=2021-10-28T09:54:34.249Z, origin=Only For Testing, session_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, session_timestamp=2021-10-28T09:54:34.249Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:35,228Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=9afbe946-f900-4724-b98f-00b76c68b60e, invocation_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, invocation_timestamp=2021-10-28T09:54:34.249Z, origin=Only For Testing, session_id=aac1aa08-4dcd-4391-a2c9-44f5a227b141, session_timestamp=2021-10-28T09:54:34.249Z, thread-id=205, tx_id=5152D19B56CDC2D3F0BF790395A122C05F28B536014BA299DD904AEF89E7C771}
[INFO ] 2021-10-28T09:54:35,321Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d9de4da2-de03-41b5-8b81-5af03694876a, invocation_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, invocation_timestamp=2021-10-28T09:54:35.241Z, origin=Only For Testing, session_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, session_timestamp=2021-10-28T09:54:35.241Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,345Z [Mock network] corda.flow. - Received a notarisation request for Tx [8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B] from [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=a857a21a-f79e-496b-b613-2b64ca4c6aaf, invocation_id=5d3669ee-6b66-4541-b7a2-e23f4289479c, invocation_timestamp=2021-10-28T09:54:35.334Z, origin=O=Abbey, L=London, C=GB, session_id=5d3669ee-6b66-4541-b7a2-e23f4289479c, session_timestamp=2021-10-28T09:54:35.334Z, thread-id=205}
[INFO ] 2021-10-28T09:54:35,536Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T09:54:35,542Z [Mock network] corda.flow. - Transaction [8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000006, flow-id=a857a21a-f79e-496b-b613-2b64ca4c6aaf, invocation_id=5d3669ee-6b66-4541-b7a2-e23f4289479c, invocation_timestamp=2021-10-28T09:54:35.334Z, origin=O=Abbey, L=London, C=GB, session_id=5d3669ee-6b66-4541-b7a2-e23f4289479c, session_timestamp=2021-10-28T09:54:35.334Z, thread-id=205}
[INFO ] 2021-10-28T09:54:35,557Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d9de4da2-de03-41b5-8b81-5af03694876a, invocation_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, invocation_timestamp=2021-10-28T09:54:35.241Z, origin=Only For Testing, session_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, session_timestamp=2021-10-28T09:54:35.241Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,559Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d9de4da2-de03-41b5-8b81-5af03694876a, invocation_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, invocation_timestamp=2021-10-28T09:54:35.241Z, origin=Only For Testing, session_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, session_timestamp=2021-10-28T09:54:35.241Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,565Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d9de4da2-de03-41b5-8b81-5af03694876a, invocation_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, invocation_timestamp=2021-10-28T09:54:35.241Z, origin=Only For Testing, session_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, session_timestamp=2021-10-28T09:54:35.241Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,588Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000007, flow-id=b23a8259-5029-434d-9237-c085c32794c5, invocation_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, invocation_timestamp=2021-10-28T09:54:35.359Z, origin=O=Abbey, L=London, C=GB, session_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, session_timestamp=2021-10-28T09:54:35.359Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,742Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=b23a8259-5029-434d-9237-c085c32794c5, invocation_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, invocation_timestamp=2021-10-28T09:54:35.359Z, origin=O=Abbey, L=London, C=GB, session_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, session_timestamp=2021-10-28T09:54:35.359Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,750Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=b23a8259-5029-434d-9237-c085c32794c5, invocation_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, invocation_timestamp=2021-10-28T09:54:35.359Z, origin=O=Abbey, L=London, C=GB, session_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, session_timestamp=2021-10-28T09:54:35.359Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,759Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=b23a8259-5029-434d-9237-c085c32794c5, invocation_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, invocation_timestamp=2021-10-28T09:54:35.359Z, origin=O=Abbey, L=London, C=GB, session_id=0aa43fd4-a6ae-415f-bb17-c3962e70ac78, session_timestamp=2021-10-28T09:54:35.359Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,770Z [Mock network] corda.flow. - Party O=HSBC, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d9de4da2-de03-41b5-8b81-5af03694876a, invocation_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, invocation_timestamp=2021-10-28T09:54:35.241Z, origin=Only For Testing, session_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, session_timestamp=2021-10-28T09:54:35.241Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,770Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=d9de4da2-de03-41b5-8b81-5af03694876a, invocation_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, invocation_timestamp=2021-10-28T09:54:35.241Z, origin=Only For Testing, session_id=4acdc6f5-4770-4ace-9020-95cbb81ac00b, session_timestamp=2021-10-28T09:54:35.241Z, thread-id=205, tx_id=8D0A1E3E5E3D64998790243CA89494E6AA187E303771DA472C3E12395AD0FA6B}
[INFO ] 2021-10-28T09:54:35,854Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=371a1ab7-863a-4c14-804e-a8b95191ee7f, invocation_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, invocation_timestamp=2021-10-28T09:54:35.781Z, origin=Only For Testing, session_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, session_timestamp=2021-10-28T09:54:35.781Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:35,875Z [Mock network] corda.flow. - Received a notarisation request for Tx [D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F] from [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=a470d071-1d47-459c-9de4-bcb560e62b6f, invocation_id=f2beed88-c84b-4eca-92fd-694dd6e6a296, invocation_timestamp=2021-10-28T09:54:35.864Z, origin=O=HSBC, L=London, C=GB, session_id=f2beed88-c84b-4eca-92fd-694dd6e6a296, session_timestamp=2021-10-28T09:54:35.864Z, thread-id=205}
[INFO ] 2021-10-28T09:54:35,944Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T09:54:35,947Z [Mock network] corda.flow. - Transaction [D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F] successfully notarised, sending signature back to [O=HSBC, L=London, C=GB] {fiber-id=10000009, flow-id=a470d071-1d47-459c-9de4-bcb560e62b6f, invocation_id=f2beed88-c84b-4eca-92fd-694dd6e6a296, invocation_timestamp=2021-10-28T09:54:35.864Z, origin=O=HSBC, L=London, C=GB, session_id=f2beed88-c84b-4eca-92fd-694dd6e6a296, session_timestamp=2021-10-28T09:54:35.864Z, thread-id=205}
[INFO ] 2021-10-28T09:54:36,003Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=371a1ab7-863a-4c14-804e-a8b95191ee7f, invocation_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, invocation_timestamp=2021-10-28T09:54:35.781Z, origin=Only For Testing, session_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, session_timestamp=2021-10-28T09:54:35.781Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,004Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=371a1ab7-863a-4c14-804e-a8b95191ee7f, invocation_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, invocation_timestamp=2021-10-28T09:54:35.781Z, origin=Only For Testing, session_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, session_timestamp=2021-10-28T09:54:35.781Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,012Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=371a1ab7-863a-4c14-804e-a8b95191ee7f, invocation_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, invocation_timestamp=2021-10-28T09:54:35.781Z, origin=Only For Testing, session_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, session_timestamp=2021-10-28T09:54:35.781Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,029Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=HSBC, L=London, C=GB. {fiber-id=10000010, flow-id=4b4313c4-fca7-4da8-a29b-1352617caece, invocation_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, invocation_timestamp=2021-10-28T09:54:35.882Z, origin=O=HSBC, L=London, C=GB, session_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, session_timestamp=2021-10-28T09:54:35.882Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,037Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=4b4313c4-fca7-4da8-a29b-1352617caece, invocation_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, invocation_timestamp=2021-10-28T09:54:35.882Z, origin=O=HSBC, L=London, C=GB, session_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, session_timestamp=2021-10-28T09:54:35.882Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,044Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=4b4313c4-fca7-4da8-a29b-1352617caece, invocation_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, invocation_timestamp=2021-10-28T09:54:35.882Z, origin=O=HSBC, L=London, C=GB, session_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, session_timestamp=2021-10-28T09:54:35.882Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,050Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=4b4313c4-fca7-4da8-a29b-1352617caece, invocation_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, invocation_timestamp=2021-10-28T09:54:35.882Z, origin=O=HSBC, L=London, C=GB, session_id=d88108b3-7c43-4921-a22d-63bc7dd5d460, session_timestamp=2021-10-28T09:54:35.882Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,060Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=371a1ab7-863a-4c14-804e-a8b95191ee7f, invocation_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, invocation_timestamp=2021-10-28T09:54:35.781Z, origin=Only For Testing, session_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, session_timestamp=2021-10-28T09:54:35.781Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,060Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=HSBC, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=371a1ab7-863a-4c14-804e-a8b95191ee7f, invocation_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, invocation_timestamp=2021-10-28T09:54:35.781Z, origin=Only For Testing, session_id=7f6a0c18-3927-449c-a85d-098d2bb5ab57, session_timestamp=2021-10-28T09:54:35.781Z, thread-id=205, tx_id=D41448A4DBCB536778D149475C9B531D977EF45961417F82F27DF126964FCC9F}
[INFO ] 2021-10-28T09:54:36,115Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=38e37391-3898-4dfb-bd61-9cc412bba987, invocation_id=dad24733-79ef-48e7-872c-4367999825be, invocation_timestamp=2021-10-28T09:54:36.072Z, origin=Only For Testing, session_id=dad24733-79ef-48e7-872c-4367999825be, session_timestamp=2021-10-28T09:54:36.072Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,126Z [Mock network] corda.flow. - Received a notarisation request for Tx [79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204] from [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=805d0c38-b6c4-49b5-9bff-9e0699200265, invocation_id=73629324-04f2-4763-94e8-31ed63debf4d, invocation_timestamp=2021-10-28T09:54:36.122Z, origin=O=Abbey, L=London, C=GB, session_id=73629324-04f2-4763-94e8-31ed63debf4d, session_timestamp=2021-10-28T09:54:36.122Z, thread-id=205}
[INFO ] 2021-10-28T09:54:36,351Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T09:54:36,356Z [Mock network] corda.flow. - Transaction [79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204] successfully notarised, sending signature back to [O=Abbey, L=London, C=GB] {fiber-id=10000012, flow-id=805d0c38-b6c4-49b5-9bff-9e0699200265, invocation_id=73629324-04f2-4763-94e8-31ed63debf4d, invocation_timestamp=2021-10-28T09:54:36.122Z, origin=O=Abbey, L=London, C=GB, session_id=73629324-04f2-4763-94e8-31ed63debf4d, session_timestamp=2021-10-28T09:54:36.122Z, thread-id=205}
[INFO ] 2021-10-28T09:54:36,403Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=38e37391-3898-4dfb-bd61-9cc412bba987, invocation_id=dad24733-79ef-48e7-872c-4367999825be, invocation_timestamp=2021-10-28T09:54:36.072Z, origin=Only For Testing, session_id=dad24733-79ef-48e7-872c-4367999825be, session_timestamp=2021-10-28T09:54:36.072Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,404Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=38e37391-3898-4dfb-bd61-9cc412bba987, invocation_id=dad24733-79ef-48e7-872c-4367999825be, invocation_timestamp=2021-10-28T09:54:36.072Z, origin=Only For Testing, session_id=dad24733-79ef-48e7-872c-4367999825be, session_timestamp=2021-10-28T09:54:36.072Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,411Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=38e37391-3898-4dfb-bd61-9cc412bba987, invocation_id=dad24733-79ef-48e7-872c-4367999825be, invocation_timestamp=2021-10-28T09:54:36.072Z, origin=Only For Testing, session_id=dad24733-79ef-48e7-872c-4367999825be, session_timestamp=2021-10-28T09:54:36.072Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,436Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Abbey, L=London, C=GB. {fiber-id=10000013, flow-id=44865b26-78de-4cb8-ab3f-56084548477e, invocation_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, invocation_timestamp=2021-10-28T09:54:36.132Z, origin=O=Abbey, L=London, C=GB, session_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, session_timestamp=2021-10-28T09:54:36.132Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,524Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=44865b26-78de-4cb8-ab3f-56084548477e, invocation_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, invocation_timestamp=2021-10-28T09:54:36.132Z, origin=O=Abbey, L=London, C=GB, session_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, session_timestamp=2021-10-28T09:54:36.132Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,531Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=44865b26-78de-4cb8-ab3f-56084548477e, invocation_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, invocation_timestamp=2021-10-28T09:54:36.132Z, origin=O=Abbey, L=London, C=GB, session_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, session_timestamp=2021-10-28T09:54:36.132Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,537Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=44865b26-78de-4cb8-ab3f-56084548477e, invocation_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, invocation_timestamp=2021-10-28T09:54:36.132Z, origin=O=Abbey, L=London, C=GB, session_id=5cbd4bbc-c9ef-45fb-b5ee-f77beb0b9a9d, session_timestamp=2021-10-28T09:54:36.132Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,545Z [Mock network] corda.flow. - Party O=UK Mint, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=38e37391-3898-4dfb-bd61-9cc412bba987, invocation_id=dad24733-79ef-48e7-872c-4367999825be, invocation_timestamp=2021-10-28T09:54:36.072Z, origin=Only For Testing, session_id=dad24733-79ef-48e7-872c-4367999825be, session_timestamp=2021-10-28T09:54:36.072Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,545Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Abbey, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=38e37391-3898-4dfb-bd61-9cc412bba987, invocation_id=dad24733-79ef-48e7-872c-4367999825be, invocation_timestamp=2021-10-28T09:54:36.072Z, origin=Only For Testing, session_id=dad24733-79ef-48e7-872c-4367999825be, session_timestamp=2021-10-28T09:54:36.072Z, thread-id=205, tx_id=79E77462710D6E13C6ACA107B83E780B945B392204FB6F95280A6229B0F9E204}
[INFO ] 2021-10-28T09:54:36,722Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=c3afb6b4-662e-4207-abb5-a58ce111d8bf, invocation_id=703b73e1-4235-4622-b0c9-83c398dcf386, invocation_timestamp=2021-10-28T09:54:36.556Z, origin=Only For Testing, session_id=703b73e1-4235-4622-b0c9-83c398dcf386, session_timestamp=2021-10-28T09:54:36.556Z, thread-id=205, tx_id=3F4544B107D475E195502E35DBF8187BCF060C187E28ADBDFE1EE06805B76362}
[INFO ] 2021-10-28T09:54:36,737Z [Mock network] corda.flow. - Received a notarisation request for Tx [3F4544B107D475E195502E35DBF8187BCF060C187E28ADBDFE1EE06805B76362] from [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=8cea3181-384a-41d3-9ede-855e573c644f, invocation_id=78041867-81ae-40a3-aa93-1c716f67db68, invocation_timestamp=2021-10-28T09:54:36.730Z, origin=O=UK Mint, L=London, C=GB, session_id=78041867-81ae-40a3-aa93-1c716f67db68, session_timestamp=2021-10-28T09:54:36.730Z, thread-id=205}
[INFO ] 2021-10-28T09:54:36,963Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T09:54:36,967Z [Mock network] corda.flow. - Transaction [3F4544B107D475E195502E35DBF8187BCF060C187E28ADBDFE1EE06805B76362] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000016, flow-id=8cea3181-384a-41d3-9ede-855e573c644f, invocation_id=78041867-81ae-40a3-aa93-1c716f67db68, invocation_timestamp=2021-10-28T09:54:36.730Z, origin=O=UK Mint, L=London, C=GB, session_id=78041867-81ae-40a3-aa93-1c716f67db68, session_timestamp=2021-10-28T09:54:36.730Z, thread-id=205}
[INFO ] 2021-10-28T09:54:37,015Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=c3afb6b4-662e-4207-abb5-a58ce111d8bf, invocation_id=703b73e1-4235-4622-b0c9-83c398dcf386, invocation_timestamp=2021-10-28T09:54:36.556Z, origin=Only For Testing, session_id=703b73e1-4235-4622-b0c9-83c398dcf386, session_timestamp=2021-10-28T09:54:36.556Z, thread-id=205, tx_id=3F4544B107D475E195502E35DBF8187BCF060C187E28ADBDFE1EE06805B76362}
[INFO ] 2021-10-28T09:54:37,016Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=c3afb6b4-662e-4207-abb5-a58ce111d8bf, invocation_id=703b73e1-4235-4622-b0c9-83c398dcf386, invocation_timestamp=2021-10-28T09:54:36.556Z, origin=Only For Testing, session_id=703b73e1-4235-4622-b0c9-83c398dcf386, session_timestamp=2021-10-28T09:54:36.556Z, thread-id=205, tx_id=3F4544B107D475E195502E35DBF8187BCF060C187E28ADBDFE1EE06805B76362}
[INFO ] 2021-10-28T09:54:37,022Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=c3afb6b4-662e-4207-abb5-a58ce111d8bf, invocation_id=703b73e1-4235-4622-b0c9-83c398dcf386, invocation_timestamp=2021-10-28T09:54:36.556Z, origin=Only For Testing, session_id=703b73e1-4235-4622-b0c9-83c398dcf386, session_timestamp=2021-10-28T09:54:36.556Z, thread-id=205, tx_id=3F4544B107D475E195502E35DBF8187BCF060C187E28ADBDFE1EE06805B76362}
[INFO ] 2021-10-28T09:54:37,022Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000014, flow-id=c3afb6b4-662e-4207-abb5-a58ce111d8bf, invocation_id=703b73e1-4235-4622-b0c9-83c398dcf386, invocation_timestamp=2021-10-28T09:54:36.556Z, origin=Only For Testing, session_id=703b73e1-4235-4622-b0c9-83c398dcf386, session_timestamp=2021-10-28T09:54:36.556Z, thread-id=205, tx_id=3F4544B107D475E195502E35DBF8187BCF060C187E28ADBDFE1EE06805B76362}
[INFO ] 2021-10-28T09:54:37,054Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-10-28T09:54:37,074Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:37,074Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:37,078Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-10-28T09:54:37,090Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:37,090Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:37,091Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-10-28T09:54:37,102Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:37,102Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:37,104Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-10-28T09:54:37,117Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:37,117Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:37,215Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/0/cordapps] {}
[INFO ] 2021-10-28T09:54:37,216Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:37,216Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:37,224Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:37,256Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:37,258Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:37,259Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:37,268Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:37,269Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,276Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:37,288Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:37.120Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:37,862Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:37,864Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:37,864Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:37,988Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:37,993Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:37,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993), owningKey=DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV {}
[INFO ] 2021-10-28T09:54:37,995Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:38,010Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993) {}
[INFO ] 2021-10-28T09:54:38,018Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:38,019Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:38,019Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:38,025Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993), owningKey=DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV {}
[INFO ] 2021-10-28T09:54:38,025Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:38,068Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:38,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:38,071Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:38,071Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:38,075Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:38,078Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T09:54:38,102Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993) {}
[INFO ] 2021-10-28T09:54:38,102Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993), owningKey=DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV {}
[INFO ] 2021-10-28T09:54:38,102Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:38,102Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993), owningKey=DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV {}
[INFO ] 2021-10-28T09:54:38,102Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:38,110Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/1/cordapps] {}
[INFO ] 2021-10-28T09:54:38,110Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:38,111Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:38,117Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:38,148Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:38,148Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:38,149Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:38,186Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:38,187Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:38,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,197Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,198Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:37.120Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:38,668Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:38,671Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:38,671Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:38,791Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:38,799Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:38,801Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799), owningKey=DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU {}
[INFO ] 2021-10-28T09:54:38,801Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:38,808Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799) {}
[INFO ] 2021-10-28T09:54:38,812Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:38,813Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:38,813Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:38,820Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799), owningKey=DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU {}
[INFO ] 2021-10-28T09:54:38,820Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:38,850Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:38,853Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:38,853Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:38,854Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:38,858Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:38,873Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799) {}
[INFO ] 2021-10-28T09:54:38,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993), owningKey=DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV {}
[INFO ] 2021-10-28T09:54:38,875Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:38,884Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799), owningKey=DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU {}
[INFO ] 2021-10-28T09:54:38,884Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:38,890Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799), owningKey=DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU {}
[INFO ] 2021-10-28T09:54:38,890Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:38,890Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799), owningKey=DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU {}
[INFO ] 2021-10-28T09:54:38,890Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:38,899Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/2/cordapps] {}
[INFO ] 2021-10-28T09:54:38,899Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:38,899Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:38,916Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:38,946Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:38,947Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:38,948Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:38,977Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:38,977Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:38,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,985Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:38,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,986Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:38,988Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:37.120Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:39,449Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:39,451Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:39,451Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:39,564Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:39,569Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:39,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570), owningKey=DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop {}
[INFO ] 2021-10-28T09:54:39,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:39,577Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570) {}
[INFO ] 2021-10-28T09:54:39,581Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:39,583Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:39,583Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:39,588Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570), owningKey=DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop {}
[INFO ] 2021-10-28T09:54:39,588Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:39,622Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:39,624Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:39,625Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:39,625Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:39,630Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:39,644Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570) {}
[INFO ] 2021-10-28T09:54:39,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993), owningKey=DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV {}
[INFO ] 2021-10-28T09:54:39,646Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:39,655Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570), owningKey=DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop {}
[INFO ] 2021-10-28T09:54:39,655Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:39,663Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799), owningKey=DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU {}
[INFO ] 2021-10-28T09:54:39,663Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:39,671Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570), owningKey=DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop {}
[INFO ] 2021-10-28T09:54:39,671Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:39,679Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570), owningKey=DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop {}
[INFO ] 2021-10-28T09:54:39,679Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:39,679Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570), owningKey=DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop {}
[INFO ] 2021-10-28T09:54:39,679Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:39,687Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/3/cordapps] {}
[INFO ] 2021-10-28T09:54:39,687Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:39,687Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:39,695Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:39,729Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:39,730Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:39,731Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:39,761Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:39,761Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:39,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:37.120Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:40,218Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:40,223Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:40,223Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:40,352Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:40,356Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:40,359Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356), owningKey=DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW {}
[INFO ] 2021-10-28T09:54:40,359Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:40,376Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356) {}
[INFO ] 2021-10-28T09:54:40,381Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:40,384Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:40,384Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:40,388Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356), owningKey=DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW {}
[INFO ] 2021-10-28T09:54:40,388Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:40,422Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:40,425Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:40,426Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095437.120-887805BD6E881EDB/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:40,427Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:40,436Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:40,455Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356) {}
[INFO ] 2021-10-28T09:54:40,456Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414877993), owningKey=DLFStLTFbBKieB8ypDXLejiTb3ugpJ8T9ugHJvdwTL44TV {}
[INFO ] 2021-10-28T09:54:40,456Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:40,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356), owningKey=DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW {}
[INFO ] 2021-10-28T09:54:40,463Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:40,470Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414878799), owningKey=DLFJqgGAPZuqV2gR5PekALrPpCYvFaacNnn6chkeZKVdiU {}
[INFO ] 2021-10-28T09:54:40,470Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:40,481Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356), owningKey=DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW {}
[INFO ] 2021-10-28T09:54:40,481Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:40,490Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414879570), owningKey=DLEWtW5KkSErEmDdosE66sfCAxpniey1JYh212si5Bkbop {}
[INFO ] 2021-10-28T09:54:40,490Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:40,497Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356), owningKey=DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW {}
[INFO ] 2021-10-28T09:54:40,497Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:40,503Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356), owningKey=DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW {}
[INFO ] 2021-10-28T09:54:40,503Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:40,503Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414880356), owningKey=DLDVzAABVNWrZeVNAxXE9WqbwSvWqgqWbk9emHTepfkrbW {}
[INFO ] 2021-10-28T09:54:40,503Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:40,587Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000017, flow-id=b3866f3a-c1ca-48e5-8ae8-ae77c2449ca9, invocation_id=ab8fad86-725e-4d03-93f5-d75921be203d, invocation_timestamp=2021-10-28T09:54:40.504Z, origin=Only For Testing, session_id=ab8fad86-725e-4d03-93f5-d75921be203d, session_timestamp=2021-10-28T09:54:40.504Z, thread-id=420, tx_id=8D202687F8BCFACF7035E2EFEFC215AD82CC19A6E2C336E912719517B2EA3779}
[INFO ] 2021-10-28T09:54:40,587Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000017, flow-id=b3866f3a-c1ca-48e5-8ae8-ae77c2449ca9, invocation_id=ab8fad86-725e-4d03-93f5-d75921be203d, invocation_timestamp=2021-10-28T09:54:40.504Z, origin=Only For Testing, session_id=ab8fad86-725e-4d03-93f5-d75921be203d, session_timestamp=2021-10-28T09:54:40.504Z, thread-id=420, tx_id=8D202687F8BCFACF7035E2EFEFC215AD82CC19A6E2C336E912719517B2EA3779}
[INFO ] 2021-10-28T09:54:40,607Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000017, flow-id=b3866f3a-c1ca-48e5-8ae8-ae77c2449ca9, invocation_id=ab8fad86-725e-4d03-93f5-d75921be203d, invocation_timestamp=2021-10-28T09:54:40.504Z, origin=Only For Testing, session_id=ab8fad86-725e-4d03-93f5-d75921be203d, session_timestamp=2021-10-28T09:54:40.504Z, thread-id=420, tx_id=8D202687F8BCFACF7035E2EFEFC215AD82CC19A6E2C336E912719517B2EA3779}
[INFO ] 2021-10-28T09:54:40,607Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000017, flow-id=b3866f3a-c1ca-48e5-8ae8-ae77c2449ca9, invocation_id=ab8fad86-725e-4d03-93f5-d75921be203d, invocation_timestamp=2021-10-28T09:54:40.504Z, origin=Only For Testing, session_id=ab8fad86-725e-4d03-93f5-d75921be203d, session_timestamp=2021-10-28T09:54:40.504Z, thread-id=420, tx_id=8D202687F8BCFACF7035E2EFEFC215AD82CC19A6E2C336E912719517B2EA3779}
[INFO ] 2021-10-28T09:54:40,620Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2021-10-28T09:54:40,632Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:40,632Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:40,634Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2021-10-28T09:54:40,643Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:40,643Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:40,644Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2021-10-28T09:54:40,653Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:40,653Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:40,655Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2021-10-28T09:54:40,670Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:40,670Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:40,751Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/0/cordapps] {}
[INFO ] 2021-10-28T09:54:40,751Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:40,751Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:40,758Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:40,789Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:40,789Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:40,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:40,794Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:40,794Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,801Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:40,804Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:40.671Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:41,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:41,298Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:41,298Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:41,414Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2021-10-28T09:54:41,418Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:41,428Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418), owningKey=DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML {}
[INFO ] 2021-10-28T09:54:41,428Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:41,438Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418) {}
[INFO ] 2021-10-28T09:54:41,446Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:41,447Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:41,447Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:41,451Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418), owningKey=DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML {}
[INFO ] 2021-10-28T09:54:41,451Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:41,483Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:41,485Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:41,485Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:41,486Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:41,489Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:41,489Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2021-10-28T09:54:41,502Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418) {}
[INFO ] 2021-10-28T09:54:41,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418), owningKey=DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML {}
[INFO ] 2021-10-28T09:54:41,502Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:41,502Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418), owningKey=DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML {}
[INFO ] 2021-10-28T09:54:41,502Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:41,513Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/1/cordapps] {}
[INFO ] 2021-10-28T09:54:41,513Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:41,513Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:41,522Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:41,554Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:41,556Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:41,556Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:41,593Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:41,593Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,600Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,601Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,601Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,601Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:41,601Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,601Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:41,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:40.671Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:41,991Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:41,992Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:41,992Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:42,093Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:42,098Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:42,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098), owningKey=DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv {}
[INFO ] 2021-10-28T09:54:42,100Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:42,105Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098) {}
[INFO ] 2021-10-28T09:54:42,109Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:42,110Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:42,111Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:42,114Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098), owningKey=DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv {}
[INFO ] 2021-10-28T09:54:42,114Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:42,145Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:42,147Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:42,147Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:42,148Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:42,151Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:42,164Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098) {}
[INFO ] 2021-10-28T09:54:42,166Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418), owningKey=DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML {}
[INFO ] 2021-10-28T09:54:42,166Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:42,174Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098), owningKey=DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv {}
[INFO ] 2021-10-28T09:54:42,174Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:42,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098), owningKey=DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv {}
[INFO ] 2021-10-28T09:54:42,181Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:42,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098), owningKey=DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv {}
[INFO ] 2021-10-28T09:54:42,181Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:42,190Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/2/cordapps] {}
[INFO ] 2021-10-28T09:54:42,191Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:42,191Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:42,198Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:42,228Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:42,229Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:42,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:42,260Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:42,261Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,268Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:42,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,269Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,273Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:40.671Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:42,675Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:42,677Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:42,677Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:42,776Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:42,779Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:42,782Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779), owningKey=DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y {}
[INFO ] 2021-10-28T09:54:42,782Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:42,786Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779) {}
[INFO ] 2021-10-28T09:54:42,791Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:42,794Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:42,795Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:42,796Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779), owningKey=DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y {}
[INFO ] 2021-10-28T09:54:42,796Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:42,831Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:42,833Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:42,833Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:42,834Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:42,839Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:42,853Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779) {}
[INFO ] 2021-10-28T09:54:42,854Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418), owningKey=DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML {}
[INFO ] 2021-10-28T09:54:42,854Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:42,861Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779), owningKey=DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y {}
[INFO ] 2021-10-28T09:54:42,861Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:42,868Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098), owningKey=DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv {}
[INFO ] 2021-10-28T09:54:42,868Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:42,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779), owningKey=DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y {}
[INFO ] 2021-10-28T09:54:42,875Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:42,882Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779), owningKey=DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y {}
[INFO ] 2021-10-28T09:54:42,882Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:42,882Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779), owningKey=DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y {}
[INFO ] 2021-10-28T09:54:42,882Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:42,890Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/3/cordapps] {}
[INFO ] 2021-10-28T09:54:42,890Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2021-10-28T09:54:42,891Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2021-10-28T09:54:42,897Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/manish.kumar1/chainthat/code/apacweek/cbdc/wholesaleCBDC/workflows/build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2021-10-28T09:54:42,925Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:42,927Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-10-28T09:54:42,928Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-10-28T09:54:42,962Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2021-10-28T09:54:42,963Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB, alias: identity-private-key {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,968Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2021-10-28T09:54:42,969Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=52428800
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT51539607528H
      packageOwnership {
        
      }
      modifiedTime=2021-10-28T09:54:40.671Z
      epoch=1
  } {}
[INFO ] 2021-10-28T09:54:43,359Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-10-28T09:54:43,360Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:43,360Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:43,447Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2021-10-28T09:54:43,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-10-28T09:54:43,454Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452), owningKey=DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB {}
[INFO ] 2021-10-28T09:54:43,454Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:43,458Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452) {}
[INFO ] 2021-10-28T09:54:43,463Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-10-28T09:54:43,464Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-10-28T09:54:43,464Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-10-28T09:54:43,468Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452), owningKey=DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB {}
[INFO ] 2021-10-28T09:54:43,468Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:43,495Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2021-10-28T09:54:43,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2021-10-28T09:54:43,497Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20211028-095440.672-C684B928F91A8E33/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2021-10-28T09:54:43,498Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2021-10-28T09:54:43,501Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2021-10-28T09:54:43,513Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452) {}
[INFO ] 2021-10-28T09:54:43,515Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=10, serial=1635414881418), owningKey=DL4nazie59L5Gyb7N7AENLZLeKa37QRxj2uA56Bu9RZYML {}
[INFO ] 2021-10-28T09:54:43,515Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-10-28T09:54:43,523Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452), owningKey=DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB {}
[INFO ] 2021-10-28T09:54:43,523Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:43,530Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=UK Mint, L=London, C=GB], platformVersion=10, serial=1635414882098), owningKey=DLBhs42QQu1MNekNVBfPkPhfZyqvDNsk2aEhANfyDajYKv {}
[INFO ] 2021-10-28T09:54:43,530Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=UK Mint, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:43,537Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452), owningKey=DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB {}
[INFO ] 2021-10-28T09:54:43,537Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:43,544Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Abbey, L=London, C=GB], platformVersion=10, serial=1635414882779), owningKey=DLGhzCYwC3xxHrmYHz6Bm92aaAZWPpPgdgEJjk3jnorr9y {}
[INFO ] 2021-10-28T09:54:43,544Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Abbey, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:43,551Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452), owningKey=DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB {}
[INFO ] 2021-10-28T09:54:43,551Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=HSBC, L=London, C=GB {}
[INFO ] 2021-10-28T09:54:43,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452), owningKey=DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB {}
[INFO ] 2021-10-28T09:54:43,557Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:43,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=HSBC, L=London, C=GB], platformVersion=10, serial=1635414883452), owningKey=DL7c3KX19bcKf7oKeGxV26o6WLHZkmrM6uKSU6DizpnFEB {}
[INFO ] 2021-10-28T09:54:43,557Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-10-28T09:54:43,651Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000018, flow-id=f8520cdf-74db-4afc-ac91-cdf2f2475ad1, invocation_id=093a4a51-c151-41ce-a03f-5503db22720e, invocation_timestamp=2021-10-28T09:54:43.558Z, origin=Only For Testing, session_id=093a4a51-c151-41ce-a03f-5503db22720e, session_timestamp=2021-10-28T09:54:43.558Z, thread-id=603, tx_id=AF2E6A4A383ED3013D73C00F71B02EEE58CFA0120CD119060B209E70A0CDF651}
[INFO ] 2021-10-28T09:54:43,651Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000018, flow-id=f8520cdf-74db-4afc-ac91-cdf2f2475ad1, invocation_id=093a4a51-c151-41ce-a03f-5503db22720e, invocation_timestamp=2021-10-28T09:54:43.558Z, origin=Only For Testing, session_id=093a4a51-c151-41ce-a03f-5503db22720e, session_timestamp=2021-10-28T09:54:43.558Z, thread-id=603, tx_id=AF2E6A4A383ED3013D73C00F71B02EEE58CFA0120CD119060B209E70A0CDF651}
[INFO ] 2021-10-28T09:54:43,669Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000018, flow-id=f8520cdf-74db-4afc-ac91-cdf2f2475ad1, invocation_id=093a4a51-c151-41ce-a03f-5503db22720e, invocation_timestamp=2021-10-28T09:54:43.558Z, origin=Only For Testing, session_id=093a4a51-c151-41ce-a03f-5503db22720e, session_timestamp=2021-10-28T09:54:43.558Z, thread-id=603, tx_id=AF2E6A4A383ED3013D73C00F71B02EEE58CFA0120CD119060B209E70A0CDF651}
[INFO ] 2021-10-28T09:54:43,669Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000018, flow-id=f8520cdf-74db-4afc-ac91-cdf2f2475ad1, invocation_id=093a4a51-c151-41ce-a03f-5503db22720e, invocation_timestamp=2021-10-28T09:54:43.558Z, origin=Only For Testing, session_id=093a4a51-c151-41ce-a03f-5503db22720e, session_timestamp=2021-10-28T09:54:43.558Z, thread-id=603, tx_id=AF2E6A4A383ED3013D73C00F71B02EEE58CFA0120CD119060B209E70A0CDF651}
[INFO ] 2021-10-28T09:54:43,734Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=7227af24-c69e-48fb-91ce-3ba061515253, invocation_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, invocation_timestamp=2021-10-28T09:54:43.679Z, origin=Only For Testing, session_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, session_timestamp=2021-10-28T09:54:43.679Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:43,761Z [Mock network] corda.flow. - Received a notarisation request for Tx [B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75] from [O=UK Mint, L=London, C=GB] {fiber-id=10000020, flow-id=4560cfb9-bef0-4c70-92cf-b2df59047136, invocation_id=dcaba3cf-8598-446d-9993-4220c37ab75e, invocation_timestamp=2021-10-28T09:54:43.749Z, origin=O=UK Mint, L=London, C=GB, session_id=dcaba3cf-8598-446d-9993-4220c37ab75e, session_timestamp=2021-10-28T09:54:43.749Z, thread-id=603}
[INFO ] 2021-10-28T09:54:44,329Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2021-10-28T09:54:44,333Z [Mock network] corda.flow. - Transaction [B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75] successfully notarised, sending signature back to [O=UK Mint, L=London, C=GB] {fiber-id=10000020, flow-id=4560cfb9-bef0-4c70-92cf-b2df59047136, invocation_id=dcaba3cf-8598-446d-9993-4220c37ab75e, invocation_timestamp=2021-10-28T09:54:43.749Z, origin=O=UK Mint, L=London, C=GB, session_id=dcaba3cf-8598-446d-9993-4220c37ab75e, session_timestamp=2021-10-28T09:54:43.749Z, thread-id=603}
[INFO ] 2021-10-28T09:54:44,353Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=7227af24-c69e-48fb-91ce-3ba061515253, invocation_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, invocation_timestamp=2021-10-28T09:54:43.679Z, origin=Only For Testing, session_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, session_timestamp=2021-10-28T09:54:43.679Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,354Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=7227af24-c69e-48fb-91ce-3ba061515253, invocation_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, invocation_timestamp=2021-10-28T09:54:43.679Z, origin=Only For Testing, session_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, session_timestamp=2021-10-28T09:54:43.679Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,365Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=7227af24-c69e-48fb-91ce-3ba061515253, invocation_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, invocation_timestamp=2021-10-28T09:54:43.679Z, origin=Only For Testing, session_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, session_timestamp=2021-10-28T09:54:43.679Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,382Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=UK Mint, L=London, C=GB. {fiber-id=10000021, flow-id=e00c7836-e12d-4864-a2a1-c6b7e4703246, invocation_id=4fcebfb2-2985-4982-8b81-1ff77776465c, invocation_timestamp=2021-10-28T09:54:43.775Z, origin=O=UK Mint, L=London, C=GB, session_id=4fcebfb2-2985-4982-8b81-1ff77776465c, session_timestamp=2021-10-28T09:54:43.775Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,465Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000021, flow-id=e00c7836-e12d-4864-a2a1-c6b7e4703246, invocation_id=4fcebfb2-2985-4982-8b81-1ff77776465c, invocation_timestamp=2021-10-28T09:54:43.775Z, origin=O=UK Mint, L=London, C=GB, session_id=4fcebfb2-2985-4982-8b81-1ff77776465c, session_timestamp=2021-10-28T09:54:43.775Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,471Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000021, flow-id=e00c7836-e12d-4864-a2a1-c6b7e4703246, invocation_id=4fcebfb2-2985-4982-8b81-1ff77776465c, invocation_timestamp=2021-10-28T09:54:43.775Z, origin=O=UK Mint, L=London, C=GB, session_id=4fcebfb2-2985-4982-8b81-1ff77776465c, session_timestamp=2021-10-28T09:54:43.775Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,480Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000021, flow-id=e00c7836-e12d-4864-a2a1-c6b7e4703246, invocation_id=4fcebfb2-2985-4982-8b81-1ff77776465c, invocation_timestamp=2021-10-28T09:54:43.775Z, origin=O=UK Mint, L=London, C=GB, session_id=4fcebfb2-2985-4982-8b81-1ff77776465c, session_timestamp=2021-10-28T09:54:43.775Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,489Z [Mock network] corda.flow. - Party O=Abbey, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=7227af24-c69e-48fb-91ce-3ba061515253, invocation_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, invocation_timestamp=2021-10-28T09:54:43.679Z, origin=Only For Testing, session_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, session_timestamp=2021-10-28T09:54:43.679Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,489Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=UK Mint, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=7227af24-c69e-48fb-91ce-3ba061515253, invocation_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, invocation_timestamp=2021-10-28T09:54:43.679Z, origin=Only For Testing, session_id=3fc50fc6-ee62-49f6-9fe9-9bff5b5b8083, session_timestamp=2021-10-28T09:54:43.679Z, thread-id=603, tx_id=B539BE18704F671F33B25BAF10301335EC7AA7D0A955DBAE57A8928C10007C75}
[INFO ] 2021-10-28T09:54:44,501Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2021-10-28T09:54:44,510Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:44,510Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:44,511Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2021-10-28T09:54:44,519Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:44,519Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:44,520Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2021-10-28T09:54:44,528Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:44,528Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-10-28T09:54:44,528Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2021-10-28T09:54:44,541Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2021-10-28T09:54:44,541Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
